{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Directions.js\";\n\n/*global google*/\nimport React, { Component } from \"react\";\nimport { DirectionsRenderer } from \"@react-google-maps/api\";\nimport Form from \"react-bootstrap/Form\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport * as data from \".././data/db-stops.json\";\nconst rawData = data.results; // const directionsService = new google.maps.DirectionsService();\n// need to store the geo data here\n\nconst nameOfStops = rawData.map(stop => ({\n  label: \"Stop \" + stop.stopid + \", \" + stop.fullname,\n  id: parseInt(stop.stopid)\n}));\n\nclass Directions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      directions: null,\n      selected: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formDeparture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Departure\"), /*#__PURE__*/React.createElement(Typeahead, Object.assign({}, this.state, {\n      id: \"basic-example\",\n      onChange: selected => this.setState({\n        selected\n      }),\n      options: nameOfStops // console={console.log(this.state.selected[0])}\n      ,\n      placeholder: \"Choose a departure stop...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formArrival\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Arrival\"), /*#__PURE__*/React.createElement(Typeahead, Object.assign({}, this.state, {\n      id: \"basic-example\",\n      onChange: selected => this.setState({\n        selected\n      }),\n      options: nameOfStops,\n      placeholder: \"Choose an arrival stop...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(DirectionsRenderer, {\n      directions: this.state.directions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Directions;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Directions.js"],"names":["React","Component","DirectionsRenderer","Form","Typeahead","data","rawData","results","nameOfStops","map","stop","label","stopid","fullname","id","parseInt","Directions","state","directions","selected","render","setState"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AAEA,OAAO,KAAKC,IAAZ,MAAsB,yBAAtB;AAEA,MAAMC,OAAO,GAAGD,IAAI,CAACE,OAArB,C,CACA;AAEA;;AACA,MAAMC,WAAW,GAAGF,OAAO,CAACG,GAAR,CAAaC,IAAD,KAAW;AACzCC,EAAAA,KAAK,EAAE,UAAUD,IAAI,CAACE,MAAf,GAAwB,IAAxB,GAA+BF,IAAI,CAACG,QADF;AAEzCC,EAAAA,EAAE,EAAEC,QAAQ,CAACL,IAAI,CAACE,MAAN;AAF6B,CAAX,CAAZ,CAApB;;AAKA,MAAMI,UAAN,SAAyBf,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCgB,KADiC,GACzB;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADyB;AAAA;;AAMjCC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,SAAD,oBACM,KAAKH,KADX;AAEE,MAAA,EAAE,EAAC,eAFL;AAGE,MAAA,QAAQ,EAAGE,QAAD,IAAc,KAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd,CAH1B;AAIE,MAAA,OAAO,EAAEX,WAJX,CAKE;AALF;AAME,MAAA,WAAW,EAAC,4BANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF,eAYE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,SAAD,oBACM,KAAKS,KADX;AAEE,MAAA,EAAE,EAAC,eAFL;AAGE,MAAA,QAAQ,EAAGE,QAAD,IAAc,KAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd,CAH1B;AAIE,MAAA,OAAO,EAAEX,WAJX;AAKE,MAAA,WAAW,EAAC,2BALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CAZF,eAsBE,oBAAC,kBAAD;AAAoB,MAAA,UAAU,EAAE,KAAKS,KAAL,CAAWC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,CADF;AA0BD;;AAjCgC;;AAoCnC,eAAeF,UAAf","sourcesContent":["/*global google*/\nimport React, { Component } from \"react\";\nimport { DirectionsRenderer } from \"@react-google-maps/api\";\nimport Form from \"react-bootstrap/Form\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport * as data from \".././data/db-stops.json\";\n\nconst rawData = data.results;\n// const directionsService = new google.maps.DirectionsService();\n\n// need to store the geo data here\nconst nameOfStops = rawData.map((stop) => ({\n  label: \"Stop \" + stop.stopid + \", \" + stop.fullname,\n  id: parseInt(stop.stopid),\n}));\n\nclass Directions extends Component {\n  state = {\n    directions: null,\n    selected: [],\n  };\n\n  render() {\n    return (\n      <Form>\n        <Form.Group controlId=\"formDeparture\">\n          <Form.Label>Departure</Form.Label>\n          <Typeahead\n            {...this.state}\n            id=\"basic-example\"\n            onChange={(selected) => this.setState({ selected })}\n            options={nameOfStops}\n            // console={console.log(this.state.selected[0])}\n            placeholder=\"Choose a departure stop...\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formArrival\">\n          <Form.Label>Arrival</Form.Label>\n          <Typeahead\n            {...this.state}\n            id=\"basic-example\"\n            onChange={(selected) => this.setState({ selected })}\n            options={nameOfStops}\n            placeholder=\"Choose an arrival stop...\"\n          />\n        </Form.Group>\n        <DirectionsRenderer directions={this.state.directions} />\n      </Form>\n    );\n  }\n}\n\nexport default Directions;\n"]},"metadata":{},"sourceType":"module"}