{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\n// Importing outside developed components.\nimport React, { useState } from \"react\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({\n    message: \"\"\n  });\n  const [modelResponse, setModelResponse] = useState();\n  const [percentileResponse, setPercentileResponse] = useState();\n  console.log(\"hi route (in ModelApi)\", props.routeSelect[0]); // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n  React.useEffect(() => {\n    if (props.routeSelect[0] === undefined || props.directionSelect === undefined) {\n      // initial render should be nothing.\n      return undefined;\n    } else axios.get(`/api/model_result`, {\n      params: {\n        chosenRoute: props.routeSelect[0],\n        chosenDirection: props.directionSelect,\n        chosenTime: props.timeDayMonth[0],\n        chosenDay: props.timeDayMonth[1],\n        chosenMonth: props.timeDayMonth[2]\n      }\n    }).then(res => {\n      const modelResponse = res.data;\n      setModelResponse(modelResponse);\n      console.log(\"setModelResponse has been triggered with the following values: \", props.routeSelect[0], props.directionSelect, props.timeDayMonth[0], props.timeDayMonth[1], props.timeDayMonth[2]);\n    });\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  [props]);\n  React.useEffect(() => {\n    // Making sure nothing is renedered until stops have been chosen.\n    if (parseInt(props.originNumber) === 0 || parseInt(props.destinationNumber) === 0) {\n      // initial render should be nothing.\n      return undefined;\n    } else axios.get(`/api/percentile_result`, {\n      params: {\n        chosenRoute: props.routeSelect[0],\n        chosenDirection: props.directionSelect,\n        chosenTime: props.timeDayMonth[0],\n        chosenDay: props.timeDayMonth[1],\n        // chosenMonth: props.timeDayMonth[2],\n        origin: props.originNumber,\n        destination: props.destinationNumber,\n        modelResponse: modelResponse.model_response\n      }\n    }).then(res => {\n      const percentileResponse = res.data;\n      setPercentileResponse(percentileResponse);\n\n      if (parseInt(percentileResponse.percentile_response) < 0) {\n        setMessage({\n          message: \"Please enter a correct combination of stops\"\n        });\n      } else if (parseInt(percentileResponse.percentile_response) === 1) {\n        setMessage({\n          message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minute.\"\n        });\n      } else {\n        setMessage({\n          message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minutes.\"\n        });\n      }\n\n      console.log(\"setPercentileResponse has been triggered with the following values: \", props.timeDayMonth[0], props.timeDayMonth[1], props.originNumber, props.destinationNumber, modelResponse.model_response);\n    });\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  [props] // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n  // TODO - Receiving the above error, find a fix.\n  );\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, message.message));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","useState","axios","require","ModelApi","props","message","setMessage","modelResponse","setModelResponse","percentileResponse","setPercentileResponse","console","log","routeSelect","useEffect","undefined","directionSelect","get","params","chosenRoute","chosenDirection","chosenTime","timeDayMonth","chosenDay","chosenMonth","then","res","data","parseInt","originNumber","destinationNumber","origin","destination","model_response","percentile_response"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({ message: \"\" });\n  const [modelResponse, setModelResponse] = useState();\n  const [percentileResponse, setPercentileResponse] = useState();\n  console.log(\"hi route (in ModelApi)\", props.routeSelect[0]);\n\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (\n        props.routeSelect[0] === undefined ||\n        props.directionSelect === undefined\n      ) {\n        // initial render should be nothing.\n        return undefined;\n      } else\n        axios\n          .get(`/api/model_result`, {\n            params: {\n              chosenRoute: props.routeSelect[0],\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              chosenMonth: props.timeDayMonth[2],\n            },\n          })\n          .then((res) => {\n            const modelResponse = res.data;\n            setModelResponse(modelResponse);\n\n            console.log(\n              \"setModelResponse has been triggered with the following values: \",\n              props.routeSelect[0],\n              props.directionSelect,\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.timeDayMonth[2]\n            );\n          });\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    [props]\n  );\n\n  React.useEffect(\n    () => {\n      // Making sure nothing is renedered until stops have been chosen.\n      if (\n        parseInt(props.originNumber) === 0 ||\n        parseInt(props.destinationNumber) === 0\n      ) {\n        // initial render should be nothing.\n        return undefined;\n      } else\n        axios\n          .get(`/api/percentile_result`, {\n            params: {\n              chosenRoute: props.routeSelect[0],\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              // chosenMonth: props.timeDayMonth[2],\n              origin: props.originNumber,\n              destination: props.destinationNumber,\n              modelResponse: modelResponse.model_response,\n            },\n          })\n          .then((res) => {\n            const percentileResponse = res.data;\n            setPercentileResponse(percentileResponse);\n            if (parseInt(percentileResponse.percentile_response) < 0) {\n              setMessage({\n                message: \"Please enter a correct combination of stops\",\n              });\n            } else if (parseInt(percentileResponse.percentile_response) === 1) {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minute.\",\n              });\n            } else {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minutes.\",\n              });\n            }\n\n            console.log(\n              \"setPercentileResponse has been triggered with the following values: \",\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.originNumber,\n              props.destinationNumber,\n              modelResponse.model_response\n            );\n          });\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    [props]\n    // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n    // TODO - Receiving the above error, find a fix.\n  );\n\n  return (\n    <div>\n      <p>{message.message}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}