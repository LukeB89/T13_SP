{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Directions.js\";\nimport React from \"react\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\n\nconst {\n  Component\n} = require(\"react\");\n\nconst {\n  DirectionsRenderer,\n  DirectionsService,\n  Autocomplete\n} = require(\"@react-google-maps/api\"); // // consts: [53.349804, -6.260310] - Dublin\n// const bounds = {\n//   lat: 53.349804,\n//   lng: -6.26031,\n// };\n// const shit = new window.google.map.LatLng(53.349804, -6.26031);\n\n\nclass Directions extends Component {\n  constructor(props) {\n    super(props);\n    this.myLatLng = new window.google.maps.LatLng({\n      lat: 53.349804,\n      lng: -6.26031\n    });\n    this.state = {\n      response: null,\n      travelMode: \"TRANSIT\",\n      origin: \"\",\n      destination: \"\"\n    };\n    this.directionsCallback = this.directionsCallback.bind(this);\n    this.getOrigin = this.getOrigin.bind(this);\n    this.getDestination = this.getDestination.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onMapClick = this.onMapClick.bind(this);\n    this.autocomplete = null;\n    this.onLoad = this.onLoad.bind(this);\n    this.onPlaceChanged = this.onPlaceChanged.bind(this);\n  }\n\n  directionsCallback(response) {\n    console.log(\"hi, \", response);\n\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        this.setState(() => ({\n          response\n        }));\n      } else {\n        console.log(\"response: \", response);\n      }\n    }\n  }\n\n  getOrigin(ref) {\n    this.origin = ref;\n  }\n\n  getDestination(ref) {\n    this.destination = ref;\n  }\n\n  onClick() {\n    if (this.origin.value !== \"\" && this.destination.value !== \"\") {\n      this.setState(() => ({\n        origin: this.origin.value,\n        destination: this.destination.value\n      }));\n    }\n  }\n\n  onMapClick(...args) {\n    console.log(\"onClick args: \", args);\n  }\n\n  onLoad(autocomplete) {\n    console.log(\"autocomplete: \", autocomplete);\n    this.autocomplete = autocomplete;\n  }\n\n  onPlaceChanged() {\n    if (this.autocomplete !== null) {\n      console.log(this.autocomplete.getPlace());\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PlaceSearch, {\n      ref: this.getOrigin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"DESTINATION\",\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Destination\",\n      ref: this.getDestination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"button\",\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \"Build Route\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, this.state.destination !== \"\" && this.state.origin !== \"\" && /*#__PURE__*/React.createElement(DirectionsService // required\n    , {\n      options: {\n        destination: this.state.destination,\n        origin: this.state.origin,\n        travelMode: this.state.travelMode\n      } // required\n      ,\n      callback: this.directionsCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }), this.state.response !== null && /*#__PURE__*/React.createElement(DirectionsRenderer // required\n    , {\n      options: {\n        directions: this.state.response\n      },\n      panel: document.getElementById(\"panel\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Directions;\n\nfunction PlaceSearch() {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 53.349804,\n        lng: () => -6.26031\n      },\n      radius: 100 * 1000\n    }\n  }); // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async address => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n    } catch (error) {\n      console.log(\"ðŸ˜± Error: \", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: handleInput,\n    disabled: !ready,\n    placeholder: \"Search your location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, status === \"OK\" && data.map(({\n    id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Directions.js"],"names":["React","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","Component","require","DirectionsRenderer","DirectionsService","Autocomplete","Directions","constructor","props","myLatLng","window","google","maps","LatLng","lat","lng","state","response","travelMode","origin","destination","directionsCallback","bind","getOrigin","getDestination","onClick","onMapClick","autocomplete","onLoad","onPlaceChanged","console","log","status","setState","ref","value","args","getPlace","render","directions","document","getElementById","PlaceSearch","ready","suggestions","data","setValue","clearSuggestions","requestOptions","location","radius","handleInput","e","target","handleSelect","address","results","error","map","id","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\nconst { Component } = require(\"react\");\nconst {\n  DirectionsRenderer,\n  DirectionsService,\n  Autocomplete,\n} = require(\"@react-google-maps/api\");\n\n// // consts: [53.349804, -6.260310] - Dublin\n// const bounds = {\n//   lat: 53.349804,\n//   lng: -6.26031,\n// };\n\n// const shit = new window.google.map.LatLng(53.349804, -6.26031);\n\nclass Directions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      travelMode: \"TRANSIT\",\n      origin: \"\",\n      destination: \"\",\n    };\n\n    this.directionsCallback = this.directionsCallback.bind(this);\n    this.getOrigin = this.getOrigin.bind(this);\n    this.getDestination = this.getDestination.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onMapClick = this.onMapClick.bind(this);\n\n    this.autocomplete = null;\n\n    this.onLoad = this.onLoad.bind(this);\n    this.onPlaceChanged = this.onPlaceChanged.bind(this);\n  }\n\n  directionsCallback(response) {\n    console.log(\"hi, \", response);\n\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        this.setState(() => ({\n          response,\n        }));\n      } else {\n        console.log(\"response: \", response);\n      }\n    }\n  }\n\n  getOrigin(ref) {\n    this.origin = ref;\n  }\n\n  getDestination(ref) {\n    this.destination = ref;\n  }\n\n  onClick() {\n    if (this.origin.value !== \"\" && this.destination.value !== \"\") {\n      this.setState(() => ({\n        origin: this.origin.value,\n        destination: this.destination.value,\n      }));\n    }\n  }\n\n  onMapClick(...args) {\n    console.log(\"onClick args: \", args);\n  }\n\n  onLoad(autocomplete) {\n    console.log(\"autocomplete: \", autocomplete);\n\n    this.autocomplete = autocomplete;\n  }\n\n  onPlaceChanged() {\n    if (this.autocomplete !== null) {\n      console.log(this.autocomplete.getPlace());\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  }\n\n  myLatLng = new window.google.maps.LatLng({ lat: 53.349804, lng: -6.26031 });\n\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"boxes\">\n          <div className=\"row\">\n            {/* <div className=\"col-md-6 col-lg-4\">\n              <div className=\"\">\n                <input\n                  id=\"ORIGIN\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Origin\"\n                  ref={this.getOrigin}\n                />\n              </div>\n            </div> */}\n            <PlaceSearch ref={this.getOrigin} />\n            <div className=\"col-md-6 col-lg-4\">\n              <div className=\"\">\n                <input\n                  id=\"DESTINATION\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Destination\"\n                  ref={this.getDestination}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-6 col-lg-4\">\n              <div className=\"\">\n                <button\n                  className=\"btn btn-primary\"\n                  type=\"button\"\n                  onClick={this.onClick}\n                >\n                  Build Route\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"map-container\">\n          {this.state.destination !== \"\" && this.state.origin !== \"\" && (\n            <DirectionsService\n              // required\n              options={{\n                destination: this.state.destination,\n                origin: this.state.origin,\n                travelMode: this.state.travelMode,\n              }}\n              // required\n              callback={this.directionsCallback}\n            />\n          )}\n\n          {this.state.response !== null && (\n            <DirectionsRenderer\n              // required\n              options={{\n                directions: this.state.response,\n              }}\n              panel={document.getElementById(\"panel\")}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Directions;\n\nfunction PlaceSearch() {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 53.349804, lng: () => -6.26031 },\n      radius: 100 * 1000,\n    },\n  });\n\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n    } catch (error) {\n      console.log(\"ðŸ˜± Error: \", error);\n    }\n  };\n\n  return (\n    <div className=\"search\">\n      <Combobox onSelect={handleSelect}>\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          placeholder=\"Search your location\"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}