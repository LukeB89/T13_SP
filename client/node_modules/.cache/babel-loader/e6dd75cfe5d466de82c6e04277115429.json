{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/App.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport T13GoogleMap from \"./components/T13GoogleMap\"; // import Api from \"./components/Api\";\n\nimport DateTimeSelector from \"./components/DateTimeSelector\";\nimport BrandBar from \"./components/BrandBar\";\nimport LocationForms from \"./components/Location Forms\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`; // In order to conditionally render the Questions on click, we add an onClick method to\n// App.js, which toggles between true and false for the state value of displayQuestions:\n\ndisplayQuestion = () => {\n  this.setState({\n    displayQuestions: !this.state.displayQuestions\n  });\n};\n\nexport default function App() {\n  const renderPage = () => {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BrandBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Wrapper, {\n      style: {\n        width: \"75%\",\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(T13GoogleMap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Wrapper, {\n      style: {\n        width: \"25%\",\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      style: {\n        paddingTop: \"15vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DateTimeSelector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(LocationForms, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Submit\"))));\n  };\n\n  return renderPage();\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/App.js"],"names":["React","styled","Button","Container","T13GoogleMap","DateTimeSelector","BrandBar","LocationForms","Wrapper","main","displayQuestion","setState","displayQuestions","state","App","renderPage","width","float","paddingTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,OAAO,sCAAP;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,IAAK;;;CAA5B,C,CAKA;AACA;;AAEAC,eAAe,GAAG,MAAM;AACtB,OAAKC,QAAL,CAAc;AACZC,IAAAA,gBAAgB,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADlB,GAAd;AAGD,CAJD;;AAMA,eAAe,SAASE,GAAT,GAAe;AAC5B,QAAMC,UAAU,GAAG,MAAM;AACvB,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,eAME,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,OAAO,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CANF,CADF;AAmBD,GApBD;;AAsBA,SAAOH,UAAU,EAAjB;AACD","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"react-bootstrap/Button\";\n\nimport Container from \"react-bootstrap/Container\";\nimport T13GoogleMap from \"./components/T13GoogleMap\";\n// import Api from \"./components/Api\";\nimport DateTimeSelector from \"./components/DateTimeSelector\";\nimport BrandBar from \"./components/BrandBar\";\nimport LocationForms from \"./components/Location Forms\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\n// In order to conditionally render the Questions on click, we add an onClick method to\n// App.js, which toggles between true and false for the state value of displayQuestions:\n\ndisplayQuestion = () => {\n  this.setState({\n    displayQuestions: !this.state.displayQuestions,\n  });\n};\n\nexport default function App() {\n  const renderPage = () => {\n    return (\n      <Container fluid>\n        <BrandBar></BrandBar>\n        <Wrapper style={{ width: \"75%\", float: \"left\" }}>\n          <T13GoogleMap></T13GoogleMap>\n        </Wrapper>\n\n        <Wrapper style={{ width: \"25%\", float: \"right\" }}>\n          <Container style={{ paddingTop: \"15vh\" }}>\n            <DateTimeSelector></DateTimeSelector>\n            <LocationForms></LocationForms>\n            <Button variant=\"primary\" type=\"submit\" onClick>\n              Submit\n            </Button>\n            {/* <Api></Api> */}\n          </Container>\n        </Wrapper>\n      </Container>\n    );\n  };\n\n  return renderPage();\n}\n"]},"metadata":{},"sourceType":"module"}