{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/RealTimeApi.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\"; // import axios from \"axios\";\n\nconst axios = require(\"axios\"); // axios.get(\"/api/real_time_api\").then((resp) => {\n//   console.log(\"pool\", resp.data);\n//   console.log(\"hoo\", resp.data.response_text);\n// });\n// const Axios = (props) => {\n//   const [state, setState] = useState([]);\n//   useEffect(() => {\n//     axios.get(\"/api/real_time_api\").then((res) => setState(res.data));\n//   }, []);\n//   console.log(\"Boo loo\", state.results);\n//   return (\n//     <div>\n//       <p>Information from rtpi:</p>\n//     </div>\n//   );\n// };\n\n\nconst Axios = () => {\n  const [rawStopData, setRawStopData] = useState({\n    results: [{\n      arrivaldatetime: \"08/07/2020 00:00:00\",\n      route: \"\",\n      destination: \"\",\n      duetime: \"\"\n    }]\n  });\n  console.log(\"before assign\", rawStopData);\n  React.useEffect(() => {\n    axios.get(`/api/real_time_api`).then(res => {\n      const rawStopData = res.data;\n      console.log(\"after assign\", rawStopData);\n      setRawStopData(rawStopData);\n    });\n  });\n  const stopData = rawStopData.results;\n  const realInfo = stopData.map(info => ({\n    id: info.arrivaldatetime,\n    route: info.route,\n    destination: info.destination,\n    arrivaltime: info.duetime\n  }));\n\n  if (realInfo === []) {\n    const realInfo = {\n      results: [{\n        arrivaldatetime: \"08/07/2020 00:00:00\",\n        route: \"\",\n        destination: \"\",\n        duetime: \"\"\n      }]\n    };\n  }\n\n  console.log(\"usable data\", realInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxHeight: \"15vh\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Route\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Destination\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Arrival (mins)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, realInfo.map(info => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: info.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, info.route), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, info.destination), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, info.arrivaltime));\n  }))));\n};\n\nexport default Axios;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/RealTimeApi.js"],"names":["React","useState","useEffect","Table","axios","require","Axios","rawStopData","setRawStopData","results","arrivaldatetime","route","destination","duetime","console","log","get","then","res","data","stopData","realInfo","map","info","id","arrivaltime","maxHeight","overflowY"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\";\n// import axios from \"axios\";\n\nconst axios = require(\"axios\");\n\n// axios.get(\"/api/real_time_api\").then((resp) => {\n//   console.log(\"pool\", resp.data);\n//   console.log(\"hoo\", resp.data.response_text);\n// });\n\n// const Axios = (props) => {\n//   const [state, setState] = useState([]);\n//   useEffect(() => {\n//     axios.get(\"/api/real_time_api\").then((res) => setState(res.data));\n//   }, []);\n\n//   console.log(\"Boo loo\", state.results);\n\n//   return (\n//     <div>\n//       <p>Information from rtpi:</p>\n//     </div>\n//   );\n// };\n\nconst Axios = () => {\n  const [rawStopData, setRawStopData] = useState({\n    results: [\n      {\n        arrivaldatetime: \"08/07/2020 00:00:00\",\n        route: \"\",\n        destination: \"\",\n        duetime: \"\",\n      },\n    ],\n  });\n\n  console.log(\"before assign\", rawStopData);\n\n  React.useEffect(() => {\n    axios.get(`/api/real_time_api`).then((res) => {\n      const rawStopData = res.data;\n      console.log(\"after assign\", rawStopData);\n      setRawStopData(rawStopData);\n    });\n  });\n\n  const stopData = rawStopData.results;\n  const realInfo = stopData.map((info) => ({\n    id: info.arrivaldatetime,\n    route: info.route,\n    destination: info.destination,\n    arrivaltime: info.duetime,\n  }));\n  if (realInfo === []) {\n    const realInfo = {\n      results: [\n        {\n          arrivaldatetime: \"08/07/2020 00:00:00\",\n          route: \"\",\n          destination: \"\",\n          duetime: \"\",\n        },\n      ],\n    };\n  }\n  console.log(\"usable data\", realInfo);\n\n  return (\n    <div style={{ maxHeight: \"15vh\", overflowY: \"scroll\" }}>\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Route</th>\n            <th>Destination</th>\n            <th>Arrival (mins)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {realInfo.map((info) => {\n            return (\n              <tr key={info.id}>\n                <td>{info.route}</td>\n                <td>{info.destination}</td>\n                <td>{info.arrivaltime}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Axios;\n"]},"metadata":{},"sourceType":"module"}