{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/PredictionInput.js\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport Form from \"react-bootstrap/Form\";\nimport ModelApi from \"./ModelApi\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \".././styles.css\";\n\nconst PredictionInput = props => {\n  // Importing the Dublin Bus API stops data\n  const dir1Nums46a = require(\"../data/46A_dir1_stops.json\");\n\n  const dir1Stops46a = []; // console.log(dir1Nums46a[0]);\n\n  for (var q = 0; q < props.parsedStops.length; q++) {\n    for (var r = 0; r < dir1Nums46a.length; r++) {\n      // console.log(dir1Nums46a[r]);\n      if (dir1Nums46a[r] == parseInt(props.parsedStops[q].id)) {\n        dir1Stops46a.push(props.parsedStops[q].description); // console.log(\"yay\", props.parsedStops[q].description);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formTimeOfTravel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Time of Travel: \"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: props.selectedTime,\n    onSelect: date => props.timeChoice(date) // onChange={(date) => props.setSelectedTime(date)}\n    // onChange={(date) => props.timeChoice(date)}\n    // Problem here!: if using onSelect, the time value isn't picked up\n    // using onChange means there's a click delay in the values being set.\n    ,\n    showTimeSelect: true,\n    timeFormat: \"HH:mm\",\n    timeIntervals: 60,\n    timeCaption: \"time\",\n    dateFormat: \"MMMM d, yyyy h:mm aa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    style: {\n      paddingTop: \"1vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Route: 46A\"), /*#__PURE__*/React.createElement(Typeahead, {\n    id: \"basic-example\",\n    options: dir1Stops46a,\n    maxVisible: 2,\n    placeholder: \"Choose a departure stop...\",\n    onChange: address => {\n      try {\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(address) === props.parsedStops[i].description) {\n            const id = props.parsedStops[i].id;\n            props.originNumberChoice({\n              id\n            });\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typeahead, {\n    id: \"basic-example\",\n    options: dir1Stops46a,\n    maxVisible: 2,\n    placeholder: \"Choose an arrival stop...\",\n    onChange: address => {\n      try {\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(address) === props.parsedStops[i].description) {\n            const id = props.parsedStops[i].id;\n            props.destinationNumberChoice({\n              id\n            });\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ModelApi, {\n    timeDayMonth: props.timeDayMonth,\n    originNumber: props.originNumber,\n    destinationNumber: props.destinationNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PredictionInput;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/PredictionInput.js"],"names":["React","DatePicker","Typeahead","Form","ModelApi","PredictionInput","props","dir1Nums46a","require","dir1Stops46a","q","parsedStops","length","r","parseInt","id","push","description","selectedTime","date","timeChoice","paddingTop","address","i","String","originNumberChoice","error","console","log","destinationNumberChoice","timeDayMonth","originNumber","destinationNumber"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport Form from \"react-bootstrap/Form\";\nimport ModelApi from \"./ModelApi\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \".././styles.css\";\n\nconst PredictionInput = (props) => {\n  // Importing the Dublin Bus API stops data\n  const dir1Nums46a = require(\"../data/46A_dir1_stops.json\");\n  const dir1Stops46a = [];\n\n  // console.log(dir1Nums46a[0]);\n  for (var q = 0; q < props.parsedStops.length; q++) {\n    for (var r = 0; r < dir1Nums46a.length; r++) {\n      // console.log(dir1Nums46a[r]);\n      if (dir1Nums46a[r] == parseInt(props.parsedStops[q].id)) {\n        dir1Stops46a.push(props.parsedStops[q].description);\n        // console.log(\"yay\", props.parsedStops[q].description);\n      }\n    }\n  }\n\n  return (\n    <Form>\n      <Form.Group controlId=\"formTimeOfTravel\">\n        <Form.Label>Time of Travel: </Form.Label>\n        <DatePicker\n          selected={props.selectedTime}\n          onSelect={(date) => props.timeChoice(date)}\n          // onChange={(date) => props.setSelectedTime(date)}\n          // onChange={(date) => props.timeChoice(date)}\n          // Problem here!: if using onSelect, the time value isn't picked up\n          // using onChange means there's a click delay in the values being set.\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={60}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\n        />\n        <Form.Label style={{ paddingTop: \"1vh\" }}>Route: 46A</Form.Label>\n        <Typeahead\n          id=\"basic-example\"\n          options={dir1Stops46a}\n          maxVisible={2}\n          placeholder=\"Choose a departure stop...\"\n          onChange={(address) => {\n            try {\n              for (var i = 0; i < props.parsedStops.length; i++) {\n                if (String(address) === props.parsedStops[i].description) {\n                  const id = props.parsedStops[i].id;\n                  props.originNumberChoice({ id });\n                }\n              }\n            } catch (error) {\n              console.log(\"ðŸ˜± Error: \", error);\n            }\n          }}\n        />\n        <Typeahead\n          id=\"basic-example\"\n          options={dir1Stops46a}\n          maxVisible={2}\n          placeholder=\"Choose an arrival stop...\"\n          onChange={(address) => {\n            try {\n              for (var i = 0; i < props.parsedStops.length; i++) {\n                if (String(address) === props.parsedStops[i].description) {\n                  const id = props.parsedStops[i].id;\n                  props.destinationNumberChoice({ id });\n                }\n              }\n            } catch (error) {\n              console.log(\"ðŸ˜± Error: \", error);\n            }\n          }}\n        />\n      </Form.Group>\n      <ModelApi\n        timeDayMonth={props.timeDayMonth}\n        originNumber={props.originNumber}\n        destinationNumber={props.destinationNumber}\n      ></ModelApi>\n    </Form>\n  );\n};\n\nexport default PredictionInput;\n"]},"metadata":{},"sourceType":"module"}