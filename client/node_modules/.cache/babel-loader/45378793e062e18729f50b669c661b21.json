{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\n// Importing outside developed components.\nimport React, { useState } from \"react\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({\n    message: \"\",\n    distance: \"\",\n    instructions: \"\",\n    num_stops: 0\n  });\n  const [modelResponse, setModelResponse] = useState({\n    model_response: \"\"\n  }); // eslint-disable-next-line\n\n  const [percentileResponse, setPercentileResponse] = useState(); // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n  // console.log(\"Here is directionSelect in ModelApi\", props.directionSelect);\n\n  const infoArray = [];\n\n  if (props.distance !== null) {\n    if (props.distance.selectedRouteArray[0] !== undefined) {\n      for (var i = 0; i < props.distance.selectedRouteArray.length; i++) {\n        for (var j = 0; j < props.distance.selectedRouteArray[i].legs.length; j++) {\n          for (var k = 0; k < props.distance.selectedRouteArray[i].legs[j].steps.length; k++) {\n            if (String(props.distance.selectedRouteArray[i].legs[j].steps[k].travel_mode) === \"TRANSIT\") {\n              console.log(\"I made it this far\");\n              infoArray.push(props.distance.selectedRouteArray[i].legs[j].distance.text);\n              infoArray.push(props.distance.selectedRouteArray[i].legs[j].steps[k].instructions);\n              infoArray.push(props.distance.selectedRouteArray[i].legs[j].steps[k].transit.headsign);\n              infoArray.push(props.distance.selectedRouteArray[i].legs[j].steps[k].transit.num_stops);\n            }\n          }\n        }\n      }\n    }\n  } // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n\n  React.useEffect(() => {\n    if (String(props.routeSelect) === \"\" || props.directionSelect === undefined) {\n      // initial render should be nothing.\n      console.log(\"ModelApi - model_result (a) has been triggered\");\n      return undefined;\n    } else if (String(props.routeSelect) !== \"46A\") {\n      console.log(\"ModelApi - model_result (b) has been triggered with props.routeSelect:\", String(props.routeSelect));\n      return undefined;\n    } else {\n      // console.log(\"ModelApi has been fucking triggered\");\n      console.log(\"ModelApi - model_result (c) has been triggered with: 1 routeSelect: \", props.routeSelect, \"2: directionSelect\", props.directionSelect);\n      axios.get(`/api/model_result`, {\n        params: {\n          chosenRoute: props.routeSelect,\n          chosenDirection: props.directionSelect,\n          chosenTime: props.timeDayMonth[0],\n          chosenDay: props.timeDayMonth[1],\n          chosenMonth: props.timeDayMonth[2]\n        }\n      }).then(res => {\n        const modelResponse = res.data;\n        setModelResponse(modelResponse);\n        console.log(\"setModelResponse has been triggered with the following values: \", props.routeSelect, props.directionSelect, props.timeDayMonth[0], props.timeDayMonth[1], props.timeDayMonth[2]);\n      });\n    }\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  [props.routeSelect, props.directionSelect, props.timeDayMonth]);\n  React.useEffect(() => {\n    // Making sure nothing is renedered until stops have been chosen.\n    if (props.directionSelect === undefined || String(modelResponse.model_response) === \"\" || props.destinationNumber === 0 || props.originNumber === 0) {\n      console.log(\"ModelApi - percentile_result (a) has been triggered\"); // initial render should be nothing.\n\n      return undefined;\n    } else if (props.routeSelect !== \"46A\") {\n      console.log(\"ModelApi - percentile_result (b) has been triggered with props.routeSelect\", props.routeSelect);\n      setMessage({\n        message: \"Hey\",\n        distance: \"You\",\n        instructions: \"Dude\",\n        num_stops: 0\n      });\n    } else {\n      console.log(\"And here is what ModelApi/percentile_result triggered with: 1 directionSelect: \", props.directionSelect, \"2: modelResponse.model_response\", modelResponse.model_response);\n      axios.get(`/api/percentile_result`, {\n        params: {\n          chosenRoute: props.routeSelect,\n          chosenDirection: props.directionSelect,\n          chosenTime: props.timeDayMonth[0],\n          chosenDay: props.timeDayMonth[1],\n          // chosenMonth: props.timeDayMonth[2],\n          origin: props.originNumber,\n          destination: props.destinationNumber,\n          modelResponse: modelResponse.model_response\n        }\n      }).then(res => {\n        const percentileResponse = res.data;\n        setPercentileResponse(percentileResponse);\n\n        if (parseInt(percentileResponse.percentile_response) < 0) {\n          setMessage({\n            message: \"Please enter a correct combination of stops\"\n          });\n        } else if (parseInt(percentileResponse.percentile_response) === 1) {\n          setMessage({\n            message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minute.\"\n          });\n        } else {\n          setMessage({\n            message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minutes.\",\n            distance: infoArray[0],\n            instructions: infoArray[1],\n            num_stops: infoArray[3]\n          });\n        }\n\n        console.log(\"setPercentileResponse has been triggered with the following values: \", props.timeDayMonth[0], props.timeDayMonth[1], props.originNumber, props.destinationNumber, modelResponse.model_response);\n      });\n    }\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  // eslint-disable-next-line\n  [props, modelResponse.model_response, props.routeSelect, props.originNumber, props.destinationNumber, props.distance] // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n  // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n  console.log(infoArray);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, message.message), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, message.distance));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","useState","axios","require","ModelApi","props","message","setMessage","distance","instructions","num_stops","modelResponse","setModelResponse","model_response","percentileResponse","setPercentileResponse","infoArray","selectedRouteArray","undefined","i","length","j","legs","k","steps","String","travel_mode","console","log","push","text","transit","headsign","useEffect","routeSelect","directionSelect","get","params","chosenRoute","chosenDirection","chosenTime","timeDayMonth","chosenDay","chosenMonth","then","res","data","destinationNumber","originNumber","origin","destination","parseInt","percentile_response"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({\n    message: \"\",\n    distance: \"\",\n    instructions: \"\",\n    num_stops: 0,\n  });\n  const [modelResponse, setModelResponse] = useState({ model_response: \"\" });\n  // eslint-disable-next-line\n  const [percentileResponse, setPercentileResponse] = useState();\n  // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n  // console.log(\"Here is directionSelect in ModelApi\", props.directionSelect);\n  const infoArray = [];\n  if (props.distance !== null) {\n    if (props.distance.selectedRouteArray[0] !== undefined) {\n      for (var i = 0; i < props.distance.selectedRouteArray.length; i++) {\n        for (\n          var j = 0;\n          j < props.distance.selectedRouteArray[i].legs.length;\n          j++\n        ) {\n          for (\n            var k = 0;\n            k < props.distance.selectedRouteArray[i].legs[j].steps.length;\n            k++\n          ) {\n            if (\n              String(\n                props.distance.selectedRouteArray[i].legs[j].steps[k]\n                  .travel_mode\n              ) === \"TRANSIT\"\n            ) {\n              console.log(\"I made it this far\");\n              infoArray.push(\n                props.distance.selectedRouteArray[i].legs[j].distance.text\n              );\n              infoArray.push(\n                props.distance.selectedRouteArray[i].legs[j].steps[k]\n                  .instructions\n              );\n              infoArray.push(\n                props.distance.selectedRouteArray[i].legs[j].steps[k].transit\n                  .headsign\n              );\n              infoArray.push(\n                props.distance.selectedRouteArray[i].legs[j].steps[k].transit\n                  .num_stops\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (\n        String(props.routeSelect) === \"\" ||\n        props.directionSelect === undefined\n      ) {\n        // initial render should be nothing.\n        console.log(\"ModelApi - model_result (a) has been triggered\");\n        return undefined;\n      } else if (String(props.routeSelect) !== \"46A\") {\n        console.log(\n          \"ModelApi - model_result (b) has been triggered with props.routeSelect:\",\n          String(props.routeSelect)\n        );\n        return undefined;\n      } else {\n        // console.log(\"ModelApi has been fucking triggered\");\n        console.log(\n          \"ModelApi - model_result (c) has been triggered with: 1 routeSelect: \",\n          props.routeSelect,\n          \"2: directionSelect\",\n          props.directionSelect\n        );\n        axios\n          .get(`/api/model_result`, {\n            params: {\n              chosenRoute: props.routeSelect,\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              chosenMonth: props.timeDayMonth[2],\n            },\n          })\n          .then((res) => {\n            const modelResponse = res.data;\n            setModelResponse(modelResponse);\n\n            console.log(\n              \"setModelResponse has been triggered with the following values: \",\n              props.routeSelect,\n              props.directionSelect,\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.timeDayMonth[2]\n            );\n          });\n      }\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    [props.routeSelect, props.directionSelect, props.timeDayMonth]\n  );\n\n  React.useEffect(\n    () => {\n      // Making sure nothing is renedered until stops have been chosen.\n      if (\n        props.directionSelect === undefined ||\n        String(modelResponse.model_response) === \"\" ||\n        props.destinationNumber === 0 ||\n        props.originNumber === 0\n      ) {\n        console.log(\"ModelApi - percentile_result (a) has been triggered\");\n        // initial render should be nothing.\n        return undefined;\n      } else if (props.routeSelect !== \"46A\") {\n        console.log(\n          \"ModelApi - percentile_result (b) has been triggered with props.routeSelect\",\n          props.routeSelect\n        );\n        setMessage({\n          message: \"Hey\",\n          distance: \"You\",\n          instructions: \"Dude\",\n          num_stops: 0,\n        });\n      } else {\n        console.log(\n          \"And here is what ModelApi/percentile_result triggered with: 1 directionSelect: \",\n          props.directionSelect,\n          \"2: modelResponse.model_response\",\n          modelResponse.model_response\n        );\n        axios\n          .get(`/api/percentile_result`, {\n            params: {\n              chosenRoute: props.routeSelect,\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              // chosenMonth: props.timeDayMonth[2],\n              origin: props.originNumber,\n              destination: props.destinationNumber,\n              modelResponse: modelResponse.model_response,\n            },\n          })\n          .then((res) => {\n            const percentileResponse = res.data;\n            setPercentileResponse(percentileResponse);\n            if (parseInt(percentileResponse.percentile_response) < 0) {\n              setMessage({\n                message: \"Please enter a correct combination of stops\",\n              });\n            } else if (parseInt(percentileResponse.percentile_response) === 1) {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minute.\",\n              });\n            } else {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minutes.\",\n                distance: infoArray[0],\n                instructions: infoArray[1],\n                num_stops: infoArray[3],\n              });\n            }\n\n            console.log(\n              \"setPercentileResponse has been triggered with the following values: \",\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.originNumber,\n              props.destinationNumber,\n              modelResponse.model_response\n            );\n          });\n      }\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    // eslint-disable-next-line\n    [\n      props,\n      modelResponse.model_response,\n      props.routeSelect,\n      props.originNumber,\n      props.destinationNumber,\n      props.distance,\n    ]\n    // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n    // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n\n  console.log(infoArray);\n  return (\n    <div>\n      <p>{message.message}</p>\n      <p>{message.distance}</p>\n      {/* <p>{directionsResponse.directionsResponseMessage}</p> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}