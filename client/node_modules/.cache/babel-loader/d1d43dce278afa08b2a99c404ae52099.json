{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Locate.js\";\nimport React from \"react\";\n\nconst dublinCenter = require(\"../data/DublinCenter.json\"); // A useful thing for this function would be to highlight all\n// of the stops that are within, say, 50m of the user.\n// Think about how to acheive this.\n// Generate an icon for display at the top right hand\n// corner of the map which when clicked will\n// adjust the map to the users location.\n\n\nfunction Locate({\n  // Receiving props - Function defined in App.js.\n  panTo,\n  // Receiving props - Variables defined in App.js.\n  setResponse,\n  setMarkers\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition( // Hard coding Dublin for the time being.\n      position => {\n        panTo({\n          // lat: position.coords.latitude,\n          // lng: position.coords.longitude,\n          lat: dublinCenter.lat,\n          lng: dublinCenter.lng\n        });\n        setMarkers({\n          lat,\n          lng\n        });\n        setResponse(null);\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"compass\",\n    src: \"/compass.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Locate;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Locate.js"],"names":["React","dublinCenter","require","Locate","panTo","setResponse","setMarkers","navigator","geolocation","getCurrentPosition","position","lat","lng"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAAC,2BAAD,CAA5B,C,CAEA;AACA;AACA;AAEA;AACA;AACA;;;AACA,SAASC,MAAT,CAAgB;AACd;AACAC,EAAAA,KAFc;AAGd;AACAC,EAAAA,WAJc;AAKdC,EAAAA;AALc,CAAhB,EAMG;AACD,sBACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,EACE;AACCC,MAAAA,QAAD,IAAc;AACZN,QAAAA,KAAK,CAAC;AACJ;AACA;AACAO,UAAAA,GAAG,EAAEV,YAAY,CAACU,GAHd;AAIJC,UAAAA,GAAG,EAAEX,YAAY,CAACW;AAJd,SAAD,CAAL;AAMAN,QAAAA,UAAU,CAAC;AAAEK,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAD,CAAV;AACAP,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAXH,EAYE,MAAM,IAZR;AAcD,KAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAmBE;AAAK,IAAA,GAAG,EAAC,SAAT;AAAmB,IAAA,GAAG,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAuBD;;AAED,eAAeF,MAAf","sourcesContent":["import React from \"react\";\n\nconst dublinCenter = require(\"../data/DublinCenter.json\");\n\n// A useful thing for this function would be to highlight all\n// of the stops that are within, say, 50m of the user.\n// Think about how to acheive this.\n\n// Generate an icon for display at the top right hand\n// corner of the map which when clicked will\n// adjust the map to the users location.\nfunction Locate({\n  // Receiving props - Function defined in App.js.\n  panTo,\n  // Receiving props - Variables defined in App.js.\n  setResponse,\n  setMarkers,\n}) {\n  return (\n    <button\n      className=\"locate\"\n      onClick={() => {\n        navigator.geolocation.getCurrentPosition(\n          // Hard coding Dublin for the time being.\n          (position) => {\n            panTo({\n              // lat: position.coords.latitude,\n              // lng: position.coords.longitude,\n              lat: dublinCenter.lat,\n              lng: dublinCenter.lng,\n            });\n            setMarkers({ lat, lng });\n            setResponse(null);\n          },\n          () => null\n        );\n      }}\n    >\n      <img alt=\"compass\" src=\"/compass.svg\" />\n    </button>\n  );\n}\n\nexport default Locate;\n"]},"metadata":{},"sourceType":"module"}