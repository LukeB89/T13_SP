{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\n// Importing outside developed components.\nimport React, { useState } from \"react\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({\n    message: \"\"\n  });\n  const [modelResponse, setModelResponse] = useState({\n    model_response: \"\"\n  }); // eslint-disable-next-line\n\n  const [percentileResponse, setPercentileResponse] = useState(); // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n  // console.log(\"Here is directionSelect in ModelApi\", props.directionSelect);\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n  React.useEffect(() => {\n    if (String(props.routeSelect) === \"\" || props.directionSelect === undefined) {\n      // console.log(\"ModelApi undefined ONE has been triggered\");\n      // initial render should be nothing.\n      // console.log(\"modelApi 1 has been triggered\");\n      return undefined;\n    } else if (String(props.routeSelect !== \"46A\")) {\n      // console.log(\"model checker has activated, only 46a working\");\n      return undefined;\n    } else {\n      // console.log(\"ModelApi has been fucking triggered\");\n      console.log(\"And here is what ModelSelect/model_result has been triggered with: 1 routeSelect: \", props.routeSelect, \"2: directionSelect\", props.directionSelect);\n      axios.get(`/api/model_result`, {\n        params: {\n          chosenRoute: props.routeSelect,\n          chosenDirection: props.directionSelect,\n          chosenTime: props.timeDayMonth[0],\n          chosenDay: props.timeDayMonth[1],\n          chosenMonth: props.timeDayMonth[2]\n        }\n      }).then(res => {\n        const modelResponse = res.data;\n        setModelResponse(modelResponse);\n        console.log(\"setModelResponse has been triggered with the following values: \", props.routeSelect, props.directionSelect, props.timeDayMonth[0], props.timeDayMonth[1], props.timeDayMonth[2]);\n      });\n    }\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  [props.routeSelect, props.directionSelect]);\n  React.useEffect(() => {\n    // Making sure nothing is renedered until stops have been chosen.\n    if (props.directionSelect === undefined || String(modelResponse.model_response) === \"\" || props.destinationNumber === 0 || props.originNumber === 0) {\n      // initial render should be nothing.\n      return undefined;\n    } else if (props.routeSelect !== \"46A\") {\n      console.log(\"ModelApi (percentile result) undefined TWO has been triggered\");\n      setMessage({\n        message: \"No model for route this route yet.\"\n      });\n    } else {\n      console.log(\"And here is what ModelApi/percentile_result triggered with: 1 directionSelect: \", props.directionSelect, \"2: modelResponse.model_response\", modelResponse.model_response);\n      axios.get(`/api/percentile_result`, {\n        params: {\n          chosenRoute: props.routeSelect,\n          chosenDirection: props.directionSelect,\n          chosenTime: props.timeDayMonth[0],\n          chosenDay: props.timeDayMonth[1],\n          // chosenMonth: props.timeDayMonth[2],\n          origin: props.originNumber,\n          destination: props.destinationNumber,\n          modelResponse: modelResponse.model_response\n        }\n      }).then(res => {\n        const percentileResponse = res.data;\n        setPercentileResponse(percentileResponse);\n\n        if (parseInt(percentileResponse.percentile_response) < 0) {\n          setMessage({\n            message: \"Please enter a correct combination of stops\"\n          });\n        } else if (parseInt(percentileResponse.percentile_response) === 1) {\n          setMessage({\n            message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minute.\"\n          });\n        } else {\n          setMessage({\n            message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minutes.\"\n          });\n        }\n\n        console.log(\"setPercentileResponse has been triggered with the following values: \", props.timeDayMonth[0], props.timeDayMonth[1], props.originNumber, props.destinationNumber, modelResponse.model_response);\n      });\n    }\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  // eslint-disable-next-line\n  [props, modelResponse.model_response, props.routeSelect] // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n  // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, message.message));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","useState","axios","require","ModelApi","props","message","setMessage","modelResponse","setModelResponse","model_response","percentileResponse","setPercentileResponse","useEffect","String","routeSelect","directionSelect","undefined","console","log","get","params","chosenRoute","chosenDirection","chosenTime","timeDayMonth","chosenDay","chosenMonth","then","res","data","destinationNumber","originNumber","origin","destination","parseInt","percentile_response"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({ message: \"\" });\n  const [modelResponse, setModelResponse] = useState({ model_response: \"\" });\n  // eslint-disable-next-line\n  const [percentileResponse, setPercentileResponse] = useState();\n  // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n  // console.log(\"Here is directionSelect in ModelApi\", props.directionSelect);\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (\n        String(props.routeSelect) === \"\" ||\n        props.directionSelect === undefined\n      ) {\n        // console.log(\"ModelApi undefined ONE has been triggered\");\n        // initial render should be nothing.\n        // console.log(\"modelApi 1 has been triggered\");\n        return undefined;\n      } else if (String(props.routeSelect !== \"46A\")) {\n        // console.log(\"model checker has activated, only 46a working\");\n        return undefined;\n      } else {\n        // console.log(\"ModelApi has been fucking triggered\");\n        console.log(\n          \"And here is what ModelSelect/model_result has been triggered with: 1 routeSelect: \",\n          props.routeSelect,\n          \"2: directionSelect\",\n          props.directionSelect\n        );\n        axios\n          .get(`/api/model_result`, {\n            params: {\n              chosenRoute: props.routeSelect,\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              chosenMonth: props.timeDayMonth[2],\n            },\n          })\n          .then((res) => {\n            const modelResponse = res.data;\n            setModelResponse(modelResponse);\n\n            console.log(\n              \"setModelResponse has been triggered with the following values: \",\n              props.routeSelect,\n              props.directionSelect,\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.timeDayMonth[2]\n            );\n          });\n      }\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    [props.routeSelect, props.directionSelect]\n  );\n\n  React.useEffect(\n    () => {\n      // Making sure nothing is renedered until stops have been chosen.\n      if (\n        props.directionSelect === undefined ||\n        String(modelResponse.model_response) === \"\" ||\n        props.destinationNumber === 0 ||\n        props.originNumber === 0\n      ) {\n        // initial render should be nothing.\n        return undefined;\n      } else if (props.routeSelect !== \"46A\") {\n        console.log(\n          \"ModelApi (percentile result) undefined TWO has been triggered\"\n        );\n        setMessage({\n          message: \"No model for route this route yet.\",\n        });\n      } else {\n        console.log(\n          \"And here is what ModelApi/percentile_result triggered with: 1 directionSelect: \",\n          props.directionSelect,\n          \"2: modelResponse.model_response\",\n          modelResponse.model_response\n        );\n        axios\n          .get(`/api/percentile_result`, {\n            params: {\n              chosenRoute: props.routeSelect,\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              // chosenMonth: props.timeDayMonth[2],\n              origin: props.originNumber,\n              destination: props.destinationNumber,\n              modelResponse: modelResponse.model_response,\n            },\n          })\n          .then((res) => {\n            const percentileResponse = res.data;\n            setPercentileResponse(percentileResponse);\n            if (parseInt(percentileResponse.percentile_response) < 0) {\n              setMessage({\n                message: \"Please enter a correct combination of stops\",\n              });\n            } else if (parseInt(percentileResponse.percentile_response) === 1) {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minute.\",\n              });\n            } else {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minutes.\",\n              });\n            }\n\n            console.log(\n              \"setPercentileResponse has been triggered with the following values: \",\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.originNumber,\n              props.destinationNumber,\n              modelResponse.model_response\n            );\n          });\n      }\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    // eslint-disable-next-line\n    [props, modelResponse.model_response, props.routeSelect]\n    // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n    // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n\n  return (\n    <div>\n      <p>{message.message}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}