{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Profile.js\";\nimport useSwr from \"swr\";\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nexport default function Profile() {\n  const url = \"https://data.smartdublin.ie/cgi-bin/rtpi/busstopinformation?operator=bac\";\n  const {\n    data,\n    error\n  } = useSwr(url, {\n    fetcher\n  });\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }\n  }, \"failed to load\");\n  if (!data) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }, \"loading...\");\n  return stopData.results.map(stop => ({\n    type: \"Feature\",\n    properties: {\n      id: stop.stopid,\n      fullname: stop.fullname,\n      routes: stop.operators[0].routes\n    },\n    geometry: {\n      type: \"Point\",\n      pos: {\n        lat: parseFloat(stop.latitude),\n        lng: parseFloat(stop.longitude)\n      }\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Profile.js"],"names":["useSwr","fetcher","args","fetch","then","response","json","Profile","url","data","error","stopData","results","map","stop","type","properties","id","stopid","fullname","routes","operators","geometry","pos","lat","parseFloat","latitude","lng","longitude"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,KAAnB;;AACA,MAAMC,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAqBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAlC,CAA7B;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,GAAG,GACP,0EADF;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAACQ,GAAD,EAAM;AAAEP,IAAAA;AAAF,GAAN,CAA9B;AACA,MAAIS,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,SAAOE,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAsBC,IAAD,KAAW;AACrCC,IAAAA,IAAI,EAAE,SAD+B;AAErCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,EAAE,EAAEH,IAAI,CAACI,MADC;AAEVC,MAAAA,QAAQ,EAAEL,IAAI,CAACK,QAFL;AAGVC,MAAAA,MAAM,EAAEN,IAAI,CAACO,SAAL,CAAe,CAAf,EAAkBD;AAHhB,KAFyB;AAOrCE,IAAAA,QAAQ,EAAE;AACRP,MAAAA,IAAI,EAAE,OADE;AAERQ,MAAAA,GAAG,EAAE;AACHC,QAAAA,GAAG,EAAEC,UAAU,CAACX,IAAI,CAACY,QAAN,CADZ;AAEHC,QAAAA,GAAG,EAAEF,UAAU,CAACX,IAAI,CAACc,SAAN;AAFZ;AAFG;AAP2B,GAAX,CAArB,CAAP;AAeD","sourcesContent":["import useSwr from \"swr\";\nconst fetcher = (...args) => fetch(...args).then((response) => response.json());\n\nexport default function Profile() {\n  const url =\n    \"https://data.smartdublin.ie/cgi-bin/rtpi/busstopinformation?operator=bac\";\n  const { data, error } = useSwr(url, { fetcher });\n  if (error) return <div>failed to load</div>;\n  if (!data) return <div>loading...</div>;\n  return stopData.results.map((stop) => ({\n    type: \"Feature\",\n    properties: {\n      id: stop.stopid,\n      fullname: stop.fullname,\n      routes: stop.operators[0].routes,\n    },\n    geometry: {\n      type: \"Point\",\n      pos: {\n        lat: parseFloat(stop.latitude),\n        lng: parseFloat(stop.longitude),\n      },\n    },\n  }));\n}\n"]},"metadata":{},"sourceType":"module"}