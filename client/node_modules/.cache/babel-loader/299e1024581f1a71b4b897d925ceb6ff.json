{"ast":null,"code":"// Importing outside developed components.\nimport React, { useState } from \"react\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\"); // A function to request a list of stops from a user selected route going\n// in specified direction - each of these are received as input.\n\n\nexport default function RouteStopsApi(routeSelect, directionSelect) {\n  // The response from the backend we need to track in state:\n  const [routeStopsResponse, setRouteStopsResponse] = useState({\n    route_stops_response: []\n  }); // // React Hook React.useEffect has a missing dependency: 'routeSelect'. Either include it or remove the dependency array\n  // // React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked\n  // The variable below has been created to avoid the two errors above.\n\n  const routeSelectMissingDependencyFix = routeSelect;\n  console.log(\"RouteStopsApi - routeSelectMissingDependencyFix triggered\", routeSelectMissingDependencyFix); // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n  React.useEffect(() => {\n    if (routeSelectMissingDependencyFix === undefined || directionSelect === undefined) {\n      console.log(\"RouteStopsApi - undefined - got rendered\"); // initial render should be nothing.\n\n      return undefined;\n    } else if (String(routeSelectMissingDependencyFix) !== \"46A\") {\n      console.log(\"RouteStopsApi - ELSE IF - got rendered\");\n      return [];\n    } else console.log(\"RouteStopsApi - got rendered with the following values: \", routeSelectMissingDependencyFix, directionSelect);\n\n    axios.get(`/api/route_stops`, {\n      params: {\n        chosenRoute: routeSelectMissingDependencyFix,\n        chosenDirection: directionSelect\n      }\n    }).then(res => {\n      console.log(\"route select made it THIS FAR!\", routeSelectMissingDependencyFix);\n      const routeStopsResponse = res.data;\n      setRouteStopsResponse(routeStopsResponse);\n    });\n  }, // Listening for changes in input values in order to\n  // trigger a call to the API  to re-render the component.\n  [routeSelectMissingDependencyFix, directionSelect]);\n  return routeStopsResponse.route_stops_response;\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/RouteStopsApi.js"],"names":["React","useState","axios","require","RouteStopsApi","routeSelect","directionSelect","routeStopsResponse","setRouteStopsResponse","route_stops_response","routeSelectMissingDependencyFix","console","log","useEffect","undefined","String","get","params","chosenRoute","chosenDirection","then","res","data"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;AACA;;;AACA,eAAe,SAASC,aAAT,CAAuBC,WAAvB,EAAoCC,eAApC,EAAqD;AAClE;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC;AAC3DQ,IAAAA,oBAAoB,EAAE;AADqC,GAAD,CAA5D,CAFkE,CAMlE;AACA;AACA;;AACA,QAAMC,+BAA+B,GAAGL,WAAxC;AACAM,EAAAA,OAAO,CAACC,GAAR,CACE,2DADF,EAEEF,+BAFF,EAVkE,CAelE;AACA;;AACAV,EAAAA,KAAK,CAACa,SAAN,CACE,MAAM;AACJ,QACEH,+BAA+B,KAAKI,SAApC,IACAR,eAAe,KAAKQ,SAFtB,EAGE;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EADA,CAEA;;AACA,aAAOE,SAAP;AACD,KAPD,MAOO,IAAIC,MAAM,CAACL,+BAAD,CAAN,KAA4C,KAAhD,EAAuD;AAC5DC,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,aAAO,EAAP;AACD,KAHM,MAILD,OAAO,CAACC,GAAR,CACE,0DADF,EAEEF,+BAFF,EAGEJ,eAHF;;AAKFJ,IAAAA,KAAK,CACFc,GADH,CACQ,kBADR,EAC2B;AACvBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAER,+BADP;AAENS,QAAAA,eAAe,EAAEb;AAFX;AADe,KAD3B,EAOGc,IAPH,CAOSC,GAAD,IAAS;AACbV,MAAAA,OAAO,CAACC,GAAR,CACE,gCADF,EAEEF,+BAFF;AAIA,YAAMH,kBAAkB,GAAGc,GAAG,CAACC,IAA/B;AACAd,MAAAA,qBAAqB,CAACD,kBAAD,CAArB;AACD,KAdH;AAeD,GAjCH,EAkCE;AACA;AACA,GAACG,+BAAD,EAAkCJ,eAAlC,CApCF;AAuCA,SAAOC,kBAAkB,CAACE,oBAA1B;AACD","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\n// A function to request a list of stops from a user selected route going\n// in specified direction - each of these are received as input.\nexport default function RouteStopsApi(routeSelect, directionSelect) {\n  // The response from the backend we need to track in state:\n  const [routeStopsResponse, setRouteStopsResponse] = useState({\n    route_stops_response: [],\n  });\n\n  // // React Hook React.useEffect has a missing dependency: 'routeSelect'. Either include it or remove the dependency array\n  // // React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked\n  // The variable below has been created to avoid the two errors above.\n  const routeSelectMissingDependencyFix = routeSelect;\n  console.log(\n    \"RouteStopsApi - routeSelectMissingDependencyFix triggered\",\n    routeSelectMissingDependencyFix\n  );\n\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (\n        routeSelectMissingDependencyFix === undefined ||\n        directionSelect === undefined\n      ) {\n        console.log(\"RouteStopsApi - undefined - got rendered\");\n        // initial render should be nothing.\n        return undefined;\n      } else if (String(routeSelectMissingDependencyFix) !== \"46A\") {\n        console.log(\"RouteStopsApi - ELSE IF - got rendered\");\n        return [];\n      } else\n        console.log(\n          \"RouteStopsApi - got rendered with the following values: \",\n          routeSelectMissingDependencyFix,\n          directionSelect\n        );\n      axios\n        .get(`/api/route_stops`, {\n          params: {\n            chosenRoute: routeSelectMissingDependencyFix,\n            chosenDirection: directionSelect,\n          },\n        })\n        .then((res) => {\n          console.log(\n            \"route select made it THIS FAR!\",\n            routeSelectMissingDependencyFix\n          );\n          const routeStopsResponse = res.data;\n          setRouteStopsResponse(routeStopsResponse);\n        });\n    },\n    // Listening for changes in input values in order to\n    // trigger a call to the API  to re-render the component.\n    [routeSelectMissingDependencyFix, directionSelect]\n  );\n\n  return routeStopsResponse.route_stops_response;\n}\n"]},"metadata":{},"sourceType":"module"}