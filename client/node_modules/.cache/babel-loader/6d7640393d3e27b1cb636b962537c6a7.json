{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/PredictionInput.js\";\n// Importing outside developed components.\nimport React from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\"; // Importing self-developed components.\n\nimport ModelApi from \"./ModelApi\";\nimport RouteStopsApi from \"./RouteStopsApi\"; // Importing outside developed css.\n\nimport \".././styles.css\"; // Generating all of the GUI elements needed to provide the user with\n// journey time prediction. e.g. Date and Time select, Route select, etc.\n\nconst PredictionInput = props => {\n  // Tracking this in state in order to enable a submit button to trigger the ModelApi response.\n  const [destinationSelected, setDestinationSelected] = React.useState([]); // Getting a list of stops and the direction from this api route.\n  // Takes the users chosen route and origin stop as input.\n  // console.log(\n  //   \"originNumber going into RouteStipsApi from PredictionInput\",\n  //   props.originNumber\n  // );\n\n  const getStops = RouteStopsApi(props.routeSelect, props.originNumber); // console.log(\n  //   \"getStops is here in PredictionInput where the direction indicator is being delivered\",\n  //   getStops\n  // );\n  // // console.log(\"PredictionInput received routeSelect\", props.routeSelect);\n  // For the Typeaheads containing bus route destination, user origin & user destination .\n\n  const refSelectedRoute = React.useRef();\n  const refUserOrigin = React.useRef();\n  const refUserDestination = React.useRef();\n  const directionIndicator = parseInt(getStops[0]); // console.log(\"this is the direction indicator.\", directionIndicator);\n  // getStops.splice(0, 1); // Removes the first element of getStops only if it is equal to 1 or 2.\n  // console.log(\"PredictionInput: getStops triggered after splice: \", getStops);\n  // Convert that array of strings to integers.\n  // A map method for Arrays, applying a function to all elements of an array.\n  // Skips the first element, this is direction indicator.\n\n  const directionStopNumbers = getStops.slice(1).map(function (x) {\n    if (getStops.length > 1) {\n      return parseInt(x, 10);\n    } else {\n      console.log();\n      return getStops[1];\n    }\n  });\n  const routeDirectionStops = [];\n\n  if (directionStopNumbers.length > 1) {\n    for (var q = 0; q < props.parsedStops.length; q++) {\n      for (var r = 0; r < directionStopNumbers.length; r++) {\n        if (directionStopNumbers[r] === parseInt(props.parsedStops[q].id)) {\n          routeDirectionStops.push(props.parsedStops[q].description);\n        }\n      }\n    }\n  } else {\n    routeDirectionStops.push(getStops[1]);\n  } // for setting the date limits in date picker\n\n\n  const date = new Date();\n  const furthestDate = date.setDate(date.getDate() + 1);\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formRoute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: props.allRoutes,\n    ref: refSelectedRoute,\n    placeholder: \"Select a route: e.g. 46A\",\n    onChange: route => {\n      try {\n        for (var i = 0; i < props.allRoutes.length; i++) {\n          if (String(route) === props.allRoutes[i]) {\n            props.setResponseValidator(false);\n            const routeString = props.allRoutes[i];\n            props.routeChoice({\n              routeString\n            });\n            props.setRouteSelect(routeString);\n            props.setResponse(null);\n            props.originNumberChoice({\n              id: \"0\"\n            });\n            props.destinationNumberChoice({\n              id: \"0\"\n            });\n            props.setOrigin(\"\");\n            props.setDestination(\"\");\n            refUserOrigin.current.clear();\n            refUserDestination.current.clear();\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formTimeOfTravel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"When are you travelling?\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker // Inbuilt props: https://github.com/Hacker0x01/react-datepicker/blob/master/docs/index.md.\n  , {\n    value: props.selectedTime,\n    onChange: date => props.timeChoice(date),\n    minDate: new Date(),\n    maxDate: new Date().setDate(new Date().getDate() + 1) // const date = new Date();\n    // new Date().setDate(new Date().getDate() + 7);\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formDeparture\" // CSS\n    ,\n    style: {\n      paddingTop: \"2vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: props.filteredStops,\n    placeholder: \"Departing from: e.g. Stop 334, D'Olier Street\",\n    ref: refUserOrigin,\n    onChange: address => {\n      try {\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(address) === props.parsedStops[i].description) {\n            const id = props.parsedStops[i].id;\n            const lat = props.parsedStops[i].geometry.lat;\n            const lng = props.parsedStops[i].geometry.lng;\n            props.setResponseValidator(false);\n            props.originNumberChoice({\n              id\n            });\n            props.originChoice({\n              lat,\n              lng\n            });\n            props.panTo({\n              lat,\n              lng\n            });\n            props.setResponse(null);\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formArrival\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: routeDirectionStops,\n    placeholder: \"Destination: e.g. Stop 2007, Stillorgan Road\",\n    ref: refUserDestination,\n    onChange: s => {\n      try {\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(s) === props.parsedStops[i].description) {\n            const lat = props.parsedStops[i].geometry.lat;\n            const lng = props.parsedStops[i].geometry.lng;\n            props.setResponseValidator(false);\n            props.panTo({\n              lat,\n              lng\n            });\n            props.setDirectionSelect(directionIndicator);\n            props.setResponse(null);\n            setDestinationSelected(s);\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Form.Group, {\n    // CSS\n    style: {\n      paddingTop: \"1vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button // Inbuilt props: https://react-bootstrap.github.io/components/buttons/#button-props.\n  , {\n    style: {\n      width: \"45%\"\n    },\n    onClick: () => {\n      try {\n        // console.log(\"PredictionInput button triggered\");\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(destinationSelected) === props.parsedStops[i].description) {\n            const id = props.parsedStops[i].id;\n            const lat = props.parsedStops[i].geometry.lat;\n            const lng = props.parsedStops[i].geometry.lng;\n            props.setResponseValidator(false);\n            props.destinationChoice({\n              lat,\n              lng\n            });\n            props.destinationNumberChoice({\n              id\n            });\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Submit\"), \" \", /*#__PURE__*/React.createElement(Button // Inbuilt props: https://react-bootstrap.github.io/components/buttons/#button-props.\n  , {\n    variant: \"secondary\",\n    style: {\n      width: \"45%\",\n      float: \"right\"\n    },\n    onClick: () => {\n      props.setResponseValidator(false);\n      props.setRouteSelect(\"\");\n      props.setRouteString(\"\");\n      props.setFilteredStops([]);\n      props.setMarkerSelection(true);\n      props.setResponse(null);\n      props.setOrigin(\"\");\n      props.setDestination(\"\");\n      props.originNumberChoice({\n        id: \"0\"\n      });\n      props.destinationNumberChoice({\n        id: \"0\"\n      });\n      props.setGeoMarkers([]);\n      props.setStopMarkers([]);\n      refSelectedRoute.current.clear();\n      refUserOrigin.current.clear();\n      refUserDestination.current.clear();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, \"Clear\")))), /*#__PURE__*/React.createElement(ModelApi // Passing in props - Variables defined in App.js.\n  , {\n    distance: props.distance,\n    originNumber: props.originNumber,\n    destinationNumber: props.destinationNumber,\n    timeDayMonth: props.timeDayMonth,\n    routeSelect: props.routeSelect,\n    directionSelect: props.directionSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PredictionInput;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/PredictionInput.js"],"names":["React","DateTimePicker","Typeahead","Form","Button","ModelApi","RouteStopsApi","PredictionInput","props","destinationSelected","setDestinationSelected","useState","getStops","routeSelect","originNumber","refSelectedRoute","useRef","refUserOrigin","refUserDestination","directionIndicator","parseInt","directionStopNumbers","slice","map","x","length","console","log","routeDirectionStops","q","parsedStops","r","id","push","description","date","Date","furthestDate","setDate","getDate","allRoutes","route","i","String","setResponseValidator","routeString","routeChoice","setRouteSelect","setResponse","originNumberChoice","destinationNumberChoice","setOrigin","setDestination","current","clear","error","textAlign","display","alignItems","justifyContent","selectedTime","timeChoice","paddingTop","filteredStops","address","lat","geometry","lng","originChoice","panTo","s","setDirectionSelect","width","destinationChoice","float","setRouteString","setFilteredStops","setMarkerSelection","setGeoMarkers","setStopMarkers","distance","destinationNumber","timeDayMonth","directionSelect"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// Importing self-developed components.\nimport ModelApi from \"./ModelApi\";\nimport RouteStopsApi from \"./RouteStopsApi\";\n// Importing outside developed css.\nimport \".././styles.css\";\n\n// Generating all of the GUI elements needed to provide the user with\n// journey time prediction. e.g. Date and Time select, Route select, etc.\nconst PredictionInput = (props) => {\n  // Tracking this in state in order to enable a submit button to trigger the ModelApi response.\n  const [destinationSelected, setDestinationSelected] = React.useState([]);\n\n  // Getting a list of stops and the direction from this api route.\n  // Takes the users chosen route and origin stop as input.\n  // console.log(\n  //   \"originNumber going into RouteStipsApi from PredictionInput\",\n  //   props.originNumber\n  // );\n  const getStops = RouteStopsApi(props.routeSelect, props.originNumber);\n  // console.log(\n  //   \"getStops is here in PredictionInput where the direction indicator is being delivered\",\n  //   getStops\n  // );\n\n  // // console.log(\"PredictionInput received routeSelect\", props.routeSelect);\n  // For the Typeaheads containing bus route destination, user origin & user destination .\n  const refSelectedRoute = React.useRef();\n  const refUserOrigin = React.useRef();\n  const refUserDestination = React.useRef();\n\n  const directionIndicator = parseInt(getStops[0]);\n  // console.log(\"this is the direction indicator.\", directionIndicator);\n\n  // getStops.splice(0, 1); // Removes the first element of getStops only if it is equal to 1 or 2.\n\n  // console.log(\"PredictionInput: getStops triggered after splice: \", getStops);\n\n  // Convert that array of strings to integers.\n  // A map method for Arrays, applying a function to all elements of an array.\n  // Skips the first element, this is direction indicator.\n  const directionStopNumbers = getStops.slice(1).map(function (x) {\n    if (getStops.length > 1) {\n      return parseInt(x, 10);\n    } else {\n      console.log();\n      return getStops[1];\n    }\n  });\n\n  const routeDirectionStops = [];\n\n  if (directionStopNumbers.length > 1) {\n    for (var q = 0; q < props.parsedStops.length; q++) {\n      for (var r = 0; r < directionStopNumbers.length; r++) {\n        if (directionStopNumbers[r] === parseInt(props.parsedStops[q].id)) {\n          routeDirectionStops.push(props.parsedStops[q].description);\n        }\n      }\n    }\n  } else {\n    routeDirectionStops.push(getStops[1]);\n  }\n\n  // for setting the date limits in date picker\n  const date = new Date();\n  const furthestDate = date.setDate(date.getDate() + 1);\n\n  return (\n    <Form>\n      <Form.Group\n        // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n        controlId=\"formRoute\"\n      >\n        <Typeahead\n          // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n          id=\"basic-example\"\n          options={props.allRoutes}\n          ref={refSelectedRoute}\n          placeholder=\"Select a route: e.g. 46A\"\n          onChange={(route) => {\n            try {\n              for (var i = 0; i < props.allRoutes.length; i++) {\n                if (String(route) === props.allRoutes[i]) {\n                  props.setResponseValidator(false);\n                  const routeString = props.allRoutes[i];\n                  props.routeChoice({ routeString });\n                  props.setRouteSelect(routeString);\n                  props.setResponse(null);\n                  props.originNumberChoice({ id: \"0\" });\n                  props.destinationNumberChoice({ id: \"0\" });\n                  props.setOrigin(\"\");\n                  props.setDestination(\"\");\n                  refUserOrigin.current.clear();\n                  refUserDestination.current.clear();\n                }\n              }\n            } catch (error) {\n              console.log(\"ðŸ˜± Error: \", error);\n            }\n          }}\n        />\n      </Form.Group>\n\n      <Form.Group\n        // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n        controlId=\"formTimeOfTravel\"\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <strong style={{ textAlign: \"center\" }}>\n            When are you travelling?\n          </strong>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <DateTimePicker\n            // Inbuilt props: https://github.com/Hacker0x01/react-datepicker/blob/master/docs/index.md.\n            value={props.selectedTime}\n            onChange={(date) => props.timeChoice(date)}\n            minDate={new Date()}\n            maxDate={new Date().setDate(new Date().getDate() + 1)}\n            // const date = new Date();\n\n            // new Date().setDate(new Date().getDate() + 7);\n          />\n        </div>\n\n        <Form.Group\n          // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n          controlId=\"formDeparture\"\n          // CSS\n          style={{ paddingTop: \"2vh\" }}\n        >\n          <Typeahead\n            // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n            id=\"basic-example\"\n            options={props.filteredStops}\n            placeholder=\"Departing from: e.g. Stop 334, D'Olier Street\"\n            ref={refUserOrigin}\n            onChange={(address) => {\n              try {\n                for (var i = 0; i < props.parsedStops.length; i++) {\n                  if (String(address) === props.parsedStops[i].description) {\n                    const id = props.parsedStops[i].id;\n                    const lat = props.parsedStops[i].geometry.lat;\n                    const lng = props.parsedStops[i].geometry.lng;\n                    props.setResponseValidator(false);\n                    props.originNumberChoice({ id });\n                    props.originChoice({ lat, lng });\n                    props.panTo({ lat, lng });\n                    props.setResponse(null);\n                  }\n                }\n              } catch (error) {\n                console.log(\"ðŸ˜± Error: \", error);\n              }\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group\n          // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n          controlId=\"formArrival\"\n        >\n          <Typeahead\n            // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n            id=\"basic-example\"\n            options={routeDirectionStops}\n            placeholder=\"Destination: e.g. Stop 2007, Stillorgan Road\"\n            ref={refUserDestination}\n            onChange={(s) => {\n              try {\n                for (var i = 0; i < props.parsedStops.length; i++) {\n                  if (String(s) === props.parsedStops[i].description) {\n                    const lat = props.parsedStops[i].geometry.lat;\n                    const lng = props.parsedStops[i].geometry.lng;\n                    props.setResponseValidator(false);\n                    props.panTo({ lat, lng });\n                    props.setDirectionSelect(directionIndicator);\n                    props.setResponse(null);\n                    setDestinationSelected(s);\n                  }\n                }\n              } catch (error) {\n                console.log(\"ðŸ˜± Error: \", error);\n              }\n            }}\n          />{\" \"}\n          <Form.Group\n            // CSS\n            style={{ paddingTop: \"1vh\" }}\n          >\n            <Button\n              // Inbuilt props: https://react-bootstrap.github.io/components/buttons/#button-props.\n              style={{ width: \"45%\" }}\n              onClick={() => {\n                try {\n                  // console.log(\"PredictionInput button triggered\");\n                  for (var i = 0; i < props.parsedStops.length; i++) {\n                    if (\n                      String(destinationSelected) ===\n                      props.parsedStops[i].description\n                    ) {\n                      const id = props.parsedStops[i].id;\n                      const lat = props.parsedStops[i].geometry.lat;\n                      const lng = props.parsedStops[i].geometry.lng;\n                      props.setResponseValidator(false);\n                      props.destinationChoice({ lat, lng });\n                      props.destinationNumberChoice({ id });\n                    }\n                  }\n                } catch (error) {\n                  console.log(\"ðŸ˜± Error: \", error);\n                }\n              }}\n            >\n              Submit\n            </Button>{\" \"}\n            <Button\n              // Inbuilt props: https://react-bootstrap.github.io/components/buttons/#button-props.\n              variant=\"secondary\"\n              style={{ width: \"45%\", float: \"right\" }}\n              onClick={() => {\n                props.setResponseValidator(false);\n                props.setRouteSelect(\"\");\n                props.setRouteString(\"\");\n                props.setFilteredStops([]);\n                props.setMarkerSelection(true);\n                props.setResponse(null);\n                props.setOrigin(\"\");\n                props.setDestination(\"\");\n                props.originNumberChoice({ id: \"0\" });\n                props.destinationNumberChoice({ id: \"0\" });\n                props.setGeoMarkers([]);\n                props.setStopMarkers([]);\n                refSelectedRoute.current.clear();\n                refUserOrigin.current.clear();\n                refUserDestination.current.clear();\n              }}\n            >\n              Clear\n            </Button>\n          </Form.Group>\n        </Form.Group>\n      </Form.Group>\n      <ModelApi\n        // Passing in props - Variables defined in App.js.\n        distance={props.distance}\n        originNumber={props.originNumber}\n        destinationNumber={props.destinationNumber}\n        timeDayMonth={props.timeDayMonth}\n        routeSelect={props.routeSelect}\n        directionSelect={props.directionSelect}\n      ></ModelApi>\n    </Form>\n  );\n};\n\nexport default PredictionInput;\n"]},"metadata":{},"sourceType":"module"}