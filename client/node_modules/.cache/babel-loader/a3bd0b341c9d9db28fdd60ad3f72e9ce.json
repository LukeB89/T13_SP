{"ast":null,"code":"// Importing outside developed components.\nimport React, { useState } from \"react\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\"); // A function to request a list of stops from a user selected route going\n// in specified direction - each of these are received as input.\n\n\nexport default function RouteStopsApi(routeSelect, originNumber) {\n  // The response from the backend we need to track in state:\n  const [routeStopsResponse, setRouteStopsResponse] = useState({\n    route_stops_response: []\n  }); // // React Hook React.useEffect has a missing dependency: 'routeSelect'. Either include it or remove the dependency array\n  // // React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked\n  // The variable below has been created to avoid the two errors above.\n\n  const routeSelectMissingDependencyFix = routeSelect; // console.log(\n  //   \"RouteStopsApi - routeSelectMissingDependencyFix triggered\",\n  //   routeSelectMissingDependencyFix,\n  //   directionSelect\n  // );\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n  React.useEffect(() => {\n    if (String(routeSelectMissingDependencyFix) === \"\" && routeSelect === 0) {\n      // console.log(\"RouteStopsApi - undefined - got rendered\");\n      // initial render should be nothing.\n      return undefined;\n    } else {\n      console.log(\"RouteStopsApi - got rendered with the following values: \", routeSelectMissingDependencyFix, directionSelect);\n\n      if (directionSelect === 3) {\n        setRouteStopsResponse({\n          route_stops_response: []\n        });\n      } else {\n        axios.get(`/api/route_stops`, {\n          params: {\n            chosenRoute: routeSelectMissingDependencyFix,\n            chosenStop: originNumber\n          }\n        }).then(res => {\n          console.log(\"route select made it THIS FAR!\", routeSelectMissingDependencyFix); // const routeStopsResponse = res.data;\n\n          setRouteStopsResponse(res.data);\n        });\n      }\n    }\n  }, // Listening for changes in input values in order to\n  // trigger a call to the API  to re-render the component.\n  [routeSelectMissingDependencyFix, directionSelect]);\n  return routeStopsResponse.route_stops_response;\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/RouteStopsApi.js"],"names":["React","useState","axios","require","RouteStopsApi","routeSelect","originNumber","routeStopsResponse","setRouteStopsResponse","route_stops_response","routeSelectMissingDependencyFix","useEffect","String","undefined","console","log","directionSelect","get","params","chosenRoute","chosenStop","then","res","data"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;AACA;;;AACA,eAAe,SAASC,aAAT,CAAuBC,WAAvB,EAAoCC,YAApC,EAAkD;AAC/D;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC;AAC3DQ,IAAAA,oBAAoB,EAAE;AADqC,GAAD,CAA5D,CAF+D,CAM/D;AACA;AACA;;AACA,QAAMC,+BAA+B,GAAGL,WAAxC,CAT+D,CAU/D;AACA;AACA;AACA;AACA;AAEA;AACA;;AACAL,EAAAA,KAAK,CAACW,SAAN,CACE,MAAM;AACJ,QAAIC,MAAM,CAACF,+BAAD,CAAN,KAA4C,EAA5C,IAAkDL,WAAW,KAAK,CAAtE,EAAyE;AACvE;AACA;AACA,aAAOQ,SAAP;AACD,KAJD,MAIO;AACLC,MAAAA,OAAO,CAACC,GAAR,CACE,0DADF,EAEEL,+BAFF,EAGEM,eAHF;;AAKA,UAAIA,eAAe,KAAK,CAAxB,EAA2B;AACzBR,QAAAA,qBAAqB,CAAC;AACpBC,UAAAA,oBAAoB,EAAE;AADF,SAAD,CAArB;AAGD,OAJD,MAIO;AACLP,QAAAA,KAAK,CACFe,GADH,CACQ,kBADR,EAC2B;AACvBC,UAAAA,MAAM,EAAE;AACNC,YAAAA,WAAW,EAAET,+BADP;AAENU,YAAAA,UAAU,EAAEd;AAFN;AADe,SAD3B,EAOGe,IAPH,CAOSC,GAAD,IAAS;AACbR,UAAAA,OAAO,CAACC,GAAR,CACE,gCADF,EAEEL,+BAFF,EADa,CAKb;;AACAF,UAAAA,qBAAqB,CAACc,GAAG,CAACC,IAAL,CAArB;AACD,SAdH;AAeD;AACF;AACF,GAlCH,EAmCE;AACA;AACA,GAACb,+BAAD,EAAkCM,eAAlC,CArCF;AAwCA,SAAOT,kBAAkB,CAACE,oBAA1B;AACD","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\n// A function to request a list of stops from a user selected route going\n// in specified direction - each of these are received as input.\nexport default function RouteStopsApi(routeSelect, originNumber) {\n  // The response from the backend we need to track in state:\n  const [routeStopsResponse, setRouteStopsResponse] = useState({\n    route_stops_response: [],\n  });\n\n  // // React Hook React.useEffect has a missing dependency: 'routeSelect'. Either include it or remove the dependency array\n  // // React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked\n  // The variable below has been created to avoid the two errors above.\n  const routeSelectMissingDependencyFix = routeSelect;\n  // console.log(\n  //   \"RouteStopsApi - routeSelectMissingDependencyFix triggered\",\n  //   routeSelectMissingDependencyFix,\n  //   directionSelect\n  // );\n\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (String(routeSelectMissingDependencyFix) === \"\" && routeSelect === 0) {\n        // console.log(\"RouteStopsApi - undefined - got rendered\");\n        // initial render should be nothing.\n        return undefined;\n      } else {\n        console.log(\n          \"RouteStopsApi - got rendered with the following values: \",\n          routeSelectMissingDependencyFix,\n          directionSelect\n        );\n        if (directionSelect === 3) {\n          setRouteStopsResponse({\n            route_stops_response: [],\n          });\n        } else {\n          axios\n            .get(`/api/route_stops`, {\n              params: {\n                chosenRoute: routeSelectMissingDependencyFix,\n                chosenStop: originNumber,\n              },\n            })\n            .then((res) => {\n              console.log(\n                \"route select made it THIS FAR!\",\n                routeSelectMissingDependencyFix\n              );\n              // const routeStopsResponse = res.data;\n              setRouteStopsResponse(res.data);\n            });\n        }\n      }\n    },\n    // Listening for changes in input values in order to\n    // trigger a call to the API  to re-render the component.\n    [routeSelectMissingDependencyFix, directionSelect]\n  );\n\n  return routeStopsResponse.route_stops_response;\n}\n"]},"metadata":{},"sourceType":"module"}