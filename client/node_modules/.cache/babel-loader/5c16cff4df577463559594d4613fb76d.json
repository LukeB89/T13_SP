{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\nimport React from \"react\";\n\nconst axios = require(\"axios\");\n\nconst ModelApi = props => {\n  const [state, setState] = React.useState({\n    value: \"\"\n  });\n  const [modelResponse, setModelResponse] = React.useState([]);\n\n  const onClick = () => setModelResponse(modelResponse);\n\n  stateChange = f => {\n    const {\n      name,\n      value\n    } = f.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  React.useEffect(() => {\n    axios.get(`/api/model_result`, {\n      params: {\n        chosenTime: parseInt(props.timeDayMonth[0]),\n        chosenDay: props.timeDayMonth[1],\n        chosenMonth: props.timeDayMonth[2]\n      }\n    }).then(res => {\n      const modelResponse = res.data;\n      setModelResponse(modelResponse);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fullname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \" Full Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"fullname\",\n    onChange: this.stateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, modelResponse.model_response));\n};\n\nexport default ModelApi;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","axios","require","ModelApi","props","state","setState","useState","value","modelResponse","setModelResponse","onClick","stateChange","f","name","target","useEffect","get","params","chosenTime","parseInt","timeDayMonth","chosenDay","chosenMonth","then","res","data","model_response"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf,CAA1B;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1C;;AACA,QAAMI,OAAO,GAAG,MAAMD,gBAAgB,CAACD,aAAD,CAAtC;;AAEAG,EAAAA,WAAW,GAAIC,CAAD,IAAO;AACnB,UAAM;AAAEC,MAAAA,IAAF;AAAQN,MAAAA;AAAR,QAAkBK,CAAC,CAACE,MAA1B;AACA,SAAKT,QAAL,CAAc;AACZ,OAACQ,IAAD,GAAQN;AADI,KAAd;AAGD,GALD;;AAOAR,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBf,IAAAA,KAAK,CACFgB,GADH,CACQ,mBADR,EAC4B;AACxBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAEC,QAAQ,CAAChB,KAAK,CAACiB,YAAN,CAAmB,CAAnB,CAAD,CADd;AAENC,QAAAA,SAAS,EAAElB,KAAK,CAACiB,YAAN,CAAmB,CAAnB,CAFL;AAGNE,QAAAA,WAAW,EAAEnB,KAAK,CAACiB,YAAN,CAAmB,CAAnB;AAHP;AADgB,KAD5B,EAQGG,IARH,CAQSC,GAAD,IAAS;AACb,YAAMhB,aAAa,GAAGgB,GAAG,CAACC,IAA1B;AACAhB,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,KAXH;AAYD,GAbD,EAaG,EAbH;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,QAAQ,EAAE,KAAKG,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,aAAa,CAACkB,cAAlB,CAHF,CADF;AAOD,CAjCD;;AAmCA,eAAexB,QAAf","sourcesContent":["import React from \"react\";\n\nconst axios = require(\"axios\");\n\nconst ModelApi = (props) => {\n  const [state, setState] = React.useState({ value: \"\" });\n  const [modelResponse, setModelResponse] = React.useState([]);\n  const onClick = () => setModelResponse(modelResponse);\n\n  stateChange = (f) => {\n    const { name, value } = f.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  React.useEffect(() => {\n    axios\n      .get(`/api/model_result`, {\n        params: {\n          chosenTime: parseInt(props.timeDayMonth[0]),\n          chosenDay: props.timeDayMonth[1],\n          chosenMonth: props.timeDayMonth[2],\n        },\n      })\n      .then((res) => {\n        const modelResponse = res.data;\n        setModelResponse(modelResponse);\n      });\n  }, []);\n  return (\n    <div>\n      <label htmlFor=\"fullname\"> Full Name: </label>\n      <input type=\"text\" name=\"fullname\" onChange={this.stateChange} />\n      <p>{modelResponse.model_response}</p>\n    </div>\n  );\n};\n\nexport default ModelApi;\n"]},"metadata":{},"sourceType":"module"}