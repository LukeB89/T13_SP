{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/PredictionInput.js\";\n// Importing outside developed components.\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\"; // Importing self-developed components.\n\nimport ModelApi from \"./ModelApi\";\nimport RouteStopsApi from \"./RouteStopsApi\"; // Importing outside developed css.\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \".././styles.css\"; // Generating all of the GUI elements needed to\n// provide the user with journey time prediction\n// e.g. Date and Time select, Route select, etc.\n\nconst PredictionInput = props => {\n  console.log(\"hi route\", props.routeSelect[0]); // console.log(\"hi direction\", props.directionSelect);\n  // Tracking this in state in order to enable a submit button to trigger the ModelApi response.\n\n  const [destinationSelected, setDestinationSelected] = React.useState([]); // Get an array of the stops associated with the users selected route\n\n  const getStops = RouteStopsApi(props.routeSelect, props.directionSelect); // Conver that array if strings to integers.\n\n  const a = getStops; // A map method for Arrays, applying a function to all elements of an array.\n\n  const dir1Nums46a = a.map(function (x) {\n    return parseInt(x, 10);\n  }); // console.log(dir1Nums46a);\n  // const dir1Nums46a = require(\"../data/46A_dir1_stops.json\");\n\n  console.log(\"dir1Nums46a here\", dir1Nums46a);\n  const dir1Stops46a = [];\n\n  for (var q = 0; q < props.parsedStops.length; q++) {\n    for (var r = 0; r < dir1Nums46a.length; r++) {\n      if (dir1Nums46a[r] === parseInt(props.parsedStops[q].id)) {\n        dir1Stops46a.push(props.parsedStops[q].description);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formRoute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: [\"46A\"],\n    maxVisible: 2,\n    placeholder: \"Select a route: e.g. 46A\",\n    onChange: address => {\n      props.setRouteSelect(address);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formRoute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: [\"Phoenix Park\", \"Dun Laoghaire\"],\n    maxVisible: 2,\n    placeholder: \"Select a direction: e.g. Phoenix Park\",\n    onChange: address => {\n      if (String(address) === \"Dun Laoghaire\") {\n        props.setDirectionSelect(1);\n      } else {\n        props.setDirectionSelect(2);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formTimeOfTravel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"When are you travelling?\")), /*#__PURE__*/React.createElement(DatePicker // Inbuilt props: https://github.com/Hacker0x01/react-datepicker/blob/master/docs/index.md.\n  , {\n    selected: props.selectedTime,\n    onChange: date => props.timeChoice(date),\n    showTimeSelect: true,\n    timeFormat: \"HH:mm\",\n    timeIntervals: 60,\n    timeCaption: \"time\",\n    dateFormat: \"MMMM d, yyyy h:mm aa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formDeparture\" // CSS\n    ,\n    style: {\n      paddingTop: \"1vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: dir1Stops46a,\n    placeholder: \"Departing from: e.g. Stop 334, D'Olier Street\",\n    onChange: address => {\n      try {\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(address) === props.parsedStops[i].description) {\n            const id = props.parsedStops[i].id;\n            const lat = props.parsedStops[i].geometry.lat;\n            const lng = props.parsedStops[i].geometry.lng;\n            props.originChoice({\n              lat,\n              lng\n            });\n            props.panTo({\n              lat,\n              lng\n            });\n            props.originNumberChoice({\n              id\n            });\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formArrival\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: dir1Stops46a,\n    placeholder: \"Destination: e.g. Stop 2007, Stillorgan Road\",\n    onChange: s => {\n      try {\n        // console.log(\"button triggered\");\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(s) === props.parsedStops[i].description) {\n            const lat = props.parsedStops[i].geometry.lat;\n            const lng = props.parsedStops[i].geometry.lng;\n            props.panTo({\n              lat,\n              lng\n            });\n            setDestinationSelected(s);\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    // CSS\n    style: {\n      paddingTop: \"1vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button // Inbuilt props: https://react-bootstrap.github.io/components/buttons/#button-props.\n  , {\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => {\n      try {\n        // console.log(\"button triggered\");\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(destinationSelected) === props.parsedStops[i].description) {\n            const id = props.parsedStops[i].id;\n            const lat = props.parsedStops[i].geometry.lat;\n            const lng = props.parsedStops[i].geometry.lng;\n            props.destinationChoice({\n              lat,\n              lng\n            });\n            props.destinationNumberChoice({\n              id\n            });\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(ModelApi // Passing in props - Variables defined in App.js.\n  , {\n    originNumber: props.originNumber,\n    destinationNumber: props.destinationNumber,\n    timeDayMonth: props.timeDayMonth,\n    routeSelect: props.routeSelect,\n    directionSelect: props.directionSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PredictionInput;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/PredictionInput.js"],"names":["React","DatePicker","Typeahead","Form","Button","ModelApi","RouteStopsApi","PredictionInput","props","console","log","routeSelect","destinationSelected","setDestinationSelected","useState","getStops","directionSelect","a","dir1Nums46a","map","x","parseInt","dir1Stops46a","q","parsedStops","length","r","id","push","description","address","setRouteSelect","String","setDirectionSelect","selectedTime","date","timeChoice","paddingTop","i","lat","geometry","lng","originChoice","panTo","originNumberChoice","error","s","width","destinationChoice","destinationNumberChoice","originNumber","destinationNumber","timeDayMonth"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// Importing self-developed components.\nimport ModelApi from \"./ModelApi\";\nimport RouteStopsApi from \"./RouteStopsApi\";\n// Importing outside developed css.\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \".././styles.css\";\n\n// Generating all of the GUI elements needed to\n// provide the user with journey time prediction\n// e.g. Date and Time select, Route select, etc.\nconst PredictionInput = (props) => {\n  console.log(\"hi route\", props.routeSelect[0]);\n  // console.log(\"hi direction\", props.directionSelect);\n  // Tracking this in state in order to enable a submit button to trigger the ModelApi response.\n  const [destinationSelected, setDestinationSelected] = React.useState([]);\n  // Get an array of the stops associated with the users selected route\n  const getStops = RouteStopsApi(props.routeSelect, props.directionSelect);\n  // Conver that array if strings to integers.\n  const a = getStops;\n  // A map method for Arrays, applying a function to all elements of an array.\n  const dir1Nums46a = a.map(function (x) {\n    return parseInt(x, 10);\n  });\n\n  // console.log(dir1Nums46a);\n\n  // const dir1Nums46a = require(\"../data/46A_dir1_stops.json\");\n  console.log(\"dir1Nums46a here\", dir1Nums46a);\n  const dir1Stops46a = [];\n\n  for (var q = 0; q < props.parsedStops.length; q++) {\n    for (var r = 0; r < dir1Nums46a.length; r++) {\n      if (dir1Nums46a[r] === parseInt(props.parsedStops[q].id)) {\n        dir1Stops46a.push(props.parsedStops[q].description);\n      }\n    }\n  }\n\n  return (\n    <Form>\n      <Form.Group\n        // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n        controlId=\"formRoute\"\n      >\n        <Typeahead\n          // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n          id=\"basic-example\"\n          options={[\"46A\"]}\n          maxVisible={2}\n          placeholder=\"Select a route: e.g. 46A\"\n          onChange={(address) => {\n            props.setRouteSelect(address);\n          }}\n        />\n      </Form.Group>\n      <Form.Group\n        // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n        controlId=\"formRoute\"\n      >\n        <Typeahead\n          // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n          id=\"basic-example\"\n          options={[\"Phoenix Park\", \"Dun Laoghaire\"]}\n          maxVisible={2}\n          placeholder=\"Select a direction: e.g. Phoenix Park\"\n          onChange={(address) => {\n            if (String(address) === \"Dun Laoghaire\") {\n              props.setDirectionSelect(1);\n            } else {\n              props.setDirectionSelect(2);\n            }\n          }}\n        />\n      </Form.Group>\n\n      <Form.Group\n        // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n        controlId=\"formTimeOfTravel\"\n      >\n        <Form.Label>\n          <strong>When are you travelling?</strong>\n        </Form.Label>\n        <DatePicker\n          // Inbuilt props: https://github.com/Hacker0x01/react-datepicker/blob/master/docs/index.md.\n          selected={props.selectedTime}\n          onChange={(date) => props.timeChoice(date)}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={60}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\n        />\n\n        <Form.Group\n          // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n          controlId=\"formDeparture\"\n          // CSS\n          style={{ paddingTop: \"1vh\" }}\n        >\n          <Typeahead\n            // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n            id=\"basic-example\"\n            options={dir1Stops46a}\n            placeholder=\"Departing from: e.g. Stop 334, D'Olier Street\"\n            onChange={(address) => {\n              try {\n                for (var i = 0; i < props.parsedStops.length; i++) {\n                  if (String(address) === props.parsedStops[i].description) {\n                    const id = props.parsedStops[i].id;\n                    const lat = props.parsedStops[i].geometry.lat;\n                    const lng = props.parsedStops[i].geometry.lng;\n                    props.originChoice({ lat, lng });\n                    props.panTo({ lat, lng });\n                    props.originNumberChoice({ id });\n                  }\n                }\n              } catch (error) {\n                console.log(\"ðŸ˜± Error: \", error);\n              }\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group\n          // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n          controlId=\"formArrival\"\n        >\n          <Typeahead\n            // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n            id=\"basic-example\"\n            options={dir1Stops46a}\n            placeholder=\"Destination: e.g. Stop 2007, Stillorgan Road\"\n            onChange={(s) => {\n              try {\n                // console.log(\"button triggered\");\n                for (var i = 0; i < props.parsedStops.length; i++) {\n                  if (String(s) === props.parsedStops[i].description) {\n                    const lat = props.parsedStops[i].geometry.lat;\n                    const lng = props.parsedStops[i].geometry.lng;\n                    props.panTo({ lat, lng });\n                    setDestinationSelected(s);\n                  }\n                }\n              } catch (error) {\n                console.log(\"ðŸ˜± Error: \", error);\n              }\n            }}\n          />\n          <Form.Group\n            // CSS\n            style={{ paddingTop: \"1vh\" }}\n          >\n            <Button\n              // Inbuilt props: https://react-bootstrap.github.io/components/buttons/#button-props.\n              style={{ width: \"100%\" }}\n              onClick={() => {\n                try {\n                  // console.log(\"button triggered\");\n                  for (var i = 0; i < props.parsedStops.length; i++) {\n                    if (\n                      String(destinationSelected) ===\n                      props.parsedStops[i].description\n                    ) {\n                      const id = props.parsedStops[i].id;\n                      const lat = props.parsedStops[i].geometry.lat;\n                      const lng = props.parsedStops[i].geometry.lng;\n                      props.destinationChoice({ lat, lng });\n                      props.destinationNumberChoice({ id });\n                    }\n                  }\n                } catch (error) {\n                  console.log(\"ðŸ˜± Error: \", error);\n                }\n              }}\n            >\n              Submit\n            </Button>\n          </Form.Group>\n        </Form.Group>\n      </Form.Group>\n      <ModelApi\n        // Passing in props - Variables defined in App.js.\n        originNumber={props.originNumber}\n        destinationNumber={props.destinationNumber}\n        timeDayMonth={props.timeDayMonth}\n        routeSelect={props.routeSelect}\n        directionSelect={props.directionSelect}\n      ></ModelApi>\n    </Form>\n  );\n};\n\nexport default PredictionInput;\n"]},"metadata":{},"sourceType":"module"}