{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\n// Importing outside developed components.\nimport React, { useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({\n    message: \"\",\n    distance: \"\",\n    instructions: \"\",\n    num_stops: \"\"\n  });\n  const [modelResponse, setModelResponse] = useState({\n    model_response: \"\"\n  }); // eslint-disable-next-line\n\n  const [percentileResponse, setPercentileResponse] = useState(); // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n  // console.log(\"Here is directionSelect in ModelApi\", props.directionSelect);\n\n  const infoArray = [];\n\n  if (props.distance !== null) {\n    if (props.distance.selectedRouteArray[0] !== undefined) {\n      for (var i = 0; i < props.distance.selectedRouteArray.length; i++) {\n        for (var j = 0; j < props.distance.selectedRouteArray[i].legs.length; j++) {\n          for (var k = 0; k < props.distance.selectedRouteArray[i].legs[j].steps.length; k++) {\n            if (String(props.distance.selectedRouteArray[i].legs[j].steps[k].travel_mode) === \"TRANSIT\") {\n              // console.log(\"I made it this far\");\n              infoArray.push(props.distance.selectedRouteArray[i].legs[j].distance.text);\n              infoArray.push(props.distance.selectedRouteArray[i].legs[j].steps[k].instructions);\n              infoArray.push(props.distance.selectedRouteArray[i].legs[j].steps[k].transit.headsign);\n              infoArray.push(String(props.distance.selectedRouteArray[i].legs[j].steps[k].transit.num_stops) + \" stops\");\n            }\n          }\n        }\n      }\n    }\n  } // console.log(infoArray);\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n\n  React.useEffect(() => {\n    if (String(props.routeSelect) === \"\" || props.directionSelect === undefined) {\n      // initial render should be nothing.\n      // console.log(\"ModelApi - model_result (a) has been triggered\");\n      // setModelResponse({\n      //   model_response: \"\",\n      // });\n      return undefined;\n    } else {\n      console.log(\"ModelApi - model_result (c) has been triggered with: 1 routeSelect: \", props.routeSelect, \"2: directionSelect\", props.directionSelect);\n      axios.get(`/api/model_result`, {\n        params: {\n          chosenRoute: props.routeSelect,\n          chosenDirection: props.directionSelect,\n          chosenTime: props.timeDayMonth[0],\n          chosenMinute: props.timeDayMonth[1],\n          chosenDay: props.timeDayMonth[2],\n          chosenMonth: props.timeDayMonth[3]\n        }\n      }).then(res => {\n        const modelResponse = res.data;\n        setModelResponse(modelResponse);\n        console.log(\"setModelResponse has been triggered with the following values - route:\" + props.routeSelect, \"direction:\" + props.directionSelect, \"hour:\" + props.timeDayMonth[0], \"minute:\" + props.timeDayMonth[1], \"day:\" + props.timeDayMonth[2], \"month\" + props.timeDayMonth[3]);\n      });\n    }\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  [props.routeSelect, props.directionSelect, props.timeDayMonth]);\n  React.useEffect(() => {\n    // Making sure nothing is renedered until stops have been chosen.\n    if (props.directionSelect === undefined || String(modelResponse.model_response) === \"\" || props.destinationNumber === 0 || props.originNumber === 0) {\n      console.log(\"ModelApi - percentile_result (a) has been triggered\"); // initial render should be nothing.\n\n      setMessage({\n        message: \"\",\n        distance: \"\",\n        instructions: \"\",\n        num_stops: \"\"\n      });\n    } else {\n      console.log(\"And here is what ModelApi/percentile_result triggered with: 1 directionSelect: \", props.directionSelect, \"2: modelResponse.model_response\", modelResponse.model_response);\n      axios.get(`/api/percentile_result`, {\n        params: {\n          chosenRoute: props.routeSelect,\n          chosenDirection: props.directionSelect,\n          chosenTime: props.timeDayMonth[0],\n          chosenDay: props.timeDayMonth[2],\n          chosenMonth: props.timeDayMonth[3],\n          origin: props.originNumber,\n          destination: props.destinationNumber,\n          modelResponse: modelResponse.model_response\n        }\n      }).then(res => {\n        const percentileResponse = res.data;\n        setPercentileResponse(percentileResponse);\n\n        if (parseInt(percentileResponse.percentile_response) < 0) {\n          setMessage({\n            message: \"Please enter a correct combination of stops\"\n          });\n        } else if (parseInt(percentileResponse.percentile_response) === 1) {\n          setMessage({\n            message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minute.\"\n          });\n        } else if (typeof percentileResponse.percentile_response === \"string\") {\n          setMessage({\n            message: String(percentileResponse.percentile_response),\n            distance: infoArray[0],\n            instructions: infoArray[1],\n            num_stops: infoArray[3]\n          });\n        } else {\n          setMessage({\n            message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minutes.\",\n            distance: infoArray[0],\n            instructions: infoArray[1],\n            num_stops: infoArray[3]\n          });\n        }\n\n        console.log(\"setPercentileResponse has been triggered with the following values: \", props.timeDayMonth[0], props.timeDayMonth[1], props.originNumber, props.destinationNumber, modelResponse.model_response);\n      });\n    }\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  // eslint-disable-next-line\n  [props, modelResponse.model_response, props.routeSelect, props.originNumber, props.destinationNumber, props.distance] // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n  // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n  return /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, message.message), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, message.instructions), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, message.distance), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, message.num_stops));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","useState","ListGroup","axios","require","ModelApi","props","message","setMessage","distance","instructions","num_stops","modelResponse","setModelResponse","model_response","percentileResponse","setPercentileResponse","infoArray","selectedRouteArray","undefined","i","length","j","legs","k","steps","String","travel_mode","push","text","transit","headsign","useEffect","routeSelect","directionSelect","console","log","get","params","chosenRoute","chosenDirection","chosenTime","timeDayMonth","chosenMinute","chosenDay","chosenMonth","then","res","data","destinationNumber","originNumber","origin","destination","parseInt","percentile_response"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({\n    message: \"\",\n    distance: \"\",\n    instructions: \"\",\n    num_stops: \"\",\n  });\n  const [modelResponse, setModelResponse] = useState({ model_response: \"\" });\n  // eslint-disable-next-line\n  const [percentileResponse, setPercentileResponse] = useState();\n  // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n  // console.log(\"Here is directionSelect in ModelApi\", props.directionSelect);\n  const infoArray = [];\n  if (props.distance !== null) {\n    if (props.distance.selectedRouteArray[0] !== undefined) {\n      for (var i = 0; i < props.distance.selectedRouteArray.length; i++) {\n        for (\n          var j = 0;\n          j < props.distance.selectedRouteArray[i].legs.length;\n          j++\n        ) {\n          for (\n            var k = 0;\n            k < props.distance.selectedRouteArray[i].legs[j].steps.length;\n            k++\n          ) {\n            if (\n              String(\n                props.distance.selectedRouteArray[i].legs[j].steps[k]\n                  .travel_mode\n              ) === \"TRANSIT\"\n            ) {\n              // console.log(\"I made it this far\");\n              infoArray.push(\n                props.distance.selectedRouteArray[i].legs[j].distance.text\n              );\n              infoArray.push(\n                props.distance.selectedRouteArray[i].legs[j].steps[k]\n                  .instructions\n              );\n              infoArray.push(\n                props.distance.selectedRouteArray[i].legs[j].steps[k].transit\n                  .headsign\n              );\n              infoArray.push(\n                String(\n                  props.distance.selectedRouteArray[i].legs[j].steps[k].transit\n                    .num_stops\n                ) + \" stops\"\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n  // console.log(infoArray);\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (\n        String(props.routeSelect) === \"\" ||\n        props.directionSelect === undefined\n      ) {\n        // initial render should be nothing.\n        // console.log(\"ModelApi - model_result (a) has been triggered\");\n        // setModelResponse({\n        //   model_response: \"\",\n        // });\n        return undefined;\n      } else {\n        console.log(\n          \"ModelApi - model_result (c) has been triggered with: 1 routeSelect: \",\n          props.routeSelect,\n          \"2: directionSelect\",\n          props.directionSelect\n        );\n        axios\n          .get(`/api/model_result`, {\n            params: {\n              chosenRoute: props.routeSelect,\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenMinute: props.timeDayMonth[1],\n              chosenDay: props.timeDayMonth[2],\n              chosenMonth: props.timeDayMonth[3],\n            },\n          })\n          .then((res) => {\n            const modelResponse = res.data;\n            setModelResponse(modelResponse);\n\n            console.log(\n              \"setModelResponse has been triggered with the following values - route:\" +\n                props.routeSelect,\n              \"direction:\" + props.directionSelect,\n              \"hour:\" + props.timeDayMonth[0],\n              \"minute:\" + props.timeDayMonth[1],\n              \"day:\" + props.timeDayMonth[2],\n              \"month\" + props.timeDayMonth[3]\n            );\n          });\n      }\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    [props.routeSelect, props.directionSelect, props.timeDayMonth]\n  );\n\n  React.useEffect(\n    () => {\n      // Making sure nothing is renedered until stops have been chosen.\n      if (\n        props.directionSelect === undefined ||\n        String(modelResponse.model_response) === \"\" ||\n        props.destinationNumber === 0 ||\n        props.originNumber === 0\n      ) {\n        console.log(\"ModelApi - percentile_result (a) has been triggered\");\n        // initial render should be nothing.\n        setMessage({\n          message: \"\",\n          distance: \"\",\n          instructions: \"\",\n          num_stops: \"\",\n        });\n      } else {\n        console.log(\n          \"And here is what ModelApi/percentile_result triggered with: 1 directionSelect: \",\n          props.directionSelect,\n          \"2: modelResponse.model_response\",\n          modelResponse.model_response\n        );\n        axios\n          .get(`/api/percentile_result`, {\n            params: {\n              chosenRoute: props.routeSelect,\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[2],\n              chosenMonth: props.timeDayMonth[3],\n              origin: props.originNumber,\n              destination: props.destinationNumber,\n              modelResponse: modelResponse.model_response,\n            },\n          })\n          .then((res) => {\n            const percentileResponse = res.data;\n            setPercentileResponse(percentileResponse);\n            if (parseInt(percentileResponse.percentile_response) < 0) {\n              setMessage({\n                message: \"Please enter a correct combination of stops\",\n              });\n            } else if (parseInt(percentileResponse.percentile_response) === 1) {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minute.\",\n              });\n            } else if (\n              typeof percentileResponse.percentile_response === \"string\"\n            ) {\n              setMessage({\n                message: String(percentileResponse.percentile_response),\n                distance: infoArray[0],\n                instructions: infoArray[1],\n                num_stops: infoArray[3],\n              });\n            } else {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minutes.\",\n                distance: infoArray[0],\n                instructions: infoArray[1],\n                num_stops: infoArray[3],\n              });\n            }\n\n            console.log(\n              \"setPercentileResponse has been triggered with the following values: \",\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.originNumber,\n              props.destinationNumber,\n              modelResponse.model_response\n            );\n          });\n      }\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    // eslint-disable-next-line\n    [\n      props,\n      modelResponse.model_response,\n      props.routeSelect,\n      props.originNumber,\n      props.destinationNumber,\n      props.distance,\n    ]\n    // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n    // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n\n  return (\n    <ListGroup variant=\"flush\">\n      <ListGroup.Item>{message.message}</ListGroup.Item>\n      <ListGroup.Item>{message.instructions}</ListGroup.Item>\n      <ListGroup.Item>{message.distance}</ListGroup.Item>\n      <ListGroup.Item>{message.num_stops}</ListGroup.Item>\n    </ListGroup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}