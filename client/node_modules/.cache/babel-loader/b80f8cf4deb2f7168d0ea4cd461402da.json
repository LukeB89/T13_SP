{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Table.js\";\nimport React from \"react\";\n\nconst data = require(\"../data/data.json\");\n\nconst Table = () => {\n  const dataImport = data[0];\n\n  function renderHeaderCells() {\n    let headerCells = [];\n    Object.keys(dataImport).map((x, i) => {\n      let items = Object.values(dataImport)[i];\n      headerCells.push( /*#__PURE__*/React.createElement(\"th\", {\n        colSpan: Object.keys(items).length,\n        key: i.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, x));\n      return headerCells;\n    });\n    return headerCells;\n  }\n\n  function renderSubHeaders() {\n    let subHeaders = [];\n    let subs = Object.values(dataImport);\n    subs.map((x, i) => {\n      if (subs[i] !== undefined) {\n        Object.keys(subs[i]).map(y => {\n          subHeaders.push( /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 27\n            }\n          }, y));\n          return subHeaders;\n        });\n      }\n\n      return subHeaders;\n    });\n    return subHeaders;\n  }\n\n  function renderResults() {\n    let results = [];\n    let res = Object.values(dataImport);\n    res.map((x, i) => {\n      if (res[i] !== undefined) {\n        Object.values(res[i]).map(y => {\n          results.push( /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 24\n            }\n          }, y));\n          return results;\n        });\n      }\n\n      return results;\n    });\n    return results;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Fruit Basket\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, renderHeaderCells())), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, renderSubHeaders())), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, renderResults()))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Table.js"],"names":["React","data","require","Table","dataImport","renderHeaderCells","headerCells","Object","keys","map","x","i","items","values","push","length","name","renderSubHeaders","subHeaders","subs","undefined","y","renderResults","results","res"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst data = require(\"../data/data.json\");\n\nconst Table = () => {\n  const dataImport = data[0];\n\n  function renderHeaderCells() {\n    let headerCells = [];\n\n    Object.keys(dataImport).map((x, i) => {\n      let items = Object.values(dataImport)[i];\n      headerCells.push(\n        <th colSpan={Object.keys(items).length} key={i.name}>\n          {x}\n        </th>\n      );\n      return headerCells;\n    });\n    return headerCells;\n  }\n\n  function renderSubHeaders() {\n    let subHeaders = [];\n    let subs = Object.values(dataImport);\n\n    subs.map((x, i) => {\n      if (subs[i] !== undefined) {\n        Object.keys(subs[i]).map((y) => {\n          subHeaders.push(<td>{y}</td>);\n          return subHeaders;\n        });\n      }\n      return subHeaders;\n    });\n    return subHeaders;\n  }\n\n  function renderResults() {\n    let results = [];\n    let res = Object.values(dataImport);\n\n    res.map((x, i) => {\n      if (res[i] !== undefined) {\n        Object.values(res[i]).map((y) => {\n          results.push(<td>{y}</td>);\n          return results;\n        });\n      }\n      return results;\n    });\n\n    return results;\n  }\n\n  return (\n    <React.Fragment>\n      <p>Fruit Basket</p>\n      <table>\n        <thead>\n          <tr>{renderHeaderCells()}</tr>\n        </thead>\n        <tbody>\n          <tr>{renderSubHeaders()}</tr>\n          {/* <tr>{renderResults()}</tr> */}\n        </tbody>\n        <tbody>\n          <tr>{renderResults()}</tr>\n        </tbody>\n      </table>\n    </React.Fragment>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}