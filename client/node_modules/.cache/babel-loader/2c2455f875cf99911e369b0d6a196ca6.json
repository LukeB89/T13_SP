{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\nimport React from \"react\";\n\nconst axios = require(\"axios\");\n\nconst ModelApi = props => {\n  const [modelResponse, setModelResponse] = React.useState([]);\n  React.useEffect(() => {\n    axios.get(`/api/model_result`, {\n      params: {\n        chosenTime: parseInt(props.timeDayMonth[0]),\n        chosenDay: props.timeDayMonth[1],\n        chosenMonth: props.timeDayMonth[2]\n      }\n    }).then(res => {\n      const modelResponse = res.data;\n      setModelResponse(modelResponse);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"This journey is estimated to take \", modelResponse.model_response, \" minutes\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: forceUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Refresh\"));\n};\n\nexport default ModelApi;\n\nfunction useForceUpdate() {\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nlet count = 0;\n\nfunction App() {\n  let forceUpdate = useForceUpdate();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, count++, \" times clicked\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: forceUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Refresh\"));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","axios","require","ModelApi","props","modelResponse","setModelResponse","useState","useEffect","get","params","chosenTime","parseInt","timeDayMonth","chosenDay","chosenMonth","then","res","data","model_response","forceUpdate","useForceUpdate","value","setState","count","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1C;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBP,IAAAA,KAAK,CACFQ,GADH,CACQ,mBADR,EAC4B;AACxBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAEC,QAAQ,CAACR,KAAK,CAACS,YAAN,CAAmB,CAAnB,CAAD,CADd;AAENC,QAAAA,SAAS,EAAEV,KAAK,CAACS,YAAN,CAAmB,CAAnB,CAFL;AAGNE,QAAAA,WAAW,EAAEX,KAAK,CAACS,YAAN,CAAmB,CAAnB;AAHP;AADgB,KAD5B,EAQGG,IARH,CAQSC,GAAD,IAAS;AACb,YAAMZ,aAAa,GAAGY,GAAG,CAACC,IAA1B;AACAZ,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,KAXH;AAYD,GAbD,EAaG,EAbH;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACqCA,aAAa,CAACc,cADnD,aADF,eAIE;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF;AAQD,CA1BD;;AA4BA,eAAejB,QAAf;;AAEA,SAASkB,cAAT,GAA0B;AACxB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAhC;AACA,SAAO,MAAMgB,QAAQ,CAAC,CAACD,KAAF,CAArB;AACD;;AAED,IAAIE,KAAK,GAAG,CAAZ;;AAEA,SAASC,GAAT,GAAe;AACb,MAAIL,WAAW,GAAGC,cAAc,EAAhC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,KAAK,EAAV,mBADF,eAGE;AAAQ,IAAA,OAAO,EAAEJ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD","sourcesContent":["import React from \"react\";\n\nconst axios = require(\"axios\");\n\nconst ModelApi = (props) => {\n  const [modelResponse, setModelResponse] = React.useState([]);\n\n  React.useEffect(() => {\n    axios\n      .get(`/api/model_result`, {\n        params: {\n          chosenTime: parseInt(props.timeDayMonth[0]),\n          chosenDay: props.timeDayMonth[1],\n          chosenMonth: props.timeDayMonth[2],\n        },\n      })\n      .then((res) => {\n        const modelResponse = res.data;\n        setModelResponse(modelResponse);\n      });\n  }, []);\n\n  return (\n    <div>\n      <p>\n        This journey is estimated to take {modelResponse.model_response} minutes\n      </p>\n      <button onClick={forceUpdate}>Refresh</button>\n    </div>\n  );\n};\n\nexport default ModelApi;\n\nfunction useForceUpdate() {\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nlet count = 0;\n\nfunction App() {\n  let forceUpdate = useForceUpdate();\n\n  return (\n    <div>\n      <h1>{count++} times clicked</h1>\n\n      <button onClick={forceUpdate}>Refresh</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}