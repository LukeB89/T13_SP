{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/PredictionInput.js\";\n// Importing outside developed components.\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\"; // Importing self-developed components.\n\nimport ModelApi from \"./ModelApi\";\nimport RouteStopsApi from \"./RouteStopsApi\"; // Importing outside developed css.\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \".././styles.css\"; // Generating all of the GUI elements needed to provide the user with\n// journey time prediction. e.g. Date and Time select, Route select, etc.\n\nconst PredictionInput = props => {\n  // Tracking this in state in order to enable a submit button to trigger the ModelApi response.\n  const [destinationSelected, setDestinationSelected] = React.useState([]); // Getting a list of stops and the direction from this api route.\n  // Takes the users chosen route and origin stop as input.\n\n  const getStops = RouteStopsApi(props.routeSelect, props.originNumber); // // console.log(\"PredictionInput received routeSelect\", props.routeSelect);\n  // // For the Typeaheads containing bus route destination, user origin & user destination .\n  // const refRouteDestination = React.useRef();\n  // const refUserOrigin = React.useRef();\n  // const refUserDestination = React.useRef();\n\n  const directionIndicator = parseInt(getStops[0]);\n  console.log(\"this is the direction indicator.\", parseInt(getStops[0]));\n  getStops.splice(0, 1); // Removes the first element of getStops\n  // console.log(\"PredictionInput: getStops triggered after splice: \", getStops);\n  // Convert that array of strings to integers.\n  // const a = getStops;\n  // A map method for Arrays, applying a function to all elements of an array.\n\n  const directionStopNumbers = getStops.map(function (x) {\n    return parseInt(x, 10);\n  }); // console.log(\n  //   \"In PredictionInput - directionStopNumbers here\",\n  //   directionStopNumbers\n  // );\n\n  const routeDirectionStops = [];\n\n  for (var q = 0; q < props.parsedStops.length; q++) {\n    for (var r = 0; r < directionStopNumbers.length; r++) {\n      if (directionStopNumbers[r] === parseInt(props.parsedStops[q].id)) {\n        routeDirectionStops.push(props.parsedStops[q].description);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formRoute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: props.allRoutes,\n    placeholder: \"Select a route: e.g. 46A\",\n    onChange: route => {\n      try {\n        for (var i = 0; i < props.allRoutes.length; i++) {\n          if (String(route) === props.allRoutes[i]) {\n            const routeString = props.allRoutes[i];\n            props.routeChoice({\n              routeString\n            });\n            props.panTwo({\n              lat: 53.349804,\n              lng: -6.30131\n            });\n            props.setRouteSelect(routeString);\n            props.setResponse(null); // refRouteDestination.current.clear();\n            // refUserOrigin.current.clear();\n            // refUserDestination.current.clear();\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formTimeOfTravel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"When are you travelling?\")), /*#__PURE__*/React.createElement(DatePicker // Inbuilt props: https://github.com/Hacker0x01/react-datepicker/blob/master/docs/index.md.\n  , {\n    selected: props.selectedTime,\n    onChange: date => props.timeChoice(date),\n    showTimeSelect: true,\n    timeFormat: \"HH:mm\",\n    timeIntervals: 60,\n    timeCaption: \"time\",\n    dateFormat: \"MMMM d, yyyy h:mm aa\" //  CSS - not working, find a fix.\n    ,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formDeparture\" // CSS\n    ,\n    style: {\n      paddingTop: \"2vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: props.filteredStops,\n    placeholder: \"Departing from: e.g. Stop 334, D'Olier Street\",\n    ref: refUserOrigin,\n    onChange: address => {\n      try {\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(address) === props.parsedStops[i].description) {\n            const id = props.parsedStops[i].id;\n            const lat = props.parsedStops[i].geometry.lat;\n            const lng = props.parsedStops[i].geometry.lng; // props.setDirectionSelect(directionIndicator);\n\n            props.originNumberChoice({\n              id\n            });\n            props.originChoice({\n              lat,\n              lng\n            });\n            props.panTo({\n              lat,\n              lng\n            });\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n    controlId: \"formArrival\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n  , {\n    id: \"basic-example\",\n    options: routeDirectionStops,\n    placeholder: \"Destination: e.g. Stop 2007, Stillorgan Road\",\n    ref: refUserDestination,\n    onChange: s => {\n      try {\n        // console.log(\"button triggered\");\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(s) === props.parsedStops[i].description) {\n            const lat = props.parsedStops[i].geometry.lat;\n            const lng = props.parsedStops[i].geometry.lng;\n            props.panTo({\n              lat,\n              lng\n            });\n            setDestinationSelected(s);\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    // CSS\n    style: {\n      paddingTop: \"1vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button // Inbuilt props: https://react-bootstrap.github.io/components/buttons/#button-props.\n  , {\n    style: {\n      width: \"100%\"\n    },\n    onClick: () => {\n      try {\n        // console.log(\"PredictionInput button triggered\");\n        for (var i = 0; i < props.parsedStops.length; i++) {\n          if (String(destinationSelected) === props.parsedStops[i].description) {\n            const id = props.parsedStops[i].id;\n            const lat = props.parsedStops[i].geometry.lat;\n            const lng = props.parsedStops[i].geometry.lng;\n            props.destinationChoice({\n              lat,\n              lng\n            });\n            props.destinationNumberChoice({\n              id\n            });\n          }\n        }\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(ModelApi // Passing in props - Variables defined in App.js.\n  , {\n    originNumber: props.originNumber,\n    destinationNumber: props.destinationNumber,\n    timeDayMonth: props.timeDayMonth,\n    routeSelect: props.routeSelect,\n    directionSelect: props.directionSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PredictionInput;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/PredictionInput.js"],"names":["React","DatePicker","Typeahead","Form","Button","ModelApi","RouteStopsApi","PredictionInput","props","destinationSelected","setDestinationSelected","useState","getStops","routeSelect","originNumber","directionIndicator","parseInt","console","log","splice","directionStopNumbers","map","x","routeDirectionStops","q","parsedStops","length","r","id","push","description","allRoutes","route","i","String","routeString","routeChoice","panTwo","lat","lng","setRouteSelect","setResponse","error","textAlign","selectedTime","date","timeChoice","paddingTop","filteredStops","refUserOrigin","address","geometry","originNumberChoice","originChoice","panTo","refUserDestination","s","width","destinationChoice","destinationNumberChoice","destinationNumber","timeDayMonth","directionSelect"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n// Importing self-developed components.\nimport ModelApi from \"./ModelApi\";\nimport RouteStopsApi from \"./RouteStopsApi\";\n// Importing outside developed css.\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \".././styles.css\";\n\n// Generating all of the GUI elements needed to provide the user with\n// journey time prediction. e.g. Date and Time select, Route select, etc.\nconst PredictionInput = (props) => {\n  // Tracking this in state in order to enable a submit button to trigger the ModelApi response.\n  const [destinationSelected, setDestinationSelected] = React.useState([]);\n\n  // Getting a list of stops and the direction from this api route.\n  // Takes the users chosen route and origin stop as input.\n  const getStops = RouteStopsApi(props.routeSelect, props.originNumber);\n\n  // // console.log(\"PredictionInput received routeSelect\", props.routeSelect);\n  // // For the Typeaheads containing bus route destination, user origin & user destination .\n  // const refRouteDestination = React.useRef();\n  // const refUserOrigin = React.useRef();\n  // const refUserDestination = React.useRef();\n\n  const directionIndicator = parseInt(getStops[0]);\n  console.log(\"this is the direction indicator.\", parseInt(getStops[0]));\n  getStops.splice(0, 1); // Removes the first element of getStops\n  // console.log(\"PredictionInput: getStops triggered after splice: \", getStops);\n\n  // Convert that array of strings to integers.\n  // const a = getStops;\n  // A map method for Arrays, applying a function to all elements of an array.\n  const directionStopNumbers = getStops.map(function (x) {\n    return parseInt(x, 10);\n  });\n\n  // console.log(\n  //   \"In PredictionInput - directionStopNumbers here\",\n  //   directionStopNumbers\n  // );\n  const routeDirectionStops = [];\n\n  for (var q = 0; q < props.parsedStops.length; q++) {\n    for (var r = 0; r < directionStopNumbers.length; r++) {\n      if (directionStopNumbers[r] === parseInt(props.parsedStops[q].id)) {\n        routeDirectionStops.push(props.parsedStops[q].description);\n      }\n    }\n  }\n\n  return (\n    <Form>\n      <Form.Group\n        // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n        controlId=\"formRoute\"\n      >\n        <Typeahead\n          // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n          id=\"basic-example\"\n          options={props.allRoutes}\n          placeholder=\"Select a route: e.g. 46A\"\n          onChange={(route) => {\n            try {\n              for (var i = 0; i < props.allRoutes.length; i++) {\n                if (String(route) === props.allRoutes[i]) {\n                  const routeString = props.allRoutes[i];\n                  props.routeChoice({ routeString });\n                  props.panTwo({ lat: 53.349804, lng: -6.30131 });\n                  props.setRouteSelect(routeString);\n                  props.setResponse(null);\n                  // refRouteDestination.current.clear();\n                  // refUserOrigin.current.clear();\n                  // refUserDestination.current.clear();\n                }\n              }\n            } catch (error) {\n              console.log(\"ðŸ˜± Error: \", error);\n            }\n          }}\n        />\n      </Form.Group>\n\n      <Form.Group\n        // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n        controlId=\"formTimeOfTravel\"\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <strong style={{ textAlign: \"center\" }}>\n            When are you travelling?\n          </strong>\n        </div>\n\n        <DatePicker\n          // Inbuilt props: https://github.com/Hacker0x01/react-datepicker/blob/master/docs/index.md.\n          selected={props.selectedTime}\n          onChange={(date) => props.timeChoice(date)}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={60}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\n          //  CSS - not working, find a fix.\n          style={{ textAlign: \"center\" }}\n        />\n\n        <Form.Group\n          // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n          controlId=\"formDeparture\"\n          // CSS\n          style={{ paddingTop: \"2vh\" }}\n        >\n          <Typeahead\n            // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n            id=\"basic-example\"\n            options={props.filteredStops}\n            placeholder=\"Departing from: e.g. Stop 334, D'Olier Street\"\n            ref={refUserOrigin}\n            onChange={(address) => {\n              try {\n                for (var i = 0; i < props.parsedStops.length; i++) {\n                  if (String(address) === props.parsedStops[i].description) {\n                    const id = props.parsedStops[i].id;\n                    const lat = props.parsedStops[i].geometry.lat;\n                    const lng = props.parsedStops[i].geometry.lng;\n                    // props.setDirectionSelect(directionIndicator);\n                    props.originNumberChoice({ id });\n                    props.originChoice({ lat, lng });\n                    props.panTo({ lat, lng });\n                  }\n                }\n              } catch (error) {\n                console.log(\"ðŸ˜± Error: \", error);\n              }\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group\n          // Inbuilt props: https://react-bootstrap.github.io/components/forms/#form-group-props.\n          controlId=\"formArrival\"\n        >\n          <Typeahead\n            // Inbuilt props: https://github.com/ericgio/react-bootstrap-typeahead/blob/master/docs/API.md#typeahead.\n            id=\"basic-example\"\n            options={routeDirectionStops}\n            placeholder=\"Destination: e.g. Stop 2007, Stillorgan Road\"\n            ref={refUserDestination}\n            onChange={(s) => {\n              try {\n                // console.log(\"button triggered\");\n                for (var i = 0; i < props.parsedStops.length; i++) {\n                  if (String(s) === props.parsedStops[i].description) {\n                    const lat = props.parsedStops[i].geometry.lat;\n                    const lng = props.parsedStops[i].geometry.lng;\n                    props.panTo({ lat, lng });\n                    setDestinationSelected(s);\n                  }\n                }\n              } catch (error) {\n                console.log(\"ðŸ˜± Error: \", error);\n              }\n            }}\n          />\n\n          <Form.Group\n            // CSS\n            style={{ paddingTop: \"1vh\" }}\n          >\n            <Button\n              // Inbuilt props: https://react-bootstrap.github.io/components/buttons/#button-props.\n              style={{ width: \"100%\" }}\n              onClick={() => {\n                try {\n                  // console.log(\"PredictionInput button triggered\");\n                  for (var i = 0; i < props.parsedStops.length; i++) {\n                    if (\n                      String(destinationSelected) ===\n                      props.parsedStops[i].description\n                    ) {\n                      const id = props.parsedStops[i].id;\n                      const lat = props.parsedStops[i].geometry.lat;\n                      const lng = props.parsedStops[i].geometry.lng;\n                      props.destinationChoice({ lat, lng });\n                      props.destinationNumberChoice({ id });\n                    }\n                  }\n                } catch (error) {\n                  console.log(\"ðŸ˜± Error: \", error);\n                }\n              }}\n            >\n              Submit\n            </Button>\n          </Form.Group>\n        </Form.Group>\n      </Form.Group>\n      <ModelApi\n        // Passing in props - Variables defined in App.js.\n        originNumber={props.originNumber}\n        destinationNumber={props.destinationNumber}\n        timeDayMonth={props.timeDayMonth}\n        routeSelect={props.routeSelect}\n        directionSelect={props.directionSelect}\n      ></ModelApi>\n    </Form>\n  );\n};\n\nexport default PredictionInput;\n"]},"metadata":{},"sourceType":"module"}