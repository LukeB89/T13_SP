{"ast":null,"code":"// Importing outside developed components.\nimport React, { useState } from \"react\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\"); // A function to request a list of stops from a user selected route going\n// in specified direction - each of these are received as input.\n\n\nexport default function RouteStopsApi(routeSelect, directionSelect) {\n  // The response from the backend we need to track in state:\n  const [routeStopsResponse, setRouteStopsResponse] = useState({\n    route_stops_response: []\n  }); // React Hook React.useEffect has a missing dependency: 'routeSelect'. Either include it or remove the dependency array\n  // React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checke\n\n  const routeSelectMissingDependencyFix = routeSelect[0]; // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n  React.useEffect(() => {\n    if (routeSelect[0] === undefined || directionSelect === undefined) {\n      console.log(\"RouteStopsApi - undefined - got rendered\"); // initial render should be nothing.\n\n      return undefined;\n    } else console.log(\"RouteStopsApi - got rendered with the following values: \", routeSelect[0], directionSelect);\n\n    axios.get(`/api/route_stops`, {\n      params: {\n        chosenRoute: routeSelect[0],\n        chosenDirection: directionSelect\n      }\n    }).then(res => {\n      console.log(\"route select made it THIS FAR!\", routeSelect[0]);\n      const routeStopsResponse = res.data;\n      setRouteStopsResponse(routeStopsResponse);\n    });\n  }, // Listening for changes in input values in order to\n  // trigger a call to the API  to re-render the component.\n  [routeSelectMissingDependencyFix, directionSelect]);\n  return routeStopsResponse.route_stops_response;\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/RouteStopsApi.js"],"names":["React","useState","axios","require","RouteStopsApi","routeSelect","directionSelect","routeStopsResponse","setRouteStopsResponse","route_stops_response","routeSelectMissingDependencyFix","useEffect","undefined","console","log","get","params","chosenRoute","chosenDirection","then","res","data"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;AACA;;;AACA,eAAe,SAASC,aAAT,CAAuBC,WAAvB,EAAoCC,eAApC,EAAqD;AAClE;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC;AAC3DQ,IAAAA,oBAAoB,EAAE;AADqC,GAAD,CAA5D,CAFkE,CAMlE;AACA;;AACA,QAAMC,+BAA+B,GAAGL,WAAW,CAAC,CAAD,CAAnD,CARkE,CAUlE;AACA;;AACAL,EAAAA,KAAK,CAACW,SAAN,CACE,MAAM;AACJ,QAAIN,WAAW,CAAC,CAAD,CAAX,KAAmBO,SAAnB,IAAgCN,eAAe,KAAKM,SAAxD,EAAmE;AACjEC,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EADiE,CAEjE;;AACA,aAAOF,SAAP;AACD,KAJD,MAKEC,OAAO,CAACC,GAAR,CACE,0DADF,EAEET,WAAW,CAAC,CAAD,CAFb,EAGEC,eAHF;;AAKFJ,IAAAA,KAAK,CACFa,GADH,CACQ,kBADR,EAC2B;AACvBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAEZ,WAAW,CAAC,CAAD,CADlB;AAENa,QAAAA,eAAe,EAAEZ;AAFX;AADe,KAD3B,EAOGa,IAPH,CAOSC,GAAD,IAAS;AACbP,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CT,WAAW,CAAC,CAAD,CAAzD;AACA,YAAME,kBAAkB,GAAGa,GAAG,CAACC,IAA/B;AACAb,MAAAA,qBAAqB,CAACD,kBAAD,CAArB;AACD,KAXH;AAYD,GAxBH,EAyBE;AACA;AACA,GAACG,+BAAD,EAAkCJ,eAAlC,CA3BF;AA8BA,SAAOC,kBAAkB,CAACE,oBAA1B;AACD","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\n// A function to request a list of stops from a user selected route going\n// in specified direction - each of these are received as input.\nexport default function RouteStopsApi(routeSelect, directionSelect) {\n  // The response from the backend we need to track in state:\n  const [routeStopsResponse, setRouteStopsResponse] = useState({\n    route_stops_response: [],\n  });\n\n  // React Hook React.useEffect has a missing dependency: 'routeSelect'. Either include it or remove the dependency array\n  // React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checke\n  const routeSelectMissingDependencyFix = routeSelect[0];\n\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (routeSelect[0] === undefined || directionSelect === undefined) {\n        console.log(\"RouteStopsApi - undefined - got rendered\");\n        // initial render should be nothing.\n        return undefined;\n      } else\n        console.log(\n          \"RouteStopsApi - got rendered with the following values: \",\n          routeSelect[0],\n          directionSelect\n        );\n      axios\n        .get(`/api/route_stops`, {\n          params: {\n            chosenRoute: routeSelect[0],\n            chosenDirection: directionSelect,\n          },\n        })\n        .then((res) => {\n          console.log(\"route select made it THIS FAR!\", routeSelect[0]);\n          const routeStopsResponse = res.data;\n          setRouteStopsResponse(routeStopsResponse);\n        });\n    },\n    // Listening for changes in input values in order to\n    // trigger a call to the API  to re-render the component.\n    [routeSelectMissingDependencyFix, directionSelect]\n  );\n\n  return routeStopsResponse.route_stops_response;\n}\n"]},"metadata":{},"sourceType":"module"}