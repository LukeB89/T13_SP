{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/App.js\";\n// Importing outside developed components.\nimport React, { useState } from \"react\";\nimport { useLoadScript, GoogleMap, Marker, InfoWindow, MarkerClusterer, DirectionsRenderer, DirectionsService } from \"@react-google-maps/api\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport styled from \"styled-components\";\nimport useSwr from \"swr\";\nimport usePlacesAutocomplete, { getGeocode } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport axios from \"axios\"; // Importing self-developed components.\n\nimport Api from \"./components/Api\";\nimport DateTimeSelector from \"./components/DateTimeSelector\"; // Importing outside developed css.\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@reach/combobox/styles.css\"; // Importing the Dublin Bus API stops data\n\nimport * as data from \"./data/DublinBusStops.json\"; // Importing Google Maps Api Key.\n\nimport googleMapApiKey from \"./config\"; // Defining libraries for Google Places\n\nconst libraries = [\"places\"]; // Defined styling for separation of page displayed.\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`; // Importing custom styles to customize the style of Google Map.\n// Important for including and excluding certain place markers etc.\n\nconst styles = require(\"./data/GoogleMapStyles.json\"); // Defined custom styles and location for Google Map.\n\n\nconst mapOptions = {\n  styles: styles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  maxZoom: 17,\n  minZoom: 11\n};\nconst mapContainerStyle = {\n  height: \"93vh\"\n}; // consts: [53.349804, -6.260310] - Dublin\n\nconst dublinCenter = {\n  lat: 53.349804,\n  lng: -6.30131\n}; // Icon used to represent a bus stop on the map.\n\nconst icon = {\n  url: \"/bus_icon.svg\",\n  scaledSize: {\n    width: 18,\n    height: 18\n  }\n}; // Icons used when Markers are clustered.\n\nconst options = {\n  imagePath: \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\"\n}; // Parsing the Stops data into various object shapes.\n\nconst rawData = data.results;\nconst myStops = rawData.map(stop => ({\n  description: \"Stop \" + stop.stopid + \", \" + stop.fullname,\n  type: \"Feature\",\n  properties: {\n    id: stop.stopid,\n    fullname: stop.fullname,\n    routes: stop.operators[0].routes\n  },\n  geometry: {\n    type: \"Point\",\n    pos: {\n      lat: parseFloat(stop.latitude),\n      lng: parseFloat(stop.longitude)\n    }\n  }\n}));\nconst parsedStops = myStops.map(parsed => ({\n  id: parsed.properties.id,\n  description: parsed.description,\n  geometry: parsed.geometry.pos\n}));\nconst stopDescriptions = [];\n\nfor (var i = 0; i < parsedStops.length; i++) {\n  stopDescriptions.push(parsedStops[i].description);\n}\n\nconst routesArray = [];\nconst duplicateRoutes = [];\n\nfor (var i = 0; i < myStops.length; i++) {\n  routesArray.push(myStops[i].properties.routes);\n}\n\nfor (var i = 0; i < routesArray.length; i++) {\n  for (var j = 0; j < routesArray[i].length; j++) {\n    duplicateRoutes.push(routesArray[i][j]);\n  }\n}\n\nconst allRoutes = duplicateRoutes.filter((a, b) => duplicateRoutes.indexOf(a) === b); // Main function to draw the Map/Page.\n\nexport default function App() {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: googleMapApiKey,\n    libraries\n  });\n  const [center, setCenter] = useState(dublinCenter);\n  const [zoom, setZoom] = useState(11); // The things we need to track in state:\n\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [markerMap, setMarkerMap] = useState({});\n  const [infoOpen, setInfoOpen] = useState(false);\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  const [stopNumber, setStopNumber] = React.useState(0);\n  const [routeString, setRouteString] = React.useState(\"\"); // The things for Directions we need to track in state.\n\n  const [response, setResponse] = useState(null);\n  const [origin, setOrigin] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(16); // Allowing only one marker on the map at a time.\n\n    setMarkers(current => []);\n    setMarkers(current => [...current, {\n      lat: lat,\n      lng: lng\n    }]);\n  }, []); // Changing stop realtime info based on user choice.\n\n  const stopChoice = number => {\n    setStopNumber(() => parseInt(number.id));\n  }; // Changing origin info based on user choice.\n\n\n  const originChoice = address => {\n    setOrigin(() => address.results[0].formatted_address);\n  }; // Changing destination info based on user choice.\n\n\n  const destinationChoice = address => {\n    setDestination(() => address.results[0].formatted_address);\n  }; // Changing stops of route displayed on based on user choice.\n\n\n  const routeChoice = route => {\n    setRouteString(() => route.routeString);\n  };\n\n  const directionsCallback = response => {\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        setResponse(() => ({\n          response\n        }));\n      } else {}\n    }\n  }; // We have to create a mapping of our places to actual Marker objects\n\n\n  const markerLoadHandler = (marker, stop) => {\n    return setMarkerMap(prevState => {\n      return { ...prevState,\n        [stop.properties.id]: marker\n      };\n    });\n  };\n\n  const markerClickHandler = (event, place) => {\n    // Remember which stop was clicked\n    setSelectedPlace(place); // Required so clicking a 2nd marker works as expected\n\n    if (infoOpen) {\n      setInfoOpen(false);\n    }\n\n    setInfoOpen(true);\n  };\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    style: {\n      maxHeight: \"7vh\",\n      paddingBottom: \"1vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    src: \"https://media.glassdoor.com/sqll/1043913/dublin-bus-squarelogo-1440748899751.png\",\n    width: \"30\",\n    height: \"30\",\n    className: \"d-inline-block align-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }), \" \", \"Dublin Bus\"), /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    style: {\n      paddingRight: \"1vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formRealTime\",\n    style: {\n      paddingTop: \"1.6vh\",\n      width: \"15vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchStop, {\n    panTo: panTo,\n    stopChoice: stopChoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Form, {\n    style: {\n      paddingRight: \"1vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"switch\",\n    id: \"custom-switch\",\n    label: \"Tourist Mode\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    style: {\n      paddingRight: \"1vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formRealTime\",\n    style: {\n      paddingTop: \"1.6vh\",\n      width: \"6.5vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FilterRoute, {\n    routeChoice: routeChoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Wrapper, {\n    style: {\n      width: \"75%\",\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    center: center,\n    zoom: zoom,\n    options: mapOptions,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Locate, {\n    panTo: panTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RouteInfo, {\n    route: routeString,\n    markerLoadHandler: markerLoadHandler,\n    markerClickHandler: markerClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }), infoOpen && selectedPlace && /*#__PURE__*/React.createElement(InfoWindow, {\n    anchor: markerMap[selectedPlace.properties.id],\n    onCloseClick: () => setInfoOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, \"Stop Number: \", selectedPlace.properties.id), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, \"Routes: \", selectedPlace.properties.routes.join(\", \")), /*#__PURE__*/React.createElement(StopInfo, {\n    number: selectedPlace.properties.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }))), markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: `${marker.lat}-${marker.lng}`,\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    onClick: () => {\n      setSelected(marker);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  })), destination !== \"\" && origin !== \"\" && /*#__PURE__*/React.createElement(DirectionsService // required\n  , {\n    options: {\n      destination: destination,\n      origin: origin,\n      travelMode: \"TRANSIT\"\n    } // required\n    ,\n    callback: directionsCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }), response !== null && /*#__PURE__*/React.createElement(DirectionsRenderer // required\n  , {\n    options: {\n      directions: response.response\n    },\n    panel: document.getElementById(\"panel\") // removing all displayed stops upon loading\n    ,\n    onLoad: () => {\n      setRouteString(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Wrapper, {\n    style: {\n      width: \"25%\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    style: {\n      paddingTop: \"2vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DateTimeSelector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formDeparture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchOrigin, {\n    panTo: panTo,\n    originChoice: originChoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formArrival\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchDestination, {\n    panTo: panTo,\n    destinationChoice: destinationChoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"panel\",\n    style: {\n      maxHeight: \"67vh\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StopInfoAxi, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Axios, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  })))));\n} // Generate an icon when clicked and\n// adjust the map to the users location.\n\nfunction Locate({\n  panTo\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition( // Hard coding Dublin for the time being.\n      position => {\n        panTo({\n          // lat: position.coords.latitude,\n          // lng: position.coords.longitude,\n          lat: dublinCenter.lat,\n          lng: dublinCenter.lng\n        });\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"compass\",\n    src: \"/compass.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }\n  }));\n} // Generating the Origin search box with Google\n// Places and Autocomplete.\n\n\nfunction SearchOrigin({\n  originChoice\n}) {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 53,\n        lng: () => -6\n      },\n      radius: 100 * 1000\n    }\n  }); // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async address => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        address\n      });\n      originChoice({\n        results\n      });\n    } catch (error) {\n      console.log(\"😱 Error: \", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchLocations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: handleInput,\n    disabled: !ready,\n    placeholder: \"Departure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  }, status === \"OK\" && data.map(({\n    id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }))))));\n} // Generating the Destination search box with Google\n// Places and Autocomplete.\n\n\nfunction SearchDestination({\n  destinationChoice\n}) {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 53,\n        lng: () => -6\n      },\n      radius: 100 * 1000\n    }\n  });\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async address => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        address\n      });\n      destinationChoice({\n        results\n      });\n    } catch (error) {\n      console.log(\"😱 Error: \", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchLocations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: handleInput,\n    disabled: !ready,\n    placeholder: \"Arrival\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 11\n    }\n  }, status === \"OK\" && data.map(({\n    id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    as: \"input\",\n    type: \"submit\",\n    value: \"Reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }\n  }), \" \");\n} // Generate a searchbox that includes all of the\n// stops. Chosen stop will adjust the map to that\n// stops location and display its realtime info.\n\n\nfunction SearchStop({\n  panTo,\n  stopChoice,\n  setMarkerMap\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead, {\n    id: \"basic-example\",\n    options: stopDescriptions,\n    maxVisible: 2,\n    placeholder: \"Choose a stop to locate on map...\",\n    onChange: address => {\n      try {\n        for (var i = 0; i < parsedStops.length; i++) {\n          if (address == parsedStops[i].description) {\n            const lat = parsedStops[i].geometry.lat;\n            const lng = parsedStops[i].geometry.lng;\n            const id = parsedStops[i].id;\n            panTo({\n              lat,\n              lng\n            });\n            stopChoice({\n              id\n            });\n            setMarkerMap({});\n          }\n        }\n      } catch (error) {\n        console.log(\"error\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }\n  }));\n} // Calls the realtime api and returns a table.\n\n\nfunction StopInfo(props) {\n  const fetcher = (...args) => fetch(...args).then(response => response.json());\n\n  const url = \"/cgi-bin/rtpi/realtimebusinformation?stopid=\" + props.number + \"&operator=bac\";\n  const {\n    data,\n    error\n  } = useSwr(url, fetch);\n  const rawStopData = data && !error ? data : // creating a placeholder object while awaiting api response\n  {\n    results: [{\n      arrivaldatetime: \"08/07/2020 00:00:00\",\n      route: \"\",\n      destination: \"\",\n      duetime: \"\"\n    }]\n  };\n  const stopData = rawStopData.results;\n  const realInfo = stopData.map(info => ({\n    id: info.arrivaldatetime,\n    route: info.route,\n    destination: info.destination,\n    arrivaltime: info.duetime\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxHeight: \"15vh\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }\n  }, \"Route\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 13\n    }\n  }, \"Destination\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 13\n    }\n  }, \"Arrival (mins)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 9\n    }\n  }, realInfo.map(info => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: info.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 17\n      }\n    }, info.route), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 17\n      }\n    }, info.destination), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 17\n      }\n    }, info.arrivaltime));\n  }))));\n} // Return an autocomplete box containing each of the routes.\n\n\nfunction FilterRoute({\n  routeChoice\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typeahead, {\n    id: \"basic-example\",\n    options: allRoutes,\n    placeholder: \"Route filter...\",\n    onChange: route => {\n      try {\n        for (var i = 0; i < allRoutes.length; i++) {\n          if (route == allRoutes[i]) {\n            const routeString = allRoutes[i];\n            routeChoice({\n              routeString\n            });\n          }\n        }\n      } catch (error) {\n        console.log(\"error\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }\n  }));\n} // Function that filters the markers on the map\n// according to a user selected route.\n\n\nfunction RouteInfo(props, {\n  markerLoadHandler,\n  markerClickHandler\n}) {\n  const filteredMarkers = [];\n\n  for (var i = 0; i < myStops.length; i++) {\n    for (var j = 0; j < myStops[i].properties.routes.length; j++) {\n      if (myStops[i].properties.routes[j] == props.route) {\n        filteredMarkers.push(myStops[i]); // } else if (props.route == \"\") {\n        //   filteredMarkers.push(myStops[i]);\n      }\n    }\n  }\n\n  const uniqueMarkers = filteredMarkers.filter((a, b) => filteredMarkers.indexOf(a) === b);\n  return uniqueMarkers.map(stop => /*#__PURE__*/React.createElement(Marker, {\n    icon: icon,\n    key: stop.properties.id,\n    position: stop.geometry.pos,\n    onLoad: marker => props.markerLoadHandler(marker, stop),\n    onClick: event => props.markerClickHandler(event, stop),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 5\n    }\n  }));\n}\n\nconst Axios = () => {\n  const [users, setUsers] = useState([]);\n  const [dogs, setDogs] = useState([]);\n  React.useEffect(() => {\n    // axios.get(`/users`).then((res) => {\n    //   const users = res.data;\n    //   setUsers(users);\n    // });\n    axios.all([axios.get(`/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10`), axios.get(`/api/breeds/image/random`)]).then(axios.spread((user, dog) => {\n      const users = user.data;\n      setUsers(users);\n      const dogs = dog.data;\n      setDogs(dogs);\n    }));\n  }, []);\n  console.log(users);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(\"li\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 11\n    }\n  }, user.username, \", \", user.name, \",\", \" \")), dogs.message, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: dogs.message,\n    alt: dogs.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 10\n    }\n  })));\n}; // Calls the realtime api and returns a table.\n\n\nconst StopInfoAxi = () => {\n  const [rtpiStop, setRtpiStop] = useState([]);\n  React.useEffect(() => {\n    axios.get(`/cgi-bin/rtpi/realtimebusinformation?stopid=7&operator=bac`, {\n      headers: {\n        crossorigin: true\n      }\n    }).then(res => {\n      const rtpiStop = res.data;\n      setRtpiStop(rtpiStop);\n    });\n  }, []);\n  console.log(rtpiStop); // const stopData = rtpiStop.results;\n  // const realInfo = stopData.map((info) => ({\n  //   id: info.arrivaldatetime,\n  //   route: info.route,\n  //   destination: info.destination,\n  //   arrivaltime: info.duetime,\n  // }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxHeight: \"15vh\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 13\n    }\n  }, \"Route\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 13\n    }\n  }, \"Destination\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 13\n    }\n  }, \"Arrival (mins)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 9\n    }\n  }, rtpiStop.map(info => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: info.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 17\n      }\n    }, info.route), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 17\n      }\n    }, info.destination), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 17\n      }\n    }, info.arrivaltime));\n  }))));\n};","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/App.js"],"names":["React","useState","useLoadScript","GoogleMap","Marker","InfoWindow","MarkerClusterer","DirectionsRenderer","DirectionsService","Container","Form","Table","Button","Nav","Navbar","Typeahead","styled","useSwr","usePlacesAutocomplete","getGeocode","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","axios","Api","DateTimeSelector","data","googleMapApiKey","libraries","Wrapper","main","styles","require","mapOptions","disableDefaultUI","zoomControl","maxZoom","minZoom","mapContainerStyle","height","dublinCenter","lat","lng","icon","url","scaledSize","width","options","imagePath","rawData","results","myStops","map","stop","description","stopid","fullname","type","properties","id","routes","operators","geometry","pos","parseFloat","latitude","longitude","parsedStops","parsed","stopDescriptions","i","length","push","routesArray","duplicateRoutes","j","allRoutes","filter","a","b","indexOf","App","isLoaded","loadError","googleMapsApiKey","center","setCenter","zoom","setZoom","selectedPlace","setSelectedPlace","markerMap","setMarkerMap","infoOpen","setInfoOpen","markers","setMarkers","selected","setSelected","stopNumber","setStopNumber","routeString","setRouteString","response","setResponse","origin","setOrigin","destination","setDestination","mapRef","useRef","onMapLoad","useCallback","current","panTo","stopChoice","number","parseInt","originChoice","address","formatted_address","destinationChoice","routeChoice","route","directionsCallback","status","markerLoadHandler","marker","prevState","markerClickHandler","event","place","maxHeight","paddingBottom","paddingRight","paddingTop","color","float","join","travelMode","directions","document","getElementById","overflowY","Locate","navigator","geolocation","getCurrentPosition","position","SearchOrigin","ready","value","suggestions","setValue","clearSuggestions","requestOptions","location","radius","handleInput","e","target","handleSelect","error","console","log","SearchDestination","SearchStop","StopInfo","props","fetcher","args","fetch","then","json","rawStopData","arrivaldatetime","duetime","stopData","realInfo","info","arrivaltime","FilterRoute","RouteInfo","filteredMarkers","uniqueMarkers","Axios","users","setUsers","dogs","setDogs","useEffect","all","get","spread","user","dog","username","name","message","StopInfoAxi","rtpiStop","setRtpiStop","headers","crossorigin","res"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\nimport {\n  useLoadScript,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n  MarkerClusterer,\n  DirectionsRenderer,\n  DirectionsService,\n} from \"@react-google-maps/api\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport styled from \"styled-components\";\nimport useSwr from \"swr\";\nimport usePlacesAutocomplete, { getGeocode } from \"use-places-autocomplete\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\nimport axios from \"axios\";\n// Importing self-developed components.\nimport Api from \"./components/Api\";\nimport DateTimeSelector from \"./components/DateTimeSelector\";\n// Importing outside developed css.\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@reach/combobox/styles.css\";\n// Importing the Dublin Bus API stops data\nimport * as data from \"./data/DublinBusStops.json\";\n// Importing Google Maps Api Key.\nimport googleMapApiKey from \"./config\";\n\n// Defining libraries for Google Places\nconst libraries = [\"places\"];\n// Defined styling for separation of page displayed.\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n// Importing custom styles to customize the style of Google Map.\n// Important for including and excluding certain place markers etc.\nconst styles = require(\"./data/GoogleMapStyles.json\");\n// Defined custom styles and location for Google Map.\nconst mapOptions = {\n  styles: styles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  maxZoom: 17,\n  minZoom: 11,\n};\nconst mapContainerStyle = {\n  height: \"93vh\",\n};\n// consts: [53.349804, -6.260310] - Dublin\nconst dublinCenter = {\n  lat: 53.349804,\n  lng: -6.30131,\n};\n// Icon used to represent a bus stop on the map.\nconst icon = {\n  url: \"/bus_icon.svg\",\n  scaledSize: { width: 18, height: 18 },\n};\n// Icons used when Markers are clustered.\nconst options = {\n  imagePath:\n    \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\",\n};\n// Parsing the Stops data into various object shapes.\nconst rawData = data.results;\n\nconst myStops = rawData.map((stop) => ({\n  description: \"Stop \" + stop.stopid + \", \" + stop.fullname,\n  type: \"Feature\",\n  properties: {\n    id: stop.stopid,\n    fullname: stop.fullname,\n    routes: stop.operators[0].routes,\n  },\n  geometry: {\n    type: \"Point\",\n    pos: {\n      lat: parseFloat(stop.latitude),\n      lng: parseFloat(stop.longitude),\n    },\n  },\n}));\n\nconst parsedStops = myStops.map((parsed) => ({\n  id: parsed.properties.id,\n  description: parsed.description,\n  geometry: parsed.geometry.pos,\n}));\n\nconst stopDescriptions = [];\nfor (var i = 0; i < parsedStops.length; i++) {\n  stopDescriptions.push(parsedStops[i].description);\n}\n\nconst routesArray = [];\nconst duplicateRoutes = [];\nfor (var i = 0; i < myStops.length; i++) {\n  routesArray.push(myStops[i].properties.routes);\n}\nfor (var i = 0; i < routesArray.length; i++) {\n  for (var j = 0; j < routesArray[i].length; j++) {\n    duplicateRoutes.push(routesArray[i][j]);\n  }\n}\nconst allRoutes = duplicateRoutes.filter(\n  (a, b) => duplicateRoutes.indexOf(a) === b\n);\n\n// Main function to draw the Map/Page.\nexport default function App() {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: googleMapApiKey,\n    libraries,\n  });\n  const [center, setCenter] = useState(dublinCenter);\n  const [zoom, setZoom] = useState(11);\n  // The things we need to track in state:\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [markerMap, setMarkerMap] = useState({});\n  const [infoOpen, setInfoOpen] = useState(false);\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  const [stopNumber, setStopNumber] = React.useState(0);\n  const [routeString, setRouteString] = React.useState(\"\");\n  // The things for Directions we need to track in state.\n  const [response, setResponse] = useState(null);\n  const [origin, setOrigin] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = React.useCallback(({ lat, lng }) => {\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(16);\n    // Allowing only one marker on the map at a time.\n    setMarkers((current) => []);\n    setMarkers((current) => [...current, { lat: lat, lng: lng }]);\n  }, []);\n  // Changing stop realtime info based on user choice.\n  const stopChoice = (number) => {\n    setStopNumber(() => parseInt(number.id));\n  };\n  // Changing origin info based on user choice.\n  const originChoice = (address) => {\n    setOrigin(() => address.results[0].formatted_address);\n  };\n  // Changing destination info based on user choice.\n  const destinationChoice = (address) => {\n    setDestination(() => address.results[0].formatted_address);\n  };\n  // Changing stops of route displayed on based on user choice.\n  const routeChoice = (route) => {\n    setRouteString(() => route.routeString);\n  };\n\n  const directionsCallback = (response) => {\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        setResponse(() => ({\n          response,\n        }));\n      } else {\n      }\n    }\n  };\n\n  // We have to create a mapping of our places to actual Marker objects\n  const markerLoadHandler = (marker, stop) => {\n    return setMarkerMap((prevState) => {\n      return { ...prevState, [stop.properties.id]: marker };\n    });\n  };\n\n  const markerClickHandler = (event, place) => {\n    // Remember which stop was clicked\n    setSelectedPlace(place);\n    // Required so clicking a 2nd marker works as expected\n    if (infoOpen) {\n      setInfoOpen(false);\n    }\n    setInfoOpen(true);\n  };\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (\n    <div>\n      <Container fluid>\n        <Navbar\n          bg=\"dark\"\n          variant=\"dark\"\n          style={{ maxHeight: \"7vh\", paddingBottom: \"1vh\" }}\n        >\n          <Navbar.Brand href=\"#home\">\n            <img\n              alt=\"\"\n              src=\"https://media.glassdoor.com/sqll/1043913/dublin-bus-squarelogo-1440748899751.png\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />{\" \"}\n            Dublin Bus\n          </Navbar.Brand>\n          <Nav className=\"mr-auto\"></Nav>\n          <Form style={{ paddingRight: \"1vw\" }}>\n            <Form.Group\n              controlId=\"formRealTime\"\n              style={{ paddingTop: \"1.6vh\", width: \"15vw\" }}\n            >\n              <SearchStop panTo={panTo} stopChoice={stopChoice} />\n            </Form.Group>\n          </Form>\n          <Form style={{ paddingRight: \"1vw\" }}>\n            <Form.Check\n              type=\"switch\"\n              id=\"custom-switch\"\n              label=\"Tourist Mode\"\n              style={{ color: \"white\" }}\n            />\n          </Form>\n          <Form style={{ paddingRight: \"1vw\" }}>\n            <Form.Group\n              controlId=\"formRealTime\"\n              style={{ paddingTop: \"1.6vh\", width: \"6.5vw\" }}\n            >\n              <FilterRoute routeChoice={routeChoice} />\n            </Form.Group>\n          </Form>\n        </Navbar>\n\n        <Wrapper style={{ width: \"75%\", float: \"left\" }}>\n          {/* Render the Google Map */}\n          <GoogleMap\n            mapContainerStyle={mapContainerStyle}\n            center={center}\n            zoom={zoom}\n            options={mapOptions}\n            onLoad={onMapLoad}\n          >\n            <Locate panTo={panTo} />\n\n            {/* Uncomment this section for route selection */}\n            <RouteInfo\n              route={routeString}\n              markerLoadHandler={markerLoadHandler}\n              markerClickHandler={markerClickHandler}\n            ></RouteInfo>\n\n            {/* Uncomment this section for all markers at once */}\n            {/* <MarkerClusterer\n              options={options}\n              maxZoom={15}\n              minimumClusterSize={4}\n            >\n              {(clusterer) =>\n                myStops.map((stop) => (\n                  <Marker\n                    icon={icon}\n                    key={stop.properties.id}\n                    position={stop.geometry.pos}\n                    clusterer={clusterer}\n                    onLoad={(marker) => markerLoadHandler(marker, stop)}\n                    onClick={(event) => markerClickHandler(event, stop)}\n                  />\n                ))\n              }\n            </MarkerClusterer> */}\n\n            {infoOpen && selectedPlace && (\n              <InfoWindow\n                anchor={markerMap[selectedPlace.properties.id]}\n                onCloseClick={() => setInfoOpen(false)}\n              >\n                <div>\n                  <h3>Stop Number: {selectedPlace.properties.id}</h3>\n                  <h5>Routes: {selectedPlace.properties.routes.join(\", \")}</h5>\n                  <StopInfo number={selectedPlace.properties.id} />\n                </div>\n              </InfoWindow>\n            )}\n            {/* Markers dropped when stop has been chosen or geolocation activated. */}\n            {markers.map((marker) => (\n              <Marker\n                key={`${marker.lat}-${marker.lng}`}\n                position={{ lat: marker.lat, lng: marker.lng }}\n                onClick={() => {\n                  setSelected(marker);\n                }}\n              />\n            ))}\n            {destination !== \"\" && origin !== \"\" && (\n              <DirectionsService\n                // required\n                options={{\n                  destination: destination,\n                  origin: origin,\n                  travelMode: \"TRANSIT\",\n                }}\n                // required\n                callback={directionsCallback}\n              />\n            )}\n            {response !== null && (\n              <DirectionsRenderer\n                // required\n                options={{\n                  directions: response.response,\n                }}\n                panel={document.getElementById(\"panel\")}\n                // removing all displayed stops upon loading\n                onLoad={() => {\n                  setRouteString(\"\");\n                }}\n              />\n            )}\n          </GoogleMap>\n        </Wrapper>\n\n        <Wrapper style={{ width: \"25%\", float: \"right\" }}>\n          <Container style={{ paddingTop: \"2vh\" }}>\n            <DateTimeSelector></DateTimeSelector>\n            <Form>\n              <Form.Group controlId=\"formDeparture\">\n                <SearchOrigin panTo={panTo} originChoice={originChoice} />\n              </Form.Group>\n            </Form>\n            <Form>\n              <Form.Group controlId=\"formArrival\">\n                <SearchDestination\n                  panTo={panTo}\n                  destinationChoice={destinationChoice}\n                />\n              </Form.Group>\n            </Form>\n\n            <div\n              id=\"panel\"\n              style={{ maxHeight: \"67vh\", overflowY: \"scroll\" }}\n            ></div>\n            <StopInfoAxi />\n            <Axios></Axios>\n          </Container>\n        </Wrapper>\n      </Container>\n    </div>\n  );\n}\n\n// Generate an icon when clicked and\n// adjust the map to the users location.\nfunction Locate({ panTo }) {\n  return (\n    <button\n      className=\"locate\"\n      onClick={() => {\n        navigator.geolocation.getCurrentPosition(\n          // Hard coding Dublin for the time being.\n          (position) => {\n            panTo({\n              // lat: position.coords.latitude,\n              // lng: position.coords.longitude,\n              lat: dublinCenter.lat,\n              lng: dublinCenter.lng,\n            });\n          },\n          () => null\n        );\n      }}\n    >\n      <img alt=\"compass\" src=\"/compass.svg\" />\n    </button>\n  );\n}\n\n// Generating the Origin search box with Google\n// Places and Autocomplete.\nfunction SearchOrigin({ originChoice }) {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 53, lng: () => -6 },\n      radius: 100 * 1000,\n    },\n  });\n\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address });\n      originChoice({ results });\n    } catch (error) {\n      console.log(\"😱 Error: \", error);\n    }\n  };\n\n  return (\n    <div className=\"searchLocations\">\n      <Combobox onSelect={handleSelect}>\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          placeholder=\"Departure\"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n}\n\n// Generating the Destination search box with Google\n// Places and Autocomplete.\nfunction SearchDestination({ destinationChoice }) {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 53, lng: () => -6 },\n      radius: 100 * 1000,\n    },\n  });\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address });\n      destinationChoice({ results });\n    } catch (error) {\n      console.log(\"😱 Error: \", error);\n    }\n  };\n\n  return (\n    <div className=\"searchLocations\">\n      <Combobox onSelect={handleSelect}>\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          placeholder=\"Arrival\"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n      <br></br>\n      <Button as=\"input\" type=\"submit\" value=\"Reset\" />{\" \"}\n    </div>\n  );\n}\n\n// Generate a searchbox that includes all of the\n// stops. Chosen stop will adjust the map to that\n// stops location and display its realtime info.\nfunction SearchStop({ panTo, stopChoice, setMarkerMap }) {\n  return (\n    <div>\n      <Typeahead\n        id=\"basic-example\"\n        options={stopDescriptions}\n        maxVisible={2}\n        placeholder=\"Choose a stop to locate on map...\"\n        onChange={(address) => {\n          try {\n            for (var i = 0; i < parsedStops.length; i++) {\n              if (address == parsedStops[i].description) {\n                const lat = parsedStops[i].geometry.lat;\n                const lng = parsedStops[i].geometry.lng;\n                const id = parsedStops[i].id;\n                panTo({ lat, lng });\n                stopChoice({ id });\n                setMarkerMap({});\n              }\n            }\n          } catch (error) {\n            console.log(\"error\");\n          }\n        }}\n      />\n    </div>\n  );\n}\n\n// Calls the realtime api and returns a table.\nfunction StopInfo(props) {\n  const fetcher = (...args) =>\n    fetch(...args).then((response) => response.json());\n  const url =\n    \"/cgi-bin/rtpi/realtimebusinformation?stopid=\" +\n    props.number +\n    \"&operator=bac\";\n  const { data, error } = useSwr(url, fetch);\n  const rawStopData =\n    data && !error\n      ? data\n      : // creating a placeholder object while awaiting api response\n        {\n          results: [\n            {\n              arrivaldatetime: \"08/07/2020 00:00:00\",\n              route: \"\",\n              destination: \"\",\n              duetime: \"\",\n            },\n          ],\n        };\n  const stopData = rawStopData.results;\n  const realInfo = stopData.map((info) => ({\n    id: info.arrivaldatetime,\n    route: info.route,\n    destination: info.destination,\n    arrivaltime: info.duetime,\n  }));\n\n  return (\n    <div style={{ maxHeight: \"15vh\", overflowY: \"scroll\" }}>\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Route</th>\n            <th>Destination</th>\n            <th>Arrival (mins)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {realInfo.map((info) => {\n            return (\n              <tr key={info.id}>\n                <td>{info.route}</td>\n                <td>{info.destination}</td>\n                <td>{info.arrivaltime}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\n// Return an autocomplete box containing each of the routes.\nfunction FilterRoute({ routeChoice }) {\n  return (\n    <div>\n      <Typeahead\n        id=\"basic-example\"\n        options={allRoutes}\n        placeholder=\"Route filter...\"\n        onChange={(route) => {\n          try {\n            for (var i = 0; i < allRoutes.length; i++) {\n              if (route == allRoutes[i]) {\n                const routeString = allRoutes[i];\n                routeChoice({ routeString });\n              }\n            }\n          } catch (error) {\n            console.log(\"error\");\n          }\n        }}\n      />\n    </div>\n  );\n}\n\n// Function that filters the markers on the map\n// according to a user selected route.\nfunction RouteInfo(props, { markerLoadHandler, markerClickHandler }) {\n  const filteredMarkers = [];\n\n  for (var i = 0; i < myStops.length; i++) {\n    for (var j = 0; j < myStops[i].properties.routes.length; j++) {\n      if (myStops[i].properties.routes[j] == props.route) {\n        filteredMarkers.push(myStops[i]);\n        // } else if (props.route == \"\") {\n        //   filteredMarkers.push(myStops[i]);\n      }\n    }\n  }\n\n  const uniqueMarkers = filteredMarkers.filter(\n    (a, b) => filteredMarkers.indexOf(a) === b\n  );\n\n  return uniqueMarkers.map((stop) => (\n    <Marker\n      icon={icon}\n      key={stop.properties.id}\n      position={stop.geometry.pos}\n      onLoad={(marker) => props.markerLoadHandler(marker, stop)}\n      onClick={(event) => props.markerClickHandler(event, stop)}\n    />\n  ));\n}\n\nconst Axios = () => {\n  const [users, setUsers] = useState([]);\n  const [dogs, setDogs] = useState([]);\n\n  React.useEffect(() => {\n    // axios.get(`/users`).then((res) => {\n    //   const users = res.data;\n    //   setUsers(users);\n    // });\n\n    axios\n      .all([\n        axios.get(\n          `/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10`\n        ),\n        axios.get(`/api/breeds/image/random`),\n      ])\n      .then(\n        axios.spread((user, dog) => {\n          const users = user.data;\n          setUsers(users);\n\n          const dogs = dog.data;\n          setDogs(dogs);\n        })\n      );\n  }, []);\n\n  console.log(users);\n  return (\n    <div>\n      <ul>\n        {users.map((user) => (\n          <li key={user.id}>\n            {user.username}, {user.name},{\" \"}\n          </li>\n        ))}\n        {dogs.message} <br />\n        {<img src={dogs.message} alt={dogs.message} />}\n      </ul>\n    </div>\n  );\n};\n\n// Calls the realtime api and returns a table.\nconst StopInfoAxi = () => {\n  const [rtpiStop, setRtpiStop] = useState([]);\n\n  React.useEffect(() => {\n    axios\n      .get(`/cgi-bin/rtpi/realtimebusinformation?stopid=7&operator=bac`, {\n        headers: {\n          crossorigin: true,\n        },\n      })\n      .then((res) => {\n        const rtpiStop = res.data;\n        setRtpiStop(rtpiStop);\n      });\n  }, []);\n\n  console.log(rtpiStop);\n  // const stopData = rtpiStop.results;\n  // const realInfo = stopData.map((info) => ({\n  //   id: info.arrivaldatetime,\n  //   route: info.route,\n  //   destination: info.destination,\n  //   arrivaltime: info.duetime,\n  // }));\n\n  return (\n    <div style={{ maxHeight: \"15vh\", overflowY: \"scroll\" }}>\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Route</th>\n            <th>Destination</th>\n            <th>Arrival (mins)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rtpiStop.map((info) => {\n            return (\n              <tr key={info.id}>\n                <td>{info.route}</td>\n                <td>{info.destination}</td>\n                <td>{info.arrivaltime}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}