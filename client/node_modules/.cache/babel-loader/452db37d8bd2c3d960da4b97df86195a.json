{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Directions.js\";\nimport React from \"react\";\n\nconst {\n  Component\n} = require(\"react\");\n\nconst {\n  DirectionsRenderer,\n  DirectionsService,\n  Autocomplete\n} = require(\"@react-google-maps/api\"); // // consts: [53.349804, -6.260310] - Dublin\n\n\nconst bounds = {\n  lat: 53.349804,\n  lng: -6.26031\n}; // const shit = new window.google.map.LatLng(53.349804, -6.26031);\n\nclass Directions extends Component {\n  constructor(props) {\n    super(props);\n    this.myLatLng = new window.google.maps.LatLng({\n      lat: 53.349804,\n      lng: -6.26031\n    });\n    this.state = {\n      response: null,\n      travelMode: \"TRANSIT\",\n      origin: \"\",\n      destination: \"\"\n    };\n    this.directionsCallback = this.directionsCallback.bind(this);\n    this.getOrigin = this.getOrigin.bind(this);\n    this.getDestination = this.getDestination.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onMapClick = this.onMapClick.bind(this);\n    this.autocomplete = null;\n    this.onLoad = this.onLoad.bind(this);\n    this.onPlaceChanged = this.onPlaceChanged.bind(this);\n  }\n\n  directionsCallback(response) {\n    console.log(\"hi, \", response);\n\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        this.setState(() => ({\n          response\n        }));\n      } else {\n        console.log(\"response: \", response);\n      }\n    }\n  }\n\n  getOrigin(ref) {\n    this.origin = ref;\n  }\n\n  getDestination(ref) {\n    this.destination = ref;\n  }\n\n  onClick() {\n    if (this.origin.value !== \"\" && this.destination.value !== \"\") {\n      this.setState(() => ({\n        origin: this.origin.value,\n        destination: this.destination.value\n      }));\n    }\n  }\n\n  onMapClick(...args) {\n    console.log(\"onClick args: \", args);\n  }\n\n  onLoad(autocomplete) {\n    console.log(\"autocomplete: \", autocomplete);\n    this.autocomplete = autocomplete;\n  }\n\n  onPlaceChanged() {\n    if (this.autocomplete !== null) {\n      console.log(this.autocomplete.getPlace());\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"ORIGIN\",\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Origin\",\n      ref: this.getOrigin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      onLoad: this.onLoad,\n      onPlaceChanged: this.onPlaceChanged,\n      bounds: {\n        north: 51.09,\n        south: 54.29,\n        west: -7.02,\n        east: -5.26\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Customized your placeholder\",\n      style: {\n        boxSizing: `border-box`,\n        border: `1px solid transparent`,\n        width: `240px`,\n        height: `32px`,\n        padding: `0 12px`,\n        borderRadius: `3px`,\n        boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n        fontSize: `14px`,\n        outline: `none`,\n        textOverflow: `ellipses`,\n        position: \"absolute\",\n        left: \"50%\",\n        marginLeft: \"-120px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"DESTINATION\",\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"Destination\",\n      ref: this.getDestination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"button\",\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"Build Route\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, this.state.destination !== \"\" && this.state.origin !== \"\" && /*#__PURE__*/React.createElement(DirectionsService // required\n    , {\n      options: {\n        destination: this.state.destination,\n        origin: this.state.origin,\n        travelMode: this.state.travelMode\n      } // required\n      ,\n      callback: this.directionsCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }), this.state.response !== null && /*#__PURE__*/React.createElement(DirectionsRenderer // required\n    , {\n      options: {\n        directions: this.state.response\n      },\n      panel: document.getElementById(\"panel\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Directions;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/Directions.js"],"names":["React","Component","require","DirectionsRenderer","DirectionsService","Autocomplete","bounds","lat","lng","Directions","constructor","props","myLatLng","window","google","maps","LatLng","state","response","travelMode","origin","destination","directionsCallback","bind","getOrigin","getDestination","onClick","onMapClick","autocomplete","onLoad","onPlaceChanged","console","log","status","setState","ref","value","args","getPlace","render","north","south","west","east","boxSizing","border","width","height","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","position","left","marginLeft","directions","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nconst { Component } = require(\"react\");\nconst {\n  DirectionsRenderer,\n  DirectionsService,\n  Autocomplete,\n} = require(\"@react-google-maps/api\");\n// // consts: [53.349804, -6.260310] - Dublin\nconst bounds = {\n  lat: 53.349804,\n  lng: -6.26031,\n};\n\n// const shit = new window.google.map.LatLng(53.349804, -6.26031);\n\nclass Directions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      response: null,\n      travelMode: \"TRANSIT\",\n      origin: \"\",\n      destination: \"\",\n    };\n\n    this.directionsCallback = this.directionsCallback.bind(this);\n    this.getOrigin = this.getOrigin.bind(this);\n    this.getDestination = this.getDestination.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onMapClick = this.onMapClick.bind(this);\n\n    this.autocomplete = null;\n\n    this.onLoad = this.onLoad.bind(this);\n    this.onPlaceChanged = this.onPlaceChanged.bind(this);\n  }\n\n  directionsCallback(response) {\n    console.log(\"hi, \", response);\n\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        this.setState(() => ({\n          response,\n        }));\n      } else {\n        console.log(\"response: \", response);\n      }\n    }\n  }\n\n  getOrigin(ref) {\n    this.origin = ref;\n  }\n\n  getDestination(ref) {\n    this.destination = ref;\n  }\n\n  onClick() {\n    if (this.origin.value !== \"\" && this.destination.value !== \"\") {\n      this.setState(() => ({\n        origin: this.origin.value,\n        destination: this.destination.value,\n      }));\n    }\n  }\n\n  onMapClick(...args) {\n    console.log(\"onClick args: \", args);\n  }\n\n  onLoad(autocomplete) {\n    console.log(\"autocomplete: \", autocomplete);\n\n    this.autocomplete = autocomplete;\n  }\n\n  onPlaceChanged() {\n    if (this.autocomplete !== null) {\n      console.log(this.autocomplete.getPlace());\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  }\n\n  myLatLng = new window.google.maps.LatLng({ lat: 53.349804, lng: -6.26031 });\n\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"boxes\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-lg-4\">\n              <div className=\"\">\n                <input\n                  id=\"ORIGIN\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Origin\"\n                  ref={this.getOrigin}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-4\">\n              <div className=\"\">\n                <Autocomplete\n                  onLoad={this.onLoad}\n                  onPlaceChanged={this.onPlaceChanged}\n                  bounds={{\n                    north: 51.09,\n                    south: 54.29,\n                    west: -7.02,\n                    east: -5.26,\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    placeholder=\"Customized your placeholder\"\n                    style={{\n                      boxSizing: `border-box`,\n                      border: `1px solid transparent`,\n                      width: `240px`,\n                      height: `32px`,\n                      padding: `0 12px`,\n                      borderRadius: `3px`,\n                      boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                      fontSize: `14px`,\n                      outline: `none`,\n                      textOverflow: `ellipses`,\n                      position: \"absolute\",\n                      left: \"50%\",\n                      marginLeft: \"-120px\",\n                    }}\n                  />\n                </Autocomplete>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-lg-4\">\n              <div className=\"\">\n                <input\n                  id=\"DESTINATION\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Destination\"\n                  ref={this.getDestination}\n                />\n              </div>\n            </div>\n            <div className=\"col-md-6 col-lg-4\">\n              <div className=\"\">\n                <button\n                  className=\"btn btn-primary\"\n                  type=\"button\"\n                  onClick={this.onClick}\n                >\n                  Build Route\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"map-container\">\n          {this.state.destination !== \"\" && this.state.origin !== \"\" && (\n            <DirectionsService\n              // required\n              options={{\n                destination: this.state.destination,\n                origin: this.state.origin,\n                travelMode: this.state.travelMode,\n              }}\n              // required\n              callback={this.directionsCallback}\n            />\n          )}\n\n          {this.state.response !== null && (\n            <DirectionsRenderer\n              // required\n              options={{\n                directions: this.state.response,\n              }}\n              panel={document.getElementById(\"panel\")}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Directions;\n"]},"metadata":{},"sourceType":"module"}