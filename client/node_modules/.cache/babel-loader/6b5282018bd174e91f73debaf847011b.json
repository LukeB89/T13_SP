{"ast":null,"code":"// Importing outside developed components.\nimport React, { useState } from \"react\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\"); // A function to request a list of stops from a user selected route going\n// in specified direction - each of these are received as input.\n\n\nexport default function RouteStopsApi(routeSelect, originNumber) {\n  // The response from the backend we need to track in state:\n  const [routeStopsResponse, setRouteStopsResponse] = useState({\n    route_stops_response: []\n  });\n  console.log(originNumber); // // React Hook React.useEffect has a missing dependency: 'routeSelect'. Either include it or remove the dependency array\n  // // React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked\n  // The variable below has been created to avoid the two errors above.\n  // console.log(\n  //   \"RouteStopsApi - routeSelectMissingDependencyFix triggered\",\n  //   routeSelectMissingDependencyFix,\n  //   directionSelect\n  // );\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n  React.useEffect(() => {\n    if (String(routeSelect) === \"\" && originNumber === 0) {\n      // console.log(\"RouteStopsApi - undefined - got rendered\");\n      // initial render should be nothing.\n      return undefined;\n    } else if (originNumber === NaN) {\n      return undefined;\n    } else {\n      console.log(\"RouteStopsApi - got rendered with the following values: \", routeSelect, originNumber);\n\n      if (originNumber === 0) {\n        setRouteStopsResponse({\n          route_stops_response: []\n        });\n      } else if (originNumber === NaN) {\n        setRouteStopsResponse({\n          route_stops_response: []\n        });\n      } else if (originNumber === \"\") {\n        setRouteStopsResponse({\n          route_stops_response: []\n        });\n      } else {\n        axios.get(`/api/route_stops`, {\n          params: {\n            chosenRoute: routeSelect,\n            chosenStop: originNumber\n          }\n        }).then(res => {\n          console.log(\"route select made it THIS FAR!\", routeSelect); // const routeStopsResponse = res.data;\n\n          setRouteStopsResponse(res.data);\n        });\n      }\n    }\n  }, // Listening for changes in input values in order to\n  // trigger a call to the API  to re-render the component.\n  [routeSelect, originNumber]);\n  return routeStopsResponse.route_stops_response;\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/RouteStopsApi.js"],"names":["React","useState","axios","require","RouteStopsApi","routeSelect","originNumber","routeStopsResponse","setRouteStopsResponse","route_stops_response","console","log","useEffect","String","undefined","NaN","get","params","chosenRoute","chosenStop","then","res","data"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;AACA;;;AACA,eAAe,SAASC,aAAT,CAAuBC,WAAvB,EAAoCC,YAApC,EAAkD;AAC/D;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC;AAC3DQ,IAAAA,oBAAoB,EAAE;AADqC,GAAD,CAA5D;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ,EAL+D,CAO/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACAN,EAAAA,KAAK,CAACY,SAAN,CACE,MAAM;AACJ,QAAIC,MAAM,CAACR,WAAD,CAAN,KAAwB,EAAxB,IAA8BC,YAAY,KAAK,CAAnD,EAAsD;AACpD;AACA;AACA,aAAOQ,SAAP;AACD,KAJD,MAIO,IAAIR,YAAY,KAAKS,GAArB,EAA0B;AAC/B,aAAOD,SAAP;AACD,KAFM,MAEA;AACLJ,MAAAA,OAAO,CAACC,GAAR,CACE,0DADF,EAEEN,WAFF,EAGEC,YAHF;;AAKA,UAAIA,YAAY,KAAK,CAArB,EAAwB;AACtBE,QAAAA,qBAAqB,CAAC;AACpBC,UAAAA,oBAAoB,EAAE;AADF,SAAD,CAArB;AAGD,OAJD,MAIO,IAAIH,YAAY,KAAKS,GAArB,EAA0B;AAC/BP,QAAAA,qBAAqB,CAAC;AACpBC,UAAAA,oBAAoB,EAAE;AADF,SAAD,CAArB;AAGD,OAJM,MAIA,IAAIH,YAAY,KAAK,EAArB,EAAyB;AAC9BE,QAAAA,qBAAqB,CAAC;AACpBC,UAAAA,oBAAoB,EAAE;AADF,SAAD,CAArB;AAGD,OAJM,MAIA;AACLP,QAAAA,KAAK,CACFc,GADH,CACQ,kBADR,EAC2B;AACvBC,UAAAA,MAAM,EAAE;AACNC,YAAAA,WAAW,EAAEb,WADP;AAENc,YAAAA,UAAU,EAAEb;AAFN;AADe,SAD3B,EAOGc,IAPH,CAOSC,GAAD,IAAS;AACbX,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CN,WAA9C,EADa,CAEb;;AACAG,UAAAA,qBAAqB,CAACa,GAAG,CAACC,IAAL,CAArB;AACD,SAXH;AAYD;AACF;AACF,GAzCH,EA0CE;AACA;AACA,GAACjB,WAAD,EAAcC,YAAd,CA5CF;AA+CA,SAAOC,kBAAkB,CAACE,oBAA1B;AACD","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\n// A function to request a list of stops from a user selected route going\n// in specified direction - each of these are received as input.\nexport default function RouteStopsApi(routeSelect, originNumber) {\n  // The response from the backend we need to track in state:\n  const [routeStopsResponse, setRouteStopsResponse] = useState({\n    route_stops_response: [],\n  });\n  console.log(originNumber);\n\n  // // React Hook React.useEffect has a missing dependency: 'routeSelect'. Either include it or remove the dependency array\n  // // React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked\n  // The variable below has been created to avoid the two errors above.\n  // console.log(\n  //   \"RouteStopsApi - routeSelectMissingDependencyFix triggered\",\n  //   routeSelectMissingDependencyFix,\n  //   directionSelect\n  // );\n\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (String(routeSelect) === \"\" && originNumber === 0) {\n        // console.log(\"RouteStopsApi - undefined - got rendered\");\n        // initial render should be nothing.\n        return undefined;\n      } else if (originNumber === NaN) {\n        return undefined;\n      } else {\n        console.log(\n          \"RouteStopsApi - got rendered with the following values: \",\n          routeSelect,\n          originNumber\n        );\n        if (originNumber === 0) {\n          setRouteStopsResponse({\n            route_stops_response: [],\n          });\n        } else if (originNumber === NaN) {\n          setRouteStopsResponse({\n            route_stops_response: [],\n          });\n        } else if (originNumber === \"\") {\n          setRouteStopsResponse({\n            route_stops_response: [],\n          });\n        } else {\n          axios\n            .get(`/api/route_stops`, {\n              params: {\n                chosenRoute: routeSelect,\n                chosenStop: originNumber,\n              },\n            })\n            .then((res) => {\n              console.log(\"route select made it THIS FAR!\", routeSelect);\n              // const routeStopsResponse = res.data;\n              setRouteStopsResponse(res.data);\n            });\n        }\n      }\n    },\n    // Listening for changes in input values in order to\n    // trigger a call to the API  to re-render the component.\n    [routeSelect, originNumber]\n  );\n\n  return routeStopsResponse.route_stops_response;\n}\n"]},"metadata":{},"sourceType":"module"}