{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/BlApp.js\";\nimport React, { useState } from \"react\";\n\nconst axios = require(\"axios\");\n\nfunction useForceUpdate() {\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nlet count = 0;\nexport default function BlApp(props) {\n  const [modelResponse, setModelResponse] = React.useState([]);\n  const [hour, setHour] = React.useState();\n  const [day, setDay] = React.useState();\n  const [month, setMonth] = React.useState(); // Changing stops of route displayed on based on user choice.\n\n  const routeChoice = route => {\n    setRouteString(() => route.routeString);\n  };\n\n  const hourChoice = hour => {\n    setHour(() => props.timeDayMonth[0]);\n  };\n\n  const [query, setQuery] = useState([\"9\", \"Thu\", \"May\"]);\n  console.log(\"These are the time values when received in BlApp\", props.timeDayMonth[0], props.timeDayMonth[1], props.timeDayMonth[2]);\n  React.useEffect(() => {\n    axios.get(`/api/model_result`, {\n      params: {\n        chosenTime: parseInt(props.timeDayMonth[0]),\n        chosenDay: props.timeDayMonth[1],\n        chosenMonth: props.timeDayMonth[2]\n      }\n    }).then(res => {\n      const modelResponse = res.data;\n      setModelResponse(modelResponse);\n      console.log(\"setModelResponse has been triggered\");\n    });\n  }, [query]);\n  let forceUpdate = useForceUpdate();\n  console.log(modelResponse);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, count++, \" times clicked\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"This journey is estimated to take \", modelResponse.model_response, \" minutes\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModelResponse(modelResponse),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Refresh\"));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/BlApp.js"],"names":["React","useState","axios","require","useForceUpdate","value","setState","count","BlApp","props","modelResponse","setModelResponse","hour","setHour","day","setDay","month","setMonth","routeChoice","route","setRouteString","routeString","hourChoice","timeDayMonth","query","setQuery","console","log","useEffect","get","params","chosenTime","parseInt","chosenDay","chosenMonth","then","res","data","forceUpdate","model_response"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,cAAT,GAA0B;AACxB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAhC;AACA,SAAO,MAAMK,QAAQ,CAAC,CAACD,KAAF,CAArB;AACD;;AAED,IAAIE,KAAK,GAAG,CAAZ;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACC,QAAN,EAAxB;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBf,KAAK,CAACC,QAAN,EAAtB;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACC,QAAN,EAA1B,CAJmC,CAMnC;;AACA,QAAMiB,WAAW,GAAIC,KAAD,IAAW;AAC7BC,IAAAA,cAAc,CAAC,MAAMD,KAAK,CAACE,WAAb,CAAd;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIV,IAAD,IAAU;AAC3BC,IAAAA,OAAO,CAAC,MAAMJ,KAAK,CAACc,YAAN,CAAmB,CAAnB,CAAP,CAAP;AACD,GAFD;;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,CAAC,GAAD,EAAM,KAAN,EAAa,KAAb,CAAD,CAAlC;AACAyB,EAAAA,OAAO,CAACC,GAAR,CACE,kDADF,EAEElB,KAAK,CAACc,YAAN,CAAmB,CAAnB,CAFF,EAGEd,KAAK,CAACc,YAAN,CAAmB,CAAnB,CAHF,EAIEd,KAAK,CAACc,YAAN,CAAmB,CAAnB,CAJF;AAOAvB,EAAAA,KAAK,CAAC4B,SAAN,CAAgB,MAAM;AACpB1B,IAAAA,KAAK,CACF2B,GADH,CACQ,mBADR,EAC4B;AACxBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAEC,QAAQ,CAACvB,KAAK,CAACc,YAAN,CAAmB,CAAnB,CAAD,CADd;AAENU,QAAAA,SAAS,EAAExB,KAAK,CAACc,YAAN,CAAmB,CAAnB,CAFL;AAGNW,QAAAA,WAAW,EAAEzB,KAAK,CAACc,YAAN,CAAmB,CAAnB;AAHP;AADgB,KAD5B,EAQGY,IARH,CAQSC,GAAD,IAAS;AACb,YAAM1B,aAAa,GAAG0B,GAAG,CAACC,IAA1B;AACA1B,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,KAZH;AAaD,GAdD,EAcG,CAACH,KAAD,CAdH;AAeA,MAAIc,WAAW,GAAGlC,cAAc,EAAhC;AAEAsB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,aAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,EAAV,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACqCG,aAAa,CAAC6B,cADnD,aAFF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAM5B,gBAAgB,CAACD,aAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF;AASD","sourcesContent":["import React, { useState } from \"react\";\nconst axios = require(\"axios\");\n\nfunction useForceUpdate() {\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nlet count = 0;\n\nexport default function BlApp(props) {\n  const [modelResponse, setModelResponse] = React.useState([]);\n  const [hour, setHour] = React.useState();\n  const [day, setDay] = React.useState();\n  const [month, setMonth] = React.useState();\n\n  // Changing stops of route displayed on based on user choice.\n  const routeChoice = (route) => {\n    setRouteString(() => route.routeString);\n  };\n\n  const hourChoice = (hour) => {\n    setHour(() => props.timeDayMonth[0]);\n  };\n  const [query, setQuery] = useState([\"9\", \"Thu\", \"May\"]);\n  console.log(\n    \"These are the time values when received in BlApp\",\n    props.timeDayMonth[0],\n    props.timeDayMonth[1],\n    props.timeDayMonth[2]\n  );\n\n  React.useEffect(() => {\n    axios\n      .get(`/api/model_result`, {\n        params: {\n          chosenTime: parseInt(props.timeDayMonth[0]),\n          chosenDay: props.timeDayMonth[1],\n          chosenMonth: props.timeDayMonth[2],\n        },\n      })\n      .then((res) => {\n        const modelResponse = res.data;\n        setModelResponse(modelResponse);\n        console.log(\"setModelResponse has been triggered\");\n      });\n  }, [query]);\n  let forceUpdate = useForceUpdate();\n\n  console.log(modelResponse);\n  return (\n    <div>\n      <h1>{count++} times clicked</h1>\n      <p>\n        This journey is estimated to take {modelResponse.model_response} minutes\n      </p>\n      <button onClick={() => setModelResponse(modelResponse)}>Refresh</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}