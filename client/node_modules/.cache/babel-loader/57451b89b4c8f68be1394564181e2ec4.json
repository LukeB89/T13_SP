{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/BlApp.js\";\nimport React, { useState } from \"react\";\n\nconst axios = require(\"axios\");\n\nfunction useForceUpdate() {\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nlet count = 0;\nexport default function BlApp(props) {\n  const [modelResponse, setModelResponse] = React.useState([]);\n  const [hour, setHour] = React.useState(props.timeDayMonth[0]);\n  const [day, setDay] = React.useState(props.timeDayMonth[1]);\n  const [month, setMonth] = React.useState(props.timeDayMonth[2]);\n\n  const dayChoice = () => {\n    setDay(() => props.timeDayMonth[1]);\n  };\n\n  const [query, setQuery] = useState([\"9\", \"Thu\", \"May\"]);\n  console.log(\"These are the time values when received in BlApp\", props.timeDayMonth[0], props.timeDayMonth[1], props.timeDayMonth[2]); // console.log(dayChoice());\n\n  React.useEffect(() => {\n    axios.get(`/api/model_result`, {\n      params: {\n        chosenTime: hour,\n        chosenDay: day,\n        chosenMonth: month\n      }\n    }).then(res => {\n      const modelResponse = res.data;\n      setModelResponse(modelResponse);\n      console.log(\"setModelResponse has been triggered\");\n      setHour(() => props.timeDayMonth[0]);\n      setDay(() => props.timeDayMonth[1]);\n    });\n  }, [query]);\n  console.log(\"Hey day\", day);\n  let forceUpdate = useForceUpdate();\n  console.log(modelResponse);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, count++, \" times clicked\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"This journey is estimated to take \", modelResponse.model_response, \" minutes\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModelResponse(modelResponse),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Refresh\"));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/BlApp.js"],"names":["React","useState","axios","require","useForceUpdate","value","setState","count","BlApp","props","modelResponse","setModelResponse","hour","setHour","timeDayMonth","day","setDay","month","setMonth","dayChoice","query","setQuery","console","log","useEffect","get","params","chosenTime","chosenDay","chosenMonth","then","res","data","forceUpdate","model_response"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,cAAT,GAA0B;AACxB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAhC;AACA,SAAO,MAAMK,QAAQ,CAAC,CAACD,KAAF,CAArB;AACD;;AAED,IAAIE,KAAK,GAAG,CAAZ;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACC,QAAN,CAAeQ,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAAf,CAAxB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,KAAK,CAACC,QAAN,CAAeQ,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAAf,CAAtB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACC,QAAN,CAAeQ,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAAf,CAA1B;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACtBH,IAAAA,MAAM,CAAC,MAAMP,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAAP,CAAN;AACD,GAFD;;AAGA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,CAAC,GAAD,EAAM,KAAN,EAAa,KAAb,CAAD,CAAlC;AACAqB,EAAAA,OAAO,CAACC,GAAR,CACE,kDADF,EAEEd,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAFF,EAGEL,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAHF,EAIEL,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAJF,EAVmC,CAiBnC;;AAEAd,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpBtB,IAAAA,KAAK,CACFuB,GADH,CACQ,mBADR,EAC4B;AACxBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAEf,IADN;AAENgB,QAAAA,SAAS,EAAEb,GAFL;AAGNc,QAAAA,WAAW,EAAEZ;AAHP;AADgB,KAD5B,EAQGa,IARH,CAQSC,GAAD,IAAS;AACb,YAAMrB,aAAa,GAAGqB,GAAG,CAACC,IAA1B;AACArB,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AAEAY,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAV,MAAAA,OAAO,CAAC,MAAMJ,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAAP,CAAP;AACAE,MAAAA,MAAM,CAAC,MAAMP,KAAK,CAACK,YAAN,CAAmB,CAAnB,CAAP,CAAN;AACD,KAfH;AAgBD,GAjBD,EAiBG,CAACM,KAAD,CAjBH;AAkBAE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,GAAvB;AAEA,MAAIkB,WAAW,GAAG7B,cAAc,EAAhC;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,EAAV,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACqCG,aAAa,CAACwB,cADnD,aAFF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAMvB,gBAAgB,CAACD,aAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF;AASD","sourcesContent":["import React, { useState } from \"react\";\nconst axios = require(\"axios\");\n\nfunction useForceUpdate() {\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nlet count = 0;\n\nexport default function BlApp(props) {\n  const [modelResponse, setModelResponse] = React.useState([]);\n  const [hour, setHour] = React.useState(props.timeDayMonth[0]);\n  const [day, setDay] = React.useState(props.timeDayMonth[1]);\n  const [month, setMonth] = React.useState(props.timeDayMonth[2]);\n\n  const dayChoice = () => {\n    setDay(() => props.timeDayMonth[1]);\n  };\n  const [query, setQuery] = useState([\"9\", \"Thu\", \"May\"]);\n  console.log(\n    \"These are the time values when received in BlApp\",\n    props.timeDayMonth[0],\n    props.timeDayMonth[1],\n    props.timeDayMonth[2]\n  );\n\n  // console.log(dayChoice());\n\n  React.useEffect(() => {\n    axios\n      .get(`/api/model_result`, {\n        params: {\n          chosenTime: hour,\n          chosenDay: day,\n          chosenMonth: month,\n        },\n      })\n      .then((res) => {\n        const modelResponse = res.data;\n        setModelResponse(modelResponse);\n\n        console.log(\"setModelResponse has been triggered\");\n        setHour(() => props.timeDayMonth[0]);\n        setDay(() => props.timeDayMonth[1]);\n      });\n  }, [query]);\n  console.log(\"Hey day\", day);\n\n  let forceUpdate = useForceUpdate();\n  console.log(modelResponse);\n  return (\n    <div>\n      <h1>{count++} times clicked</h1>\n      <p>\n        This journey is estimated to take {modelResponse.model_response} minutes\n      </p>\n      <button onClick={() => setModelResponse(modelResponse)}>Refresh</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}