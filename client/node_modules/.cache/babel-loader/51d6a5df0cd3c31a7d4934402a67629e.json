{"ast":null,"code":"var t = function () {\n  function t(e, i) {\n    e.getClusterer().extend(t, google.maps.OverlayView), this.cluster = e, this.className = this.cluster.getClusterer().getClusterClass(), this.styles = i, this.center = void 0, this.div = null, this.sums = null, this.visible = !1, this.boundsChangedListener = null, this.url = \"\", this.height = 0, this.width = 0, this.anchorText = [0, 0], this.anchorIcon = [0, 0], this.textColor = \"black\", this.textSize = 11, this.textDecoration = \"none\", this.fontWeight = \"bold\", this.fontStyle = \"normal\", this.fontFamily = \"Arial,sans-serif\", this.backgroundPosition = \"0 0\", this.setMap(e.getMap());\n  }\n\n  var e = t.prototype;\n  return e.onAdd = function () {\n    var t,\n        e,\n        i = this;\n    this.div = document.createElement(\"div\"), this.div.className = this.className, this.visible && this.show(), this.getPanes().overlayMouseTarget.appendChild(this.div), this.boundsChangedListener = google.maps.event.addListener(this.getMap(), \"boundschanged\", function () {\n      e = t;\n    }), google.maps.event.addDomListener(this.div, \"mousedown\", function () {\n      t = !0, e = !1;\n    }), google.maps.event.addDomListener(this.div, \"click\", function (s) {\n      if (t = !1, !e) {\n        var n = i.cluster.getClusterer();\n\n        if (google.maps.event.trigger(n, \"click\", i.cluster), google.maps.event.trigger(n, \"clusterclick\", i.cluster), n.getZoomOnClick()) {\n          var r = n.getMaxZoom(),\n              o = i.cluster.getBounds();\n          n.getMap().fitBounds(o), setTimeout(function () {\n            n.getMap().fitBounds(o), null !== r && n.getMap().getZoom() > r && n.getMap().setZoom(r + 1);\n          }, 100);\n        }\n\n        s.cancelBubble = !0, s.stopPropagation && s.stopPropagation();\n      }\n    }), google.maps.event.addDomListener(this.div, \"mouseover\", function () {\n      google.maps.event.trigger(i.cluster.getClusterer(), \"mouseover\", i.cluster);\n    }), google.maps.event.addDomListener(this.div, \"mouseout\", function () {\n      google.maps.event.trigger(i.cluster.getClusterer(), \"mouseout\", i.cluster);\n    });\n  }, e.onRemove = function () {\n    this.div && this.div.parentNode && (this.hide(), null !== this.boundsChangedListener && google.maps.event.removeListener(this.boundsChangedListener), google.maps.event.clearInstanceListeners(this.div), this.div.parentNode.removeChild(this.div), this.div = null);\n  }, e.draw = function () {\n    if (this.visible && null !== this.div && this.center) {\n      var t = this.getPosFromLatLng(this.center),\n          e = t.x;\n      this.div.style.top = t.y + \"px\", this.div.style.left = e + \"px\";\n    }\n  }, e.hide = function () {\n    this.div && (this.div.style.display = \"none\"), this.visible = !1;\n  }, e.show = function () {\n    if (this.div && this.center) {\n      var t = \"\",\n          e = this.backgroundPosition.split(\" \"),\n          i = parseInt(e[0].replace(/^\\s+|\\s+$/g, \"\"), 10),\n          s = parseInt(e[1].replace(/^\\s+|\\s+$/g, \"\"), 10),\n          n = this.getPosFromLatLng(this.center);\n      this.div.style.cssText = this.createCss(n), t = \"<img src='\" + this.url + \"' style='position: absolute; top: \" + s + \"px; left: \" + i + \"px; \", this.cluster.getClusterer().enableRetinaIcons || (t += \"clip: rect(\" + -1 * s + \"px, \" + (-1 * i + this.width) + \"px, \" + (-1 * s + this.height) + \"px, \" + -1 * i + \"px);\"), this.div.innerHTML = (t += \"'>\") + \"<div style='position: absolute;top: \" + this.anchorText[0] + \"px;left: \" + this.anchorText[1] + \"px;color: \" + this.textColor + \";font-size: \" + this.textSize + \"px;font-family: \" + this.fontFamily + \";font-weight: \" + this.fontWeight + \";font-style: \" + this.fontStyle + \";text-decoration: \" + this.textDecoration + \";text-align: center;width: \" + this.width + \"px;line-height:\" + this.height + \"px;'>\" + this.sums.text + \"</div>\", this.div.title = void 0 === this.sums.title || \"\" === this.sums.title ? this.cluster.getClusterer().getTitle() : this.sums.title, this.div.style.display = \"\";\n    }\n\n    this.visible = !0;\n  }, e.useStyle = function (t) {\n    this.sums = t;\n    var e = this.styles[Math.min(this.styles.length - 1, Math.max(0, t.index - 1))];\n    this.url = e.url, this.height = e.height, this.width = e.width, this.anchorText = e.anchorText || [0, 0], this.anchorIcon = e.anchorIcon || [this.height / 2, this.width / 2], this.textColor = e.textColor || \"black\", this.textSize = e.textSize || 11, this.textDecoration = e.textDecoration || \"none\", this.fontWeight = e.fontWeight || \"bold\", this.fontStyle = e.fontStyle || \"normal\", this.fontFamily = e.fontFamily || \"Arial,sans-serif\", this.backgroundPosition = e.backgroundPosition || \"0 0\";\n  }, e.setCenter = function (t) {\n    this.center = t;\n  }, e.createCss = function (t) {\n    var e = [];\n    return e.push(\"cursor: pointer;\"), e.push(\"position: absolute; top: \" + t.y + \"px; left: \" + t.x + \"px;\"), e.push(\"width: \" + this.width + \"px; height: \" + this.height + \"px;\"), e.join(\"\");\n  }, e.getPosFromLatLng = function (t) {\n    var e = this.getProjection().fromLatLngToDivPixel(t);\n    return e.x -= this.anchorIcon[1], e.y -= this.anchorIcon[0], e.x = e.x, e.y = e.y, e;\n  }, t;\n}(),\n    e = function () {\n  function e(e) {\n    this.markerClusterer = e, this.map = this.markerClusterer.getMap(), this.gridSize = this.markerClusterer.getGridSize(), this.minClusterSize = this.markerClusterer.getMinimumClusterSize(), this.averageCenter = this.markerClusterer.getAverageCenter(), this.markers = [], this.center = void 0, this.bounds = null, this.clusterIcon = new t(this, this.markerClusterer.getStyles());\n  }\n\n  var i = e.prototype;\n  return i.getSize = function () {\n    return this.markers.length;\n  }, i.getMarkers = function () {\n    return this.markers;\n  }, i.getCenter = function () {\n    return this.center;\n  }, i.getMap = function () {\n    return this.map;\n  }, i.getClusterer = function () {\n    return this.markerClusterer;\n  }, i.getBounds = function () {\n    for (var t = new google.maps.LatLngBounds(this.center, this.center), e = this.getMarkers(), i = 0; i < e.length; i++) {\n      var s = e[i].getPosition();\n      s && t.extend(s);\n    }\n\n    return t;\n  }, i.remove = function () {\n    this.clusterIcon.setMap(null), this.markers = [], delete this.markers;\n  }, i.addMarker = function (t) {\n    if (this.isMarkerAlreadyAdded(t)) return !1;\n\n    if (this.center) {\n      if (this.averageCenter) {\n        var e = t.getPosition();\n\n        if (e) {\n          var i = this.markers.length + 1;\n          this.center = new google.maps.LatLng((this.center.lat() * (i - 1) + e.lat()) / i, (this.center.lng() * (i - 1) + e.lng()) / i), this.calculateBounds();\n        }\n      }\n    } else {\n      var s = t.getPosition();\n      s && (this.center = s, this.calculateBounds());\n    }\n\n    t.isAdded = !0, this.markers.push(t);\n    var n = this.markers.length,\n        r = this.markerClusterer.getMaxZoom();\n    if (null !== r && this.map.getZoom() > r) t.getMap() !== this.map && t.setMap(this.map);else if (n < this.minClusterSize) t.getMap() !== this.map && t.setMap(this.map);else if (n === this.minClusterSize) for (var o = 0; o < n; o++) this.markers[o].setMap(null);else t.setMap(null);\n    return this.updateIcon(), !0;\n  }, i.isMarkerInClusterBounds = function (t) {\n    if (null !== this.bounds) {\n      var e = t.getPosition();\n      if (e) return this.bounds.contains(e);\n    }\n\n    return !1;\n  }, i.calculateBounds = function () {\n    this.bounds = this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center, this.center));\n  }, i.updateIcon = function () {\n    var t = this.markers.length,\n        e = this.markerClusterer.getMaxZoom();\n    null !== e && this.map.getZoom() > e ? this.clusterIcon.hide() : t < this.minClusterSize ? this.clusterIcon.hide() : (this.center && this.clusterIcon.setCenter(this.center), this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)), this.clusterIcon.show());\n  }, i.isMarkerAlreadyAdded = function (t) {\n    if (this.markers.indexOf) return this.markers.includes(t);\n\n    for (var e = 0; e < this.markers.length; e++) if (t === this.markers[e]) return !0;\n\n    return !1;\n  }, e;\n}(),\n    i = function (t, e) {\n  for (var i = 0, s = t.length.toString(), n = s; 0 !== n;) n = parseInt(n, 10) / 10, i++;\n\n  return {\n    text: s,\n    index: i = Math.min(i, e),\n    title: \"\"\n  };\n},\n    s = 2e3,\n    n = 500,\n    r = \"https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/Clustererplus/images/m\",\n    o = \"png\",\n    a = [53, 56, 66, 78, 90],\n    h = \"cluster\",\n    l = function () {\n  function t(e, l, u) {\n    void 0 === l && (l = []), void 0 === u && (u = {}), this.extend(t, google.maps.OverlayView), this.markers = [], this.clusters = [], this.listeners = [], this.activeMap = null, this.ready = !1, this.gridSize = u.gridSize || 60, this.minClusterSize = u.minimumClusterSize || 2, this.maxZoom = u.maxZoom || null, this.styles = u.styles || [], this.title = u.title || \"\", this.zoomOnClick = !0, void 0 !== u.zoomOnClick && (this.zoomOnClick = u.zoomOnClick), this.averageCenter = !1, void 0 !== u.averageCenter && (this.averageCenter = u.averageCenter), this.ignoreHidden = !1, void 0 !== u.ignoreHidden && (this.ignoreHidden = u.ignoreHidden), this.enableRetinaIcons = !1, void 0 !== u.enableRetinaIcons && (this.enableRetinaIcons = u.enableRetinaIcons), this.imagePath = u.imagePath || r, this.imageExtension = u.imageExtension || o, this.imageSizes = u.imageSizes || a, this.calculator = u.calculator || i, this.batchSize = u.batchSize || s, this.batchSizeIE = u.batchSizeIE || n, this.clusterClass = u.clusterClass || h, -1 !== navigator.userAgent.toLowerCase().indexOf(\"msie\") && (this.batchSize = this.batchSizeIE), this.timerRefStatic = null, this.setupStyles(), this.addMarkers(l, !0), this.setMap(e);\n  }\n\n  var l = t.prototype;\n  return l.onAdd = function () {\n    var t = this;\n    this.activeMap = this.getMap(), this.ready = !0, this.repaint(), this.listeners = [google.maps.event.addListener(this.getMap(), \"zoom_changed\", function () {\n      t.resetViewport(!1), t.getMap().getZoom() !== (t.get(\"minZoom\") || 0) && t.getMap().getZoom() !== t.get(\"maxZoom\") || google.maps.event.trigger(t, \"idle\");\n    }), google.maps.event.addListener(this.getMap(), \"idle\", function () {\n      t.redraw();\n    })];\n  }, l.onRemove = function () {\n    for (var t = 0; t < this.markers.length; t++) this.markers[t].getMap() !== this.activeMap && this.markers[t].setMap(this.activeMap);\n\n    for (var e = 0; e < this.clusters.length; e++) this.clusters[e].remove();\n\n    this.clusters = [];\n\n    for (var i = 0; i < this.listeners.length; i++) google.maps.event.removeListener(this.listeners[i]);\n\n    this.listeners = [], this.activeMap = null, this.ready = !1;\n  }, l.draw = function () {}, l.setupStyles = function () {\n    if (!(this.styles.length > 0)) for (var t = 0; t < this.imageSizes.length; t++) this.styles.push({\n      url: this.imagePath + (t + 1) + \".\" + this.imageExtension,\n      height: this.imageSizes[t],\n      width: this.imageSizes[t]\n    });\n  }, l.fitMapToMarkers = function () {\n    for (var t = this.getMarkers(), e = new google.maps.LatLngBounds(), i = 0; i < t.length; i++) {\n      var s = t[i].getPosition();\n      s && e.extend(s);\n    }\n\n    this.getMap().fitBounds(e);\n  }, l.getGridSize = function () {\n    return this.gridSize;\n  }, l.setGridSize = function (t) {\n    this.gridSize = t;\n  }, l.getMinimumClusterSize = function () {\n    return this.minClusterSize;\n  }, l.setMinimumClusterSize = function (t) {\n    this.minClusterSize = t;\n  }, l.getMaxZoom = function () {\n    return this.maxZoom;\n  }, l.setMaxZoom = function (t) {\n    this.maxZoom = t;\n  }, l.getStyles = function () {\n    return this.styles;\n  }, l.setStyles = function (t) {\n    this.styles = t;\n  }, l.getTitle = function () {\n    return this.title;\n  }, l.setTitle = function (t) {\n    this.title = t;\n  }, l.getZoomOnClick = function () {\n    return this.zoomOnClick;\n  }, l.setZoomOnClick = function (t) {\n    this.zoomOnClick = t;\n  }, l.getAverageCenter = function () {\n    return this.averageCenter;\n  }, l.setAverageCenter = function (t) {\n    this.averageCenter = t;\n  }, l.getIgnoreHidden = function () {\n    return this.ignoreHidden;\n  }, l.setIgnoreHidden = function (t) {\n    this.ignoreHidden = t;\n  }, l.getEnableRetinaIcons = function () {\n    return this.enableRetinaIcons;\n  }, l.setEnableRetinaIcons = function (t) {\n    this.enableRetinaIcons = t;\n  }, l.getImageExtension = function () {\n    return this.imageExtension;\n  }, l.setImageExtension = function (t) {\n    this.imageExtension = t;\n  }, l.getImagePath = function () {\n    return this.imagePath;\n  }, l.setImagePath = function (t) {\n    this.imagePath = t;\n  }, l.getImageSizes = function () {\n    return this.imageSizes;\n  }, l.setImageSizes = function (t) {\n    this.imageSizes = t;\n  }, l.getCalculator = function () {\n    return this.calculator;\n  }, l.setCalculator = function (t) {\n    this.calculator = t;\n  }, l.getBatchSizeIE = function () {\n    return this.batchSizeIE;\n  }, l.setBatchSizeIE = function (t) {\n    this.batchSizeIE = t;\n  }, l.getClusterClass = function () {\n    return this.clusterClass;\n  }, l.setClusterClass = function (t) {\n    this.clusterClass = t;\n  }, l.getMarkers = function () {\n    return this.markers;\n  }, l.getTotalMarkers = function () {\n    return this.markers.length;\n  }, l.getClusters = function () {\n    return this.clusters;\n  }, l.getTotalClusters = function () {\n    return this.clusters.length;\n  }, l.addMarker = function (t, e) {\n    this.pushMarkerTo(t), e || this.redraw();\n  }, l.addMarkers = function (t, e) {\n    for (var i in t) t.hasOwnProperty(i) && this.pushMarkerTo(t[i]);\n\n    e || this.redraw();\n  }, l.pushMarkerTo = function (t) {\n    var e = this;\n    t.getDraggable() && google.maps.event.addListener(t, \"dragend\", function () {\n      e.ready && (t.isAdded = !1, e.repaint());\n    }), t.isAdded = !1, this.markers.push(t);\n  }, l.removeMarker_ = function (t) {\n    var e = -1;\n    if (this.markers.indexOf) e = this.markers.indexOf(t);else for (var i = 0; i < this.markers.length; i++) if (t === this.markers[i]) {\n      e = i;\n      break;\n    }\n    return -1 !== e && (t.setMap(null), this.markers.splice(e, 1), !0);\n  }, l.removeMarker = function (t, e) {\n    var i = this.removeMarker_(t);\n    return !e && i && this.repaint(), i;\n  }, l.removeMarkers = function (t, e) {\n    for (var i = !1, s = 0; s < t.length; s++) i = i || this.removeMarker_(t[s]);\n\n    return !e && i && this.repaint(), i;\n  }, l.clearMarkers = function () {\n    this.resetViewport(!0), this.markers = [];\n  }, l.repaint = function () {\n    var t = this.clusters.slice();\n    this.clusters = [], this.resetViewport(!1), this.redraw(), setTimeout(function () {\n      for (var e = 0; e < t.length; e++) t[e].remove();\n    }, 0);\n  }, l.getExtendedBounds = function (t) {\n    var e = this.getProjection(),\n        i = e.fromLatLngToDivPixel(new google.maps.LatLng(t.getNorthEast().lat(), t.getNorthEast().lng()));\n    i.x += this.gridSize, i.y -= this.gridSize;\n    var s = e.fromLatLngToDivPixel(new google.maps.LatLng(t.getSouthWest().lat(), t.getSouthWest().lng()));\n    return s.x -= this.gridSize, s.y += this.gridSize, t.extend(e.fromDivPixelToLatLng(i)), t.extend(e.fromDivPixelToLatLng(s)), t;\n  }, l.redraw = function () {\n    this.createClusters(0);\n  }, l.resetViewport = function (t) {\n    for (var e = 0; e < this.clusters.length; e++) this.clusters[e].remove();\n\n    this.clusters = [];\n\n    for (var i = 0; i < this.markers.length; i++) {\n      var s = this.markers[i];\n      s.isAdded = !1, t && s.setMap(null);\n    }\n  }, l.distanceBetweenPoints = function (t, e) {\n    var i = (e.lat() - t.lat()) * Math.PI / 180,\n        s = (e.lng() - t.lng()) * Math.PI / 180,\n        n = Math.sin(i / 2) * Math.sin(i / 2) + Math.cos(t.lat() * Math.PI / 180) * Math.cos(e.lat() * Math.PI / 180) * Math.sin(s / 2) * Math.sin(s / 2);\n    return 2 * Math.atan2(Math.sqrt(n), Math.sqrt(1 - n)) * 6371;\n  }, l.isMarkerInBounds = function (t, e) {\n    var i = t.getPosition();\n    return !!i && e.contains(i);\n  }, l.addToClosestCluster = function (t) {\n    for (var i, s = 4e4, n = null, r = 0; r < this.clusters.length; r++) {\n      var o = (i = this.clusters[r]).getCenter(),\n          a = t.getPosition();\n\n      if (o && a) {\n        var h = this.distanceBetweenPoints(o, a);\n        h < s && (s = h, n = i);\n      }\n    }\n\n    n && n.isMarkerInClusterBounds(t) ? n.addMarker(t) : ((i = new e(this)).addMarker(t), this.clusters.push(i));\n  }, l.createClusters = function (t) {\n    var e = this;\n\n    if (this.ready) {\n      0 === t && (google.maps.event.trigger(this, \"clusteringbegin\", this), null !== this.timerRefStatic && (window.clearTimeout(this.timerRefStatic), delete this.timerRefStatic));\n\n      for (var i = this.getMap().getZoom() > 3 ? new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(), this.getMap().getBounds().getNorthEast()) : new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625)), s = this.getExtendedBounds(i), n = Math.min(t + this.batchSize, this.markers.length), r = t; r < n; r++) {\n        var o = this.markers[r];\n        !o.isAdded && this.isMarkerInBounds(o, s) && (!this.ignoreHidden || this.ignoreHidden && o.getVisible()) && this.addToClosestCluster(o);\n      }\n\n      n < this.markers.length ? this.timerRefStatic = window.setTimeout(function () {\n        e.createClusters(n);\n      }, 0) : (this.timerRefStatic = null, google.maps.event.trigger(this, \"clusteringend\", this));\n    }\n  }, l.extend = function (t, e) {\n    return function (t) {\n      for (var e in t.prototype) this.prototype[e] = t.prototype[e];\n\n      return this;\n    }.apply(t, [e]);\n  }, t;\n}();\n\nexport { e as Cluster, t as ClusterIcon, l as Clusterer };","map":{"version":3,"sources":["../src/ClusterIcon.tsx","../src/Cluster.tsx","../src/Clusterer.tsx"],"names":["ClusterIcon","cluster","styles","getClusterer","extend","google","maps","OverlayView","className","this","getClusterClass","center","undefined","div","sums","visible","boundsChangedListener","url","height","width","anchorText","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","setMap","getMap","onAdd","cMouseDownInCluster","cDraggingMapByCluster","document","createElement","show","getPanes","overlayMouseTarget","appendChild","event","addListener","addDomListener","markerClusterer","_this","trigger","getZoomOnClick","maxZoom","getMaxZoom","bounds","getBounds","fitBounds","setTimeout","getZoom","setZoom","cancelBubble","stopPropagation","onRemove","parentNode","hide","removeListener","clearInstanceListeners","removeChild","draw","x","y","getPosFromLatLng","style","top","left","display","img","bp","split","spriteH","parseInt","replace","spriteV","pos","cssText","createCss","enableRetinaIcons","innerHTML","text","title","getTitle","useStyle","Math","min","length","max","index","setCenter","push","join","latlng","getProjection","fromLatLngToDivPixel","Cluster","map","gridSize","getGridSize","minClusterSize","getMinimumClusterSize","averageCenter","getAverageCenter","markers","clusterIcon","getStyles","getSize","getMarkers","getCenter","LatLngBounds","i","position","getPosition","remove","addMarker","marker","isMarkerAlreadyAdded","calculateBounds","LatLng","lat","lng","isAdded","mCount","updateIcon","isMarkerInClusterBounds","contains","getExtendedBounds","indexOf","includes","CALCULATOR","numStyles","count","toString","dv","BATCH_SIZE","BATCH_SIZE_IE","IMAGE_PATH","IMAGE_EXTENSION","IMAGE_SIZES","CLUSTERER_CLASS","Clusterer","optMarkers","optOptions","clusters","listeners","activeMap","ready","minimumClusterSize","zoomOnClick","ignoreHidden","imagePath","imageExtension","imageSizes","calculator","batchSize","batchSizeIE","clusterClass","navigator","userAgent","toLowerCase","timerRefStatic","setupStyles","addMarkers","repaint","resetViewport","get","redraw","fitMapToMarkers","setGridSize","setMinimumClusterSize","setMaxZoom","setStyles","setTitle","setZoomOnClick","setAverageCenter","getIgnoreHidden","setIgnoreHidden","getEnableRetinaIcons","setEnableRetinaIcons","getImageExtension","setImageExtension","getImagePath","setImagePath","getImageSizes","setImageSizes","getCalculator","setCalculator","getBatchSizeIE","setBatchSizeIE","setClusterClass","getTotalMarkers","getClusters","getTotalClusters","optNoDraw","pushMarkerTo","key","hasOwnProperty","getDraggable","_this2","removeMarker_","splice","removeMarker","removed","removeMarkers","clearMarkers","oldClusters","slice","projection","trPix","getNorthEast","blPix","getSouthWest","fromDivPixelToLatLng","createClusters","optHide","distanceBetweenPoints","p1","p2","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds","addToClosestCluster","distance","clusterToAddTo","d","iFirst","window","clearTimeout","mapBounds","iLast","getVisible","_this3","obj1","obj2","object","property","prototype","apply"],"mappings":"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","sourcesContent":["/* eslint-disable filenames/match-regex */\n/* globals google */\nimport {\n  Cluster\n} from './Cluster'\n\nimport {\n  ClusterIconStyle,\n  ClusterIconInfo\n} from './types'\n\nexport class ClusterIcon {\n  cluster: Cluster;\n  className: string;\n  styles: ClusterIconStyle[];\n  center: google.maps.LatLng | undefined;\n  div: HTMLDivElement | null;\n  sums: ClusterIconInfo | null;\n  visible: boolean;\n  url: string;\n  height: number;\n  width: number;\n  anchorText: number[];\n  anchorIcon: number[];\n  textColor: string;\n  textSize: number;\n  textDecoration: string;\n  fontWeight: string;\n  fontStyle: string;\n  fontFamily: string;\n  backgroundPosition: string;\n\n  boundsChangedListener: google.maps.MapsEventListener | null;\n\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\n    this.cluster = cluster\n    this.className = this.cluster.getClusterer().getClusterClass()\n    this.styles = styles\n    this.center = undefined\n    this.div = null\n    this.sums = null\n    this.visible = false\n    this.boundsChangedListener = null\n    this.url = ''\n    this.height = 0\n    this.width = 0\n    this.anchorText = [0, 0]\n    this.anchorIcon = [0, 0]\n    this.textColor = 'black'\n    this.textSize = 11\n    this.textDecoration = 'none'\n    this.fontWeight = 'bold'\n    this.fontStyle = 'normal'\n    this.fontFamily = 'Arial,sans-serif'\n    this.backgroundPosition = '0 0'\n    // @ts-ignore\n    this.setMap(cluster.getMap()) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    let cMouseDownInCluster: boolean\n    let cDraggingMapByCluster: boolean\n\n    this.div = document.createElement(\"div\")\n    this.div.className = this.className\n    if (this.visible) {\n      this.show()\n    }\n\n    // @ts-ignore\n    this.getPanes().overlayMouseTarget.appendChild(this.div)\n\n    // Fix for Issue 157\n    this.boundsChangedListener = google.maps.event.addListener(\n      // @ts-ignore\n      this.getMap(),\n      \"boundschanged\",\n      function boundsChabged() {\n        cDraggingMapByCluster = cMouseDownInCluster\n      }\n    )\n\n    google.maps.event.addDomListener(this.div, \"mousedown\", function onMouseDown() {\n      cMouseDownInCluster = true\n      cDraggingMapByCluster = false\n    })\n\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    google.maps.event.addDomListener(\n      this.div,\n      \"click\",\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      (event: MouseEvent) => {\n        cMouseDownInCluster = false\n\n        if (!cDraggingMapByCluster) {\n          const markerClusterer = this.cluster.getClusterer()\n\n          /**\n         * This event is fired when a cluster marker is clicked.\n         * @name MarkerClusterer#click\n         * @param {Cluster} c The cluster that was clicked.\n         * @event\n         */\n          google.maps.event.trigger(markerClusterer, \"click\", this.cluster)\n          google.maps.event.trigger(markerClusterer, \"clusterclick\", this.cluster) // deprecated name\n\n          // The default click handler follows. Disable it by setting\n          // the zoomOnClick property to false.\n          if (markerClusterer.getZoomOnClick()) {\n          // Zoom into the cluster.\n            const maxZoom = markerClusterer.getMaxZoom()\n\n            const bounds = this.cluster.getBounds()\n\n            // @ts-ignore\n            markerClusterer.getMap().fitBounds(bounds)\n\n\n            // There is a fix for Issue 170 here:\n            setTimeout(\n              function timeout() {\n              // @ts-ignore\n                markerClusterer.getMap().fitBounds(bounds)\n\n                // Don't zoom beyond the max zoom level\n                // @ts-ignore\n                if (maxZoom !== null && (markerClusterer.getMap().getZoom() > maxZoom)) {\n                // @ts-ignore\n                  markerClusterer.getMap().setZoom(maxZoom + 1)\n                }\n              },\n              100\n            )\n          }\n\n          // Prevent event propagation to the map:\n          event.cancelBubble = true\n\n          if (event.stopPropagation) {\n            event.stopPropagation()\n          }\n        }\n      })\n\n    google.maps.event.addDomListener(\n      this.div,\n      \"mouseover\",\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      () => {\n        /**\n         * This event is fired when the mouse moves over a cluster marker.\n         * @name MarkerClusterer#mouseover\n         * @param {Cluster} c The cluster that the mouse moved over.\n         * @event\n         */\n        google.maps.event.trigger(\n          this.cluster.getClusterer(),\n          \"mouseover\",\n          this.cluster\n        )\n      }\n    )\n\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    google.maps.event.addDomListener(\n      this.div,\n      \"mouseout\",\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      () => {\n        /**\n         * This event is fired when the mouse moves out of a cluster marker.\n         * @name MarkerClusterer#mouseout\n         * @param {Cluster} c The cluster that the mouse moved out of.\n         * @event\n         */\n        google.maps.event.trigger(\n          this.cluster.getClusterer(),\n          \"mouseout\",\n          this.cluster\n        )\n      }\n    )\n  }\n\n  onRemove() {\n    if (\n      this.div &&\n      this.div.parentNode\n    ) {\n      this.hide()\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener)\n      }\n\n      google.maps.event.clearInstanceListeners(this.div)\n\n      this.div.parentNode.removeChild(this.div)\n\n      this.div = null\n    }\n  }\n\n  draw () {\n    if (this.visible && this.div !== null && this.center) {\n      const { x, y } = this.getPosFromLatLng(this.center)\n\n      this.div.style.top = y + \"px\"\n      this.div.style.left = x + \"px\"\n    }\n  }\n\n  hide () {\n    if (this.div) {\n      this.div.style.display = \"none\"\n    }\n\n    this.visible = false\n  }\n\n  show () {\n    if (this.div && this.center) {\n      let img = \"\"\n\n      // NOTE: values must be specified in px units\n      const bp = this.backgroundPosition.split(\" \")\n\n      const spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, \"\"), 10)\n\n      const spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, \"\"), 10)\n\n      const pos = this.getPosFromLatLng(this.center)\n\n      this.div.style.cssText = this.createCss(pos)\n\n      img = \"<img src='\" + this.url + \"' style='position: absolute; top: \" + spriteV + \"px; left: \" + spriteH + \"px; \"\n\n      //@ts-ignore\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img += \"clip: rect(\" + (-1 * spriteV) + \"px, \" + ((-1 * spriteH) + this.width) + \"px, \" +\n          ((-1 * spriteV) + this.height) + \"px, \" + (-1 * spriteH) + \"px);\"\n      }\n\n      img += \"'>\"\n\n      this.div.innerHTML = img + \"<div style='\" +\n        \"position: absolute;\" +\n        \"top: \" + this.anchorText[0] + \"px;\" +\n        \"left: \" + this.anchorText[1] + \"px;\" +\n        \"color: \" + this.textColor + \";\" +\n        \"font-size: \" + this.textSize + \"px;\" +\n        \"font-family: \" + this.fontFamily + \";\" +\n        \"font-weight: \" + this.fontWeight + \";\" +\n        \"font-style: \" + this.fontStyle + \";\" +\n        \"text-decoration: \" + this.textDecoration + \";\" +\n        \"text-align: center;\" +\n        \"width: \" + this.width + \"px;\" +\n        \"line-height:\" + this.height + \"px;\" +\n        // @ts-ignore\n        \"'>\" + this.sums.text + \"</div>\"\n\n      // @ts-ignore\n      if (typeof this.sums.title === \"undefined\" || this.sums.title === \"\") {\n        this.div.title = this.cluster.getClusterer().getTitle()\n      } else {\n        // @ts-ignore\n        this.div.title = this.sums.title\n      }\n\n      this.div.style.display = \"\"\n    }\n\n    this.visible = true\n  }\n\n  useStyle (sums: ClusterIconInfo) {\n    this.sums = sums\n\n    const style = this.styles[\n      Math.min(this.styles.length - 1, Math.max(0, sums.index - 1))\n    ]\n\n    this.url = style.url\n    this.height = style.height\n    this.width = style.width\n    this.anchorText = style.anchorText || [0, 0]\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\n\n    this.textColor = style.textColor || \"black\"\n\n    this.textSize = style.textSize || 11\n\n    this.textDecoration = style.textDecoration || \"none\"\n\n    this.fontWeight = style.fontWeight || \"bold\"\n\n    this.fontStyle = style.fontStyle || \"normal\"\n\n    this.fontFamily = style.fontFamily || \"Arial,sans-serif\"\n\n    this.backgroundPosition = style.backgroundPosition || \"0 0\"\n  }\n\n  setCenter(center: google.maps.LatLng) {\n    this.center = center\n  }\n\n  createCss(pos: google.maps.Point): string {\n    const style = []\n\n    style.push(\"cursor: pointer;\")\n\n    style.push(\"position: absolute; top: \" + pos.y + \"px; left: \" + pos.x + \"px;\")\n\n    style.push(\"width: \" + this.width + \"px; height: \" + this.height + \"px;\")\n\n    return style.join(\"\")\n  }\n\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point {\n    // @ts-ignore\n    const pos = this.getProjection().fromLatLngToDivPixel(latlng)\n\n    pos.x -= this.anchorIcon[1]\n\n    pos.y -= this.anchorIcon[0]\n\n    pos.x = pos.x\n\n    pos.y = pos.y\n\n    return pos\n  }\n}\n","/* eslint-disable filenames/match-regex */\n/* globals google */\nimport {\n  Clusterer\n} from './Clusterer'\n\nimport {\n  ClusterIcon\n} from './ClusterIcon'\n\nimport {\n  MarkerExtended\n} from './types'\n\nexport class Cluster {\n  markerClusterer: Clusterer;\n  map: google.maps.Map | google.maps.StreetViewPanorama;\n  gridSize: number;\n  minClusterSize: number;\n  averageCenter: boolean;\n  markers: MarkerExtended[];\n  center: google.maps.LatLng | undefined;\n  bounds: google.maps.LatLngBounds | null;\n  clusterIcon: ClusterIcon;\n\n  constructor(markerClusterer: Clusterer) {\n    this.markerClusterer = markerClusterer\n    // @ts-ignore\n    this.map = this.markerClusterer.getMap()\n\n    this.gridSize = this.markerClusterer.getGridSize()\n\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\n\n    this.averageCenter = this.markerClusterer.getAverageCenter()\n\n    this.markers = []\n\n    this.center = undefined\n\n    this.bounds = null\n\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\n  }\n\n  getSize (): number {\n    return this.markers.length\n  }\n\n  getMarkers (): MarkerExtended[] {\n    return this.markers\n  }\n\n  getCenter (): google.maps.LatLng | undefined {\n    return this.center\n  }\n\n  getMap (): google.maps.Map | google.maps.StreetViewPanorama {\n    return this.map\n  }\n\n  getClusterer (): Clusterer {\n    return this.markerClusterer\n  }\n\n  getBounds (): google.maps.LatLngBounds {\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\n\n    const markers = this.getMarkers()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    return bounds\n  }\n\n  remove () {\n    // @ts-ignore\n    this.clusterIcon.setMap(null)\n\n    this.markers = []\n\n    delete this.markers\n  }\n\n  addMarker (marker: MarkerExtended): boolean {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false\n    }\n\n    if (!this.center) {\n      const position = marker.getPosition()\n\n      if (position) {\n        this.center = position\n\n        this.calculateBounds()\n      }\n    } else {\n      if (this.averageCenter) {\n        const position = marker.getPosition()\n\n        if (position) {\n          const length = this.markers.length + 1\n\n          this.center = new google.maps.LatLng(\n            (this.center.lat() * (length - 1) + position.lat()) / length,\n            (this.center.lng() * (length - 1) + position.lng()) / length\n          )\n\n          this.calculateBounds()\n        }\n      }\n    }\n\n    marker.isAdded = true\n\n    this.markers.push(marker)\n\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (let i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null)\n      }\n    } else {\n      marker.setMap(null)\n    }\n\n    this.updateIcon()\n\n    return true\n  }\n\n  isMarkerInClusterBounds ( marker: MarkerExtended): boolean {\n    if (this.bounds !== null) {\n      const position = marker.getPosition()\n\n      if (position) {\n        return this.bounds.contains(position)\n      }\n    }\n\n    return false\n  }\n\n  calculateBounds () {\n    this.bounds = this.markerClusterer.getExtendedBounds(\n      new google.maps.LatLngBounds(\n        this.center,\n        this.center\n      )\n    )\n  }\n\n  updateIcon () {\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center)\n    }\n\n    this.clusterIcon.useStyle(\n      this.markerClusterer.getCalculator()(\n        this.markers,\n        this.markerClusterer.getStyles().length\n      )\n    )\n\n    this.clusterIcon.show()\n  }\n\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\n    if (this.markers.indexOf) {\n      return this.markers.includes(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n}\n","/* eslint-disable filenames/match-regex */\n/* globals google */\nimport { Cluster } from './Cluster'\n\nimport {\n  MarkerExtended,\n  ClustererOptions,\n  ClusterIconStyle,\n  TCalculator,\n  ClusterIconInfo\n} from './types'\n\nconst CALCULATOR = function CALCULATOR(markers: MarkerExtended[], numStyles: number): ClusterIconInfo {\n  var index = 0\n\n  var title = \"\"\n\n  var count = markers.length.toString()\n\n  let dv: string | number = count\n\n  while (dv !== 0) {\n    // @ts-ignore\n    dv = parseInt(dv, 10) / 10\n\n    index++\n  }\n\n  index = Math.min(index, numStyles)\n\n  return {\n    text: count,\n    index: index,\n    title: title\n  }\n}\n\nconst BATCH_SIZE = 2000\n\nconst BATCH_SIZE_IE = 500\n\nconst IMAGE_PATH = \"https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/Clustererplus/images/m\"\n\nconst IMAGE_EXTENSION = \"png\"\n\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\n\nconst CLUSTERER_CLASS = \"cluster\"\n\nexport class Clusterer {\n  markers: MarkerExtended[];\n  clusters: Cluster[];\n  listeners: google.maps.MapsEventListener[];\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null;\n  ready: boolean;\n  gridSize: number;\n  minClusterSize: number;\n  maxZoom: number | null;\n  styles: ClusterIconStyle[];\n  title: string;\n  zoomOnClick: boolean;\n  averageCenter: boolean;\n  ignoreHidden: boolean;\n  enableRetinaIcons: boolean;\n  imagePath: string;\n  imageExtension: string;\n  imageSizes: number[];\n  calculator: TCalculator;\n  batchSize: number;\n  batchSizeIE: number;\n  clusterClass: string;\n  timerRefStatic: number | null;\n\n  constructor(\n    map: google.maps.Map,\n    optMarkers: MarkerExtended[] = [],\n    optOptions: ClustererOptions = {}\n  ) {\n    this.extend(Clusterer, google.maps.OverlayView)\n\n    this.markers = []\n    this.clusters = []\n    this.listeners = []\n    this.activeMap = null\n    this.ready = false\n    this.gridSize = optOptions.gridSize || 60\n    this.minClusterSize = optOptions.minimumClusterSize || 2\n    this.maxZoom = optOptions.maxZoom || null\n    this.styles = optOptions.styles || []\n\n    this.title = optOptions.title || \"\"\n\n    this.zoomOnClick = true\n\n    if (optOptions.zoomOnClick !== undefined) {\n\n      this.zoomOnClick = optOptions.zoomOnClick\n    }\n\n    this.averageCenter = false\n\n    if (optOptions.averageCenter !== undefined) {\n\n      this.averageCenter = optOptions.averageCenter\n    }\n\n    this.ignoreHidden = false\n\n    if (optOptions.ignoreHidden !== undefined) {\n\n      this.ignoreHidden = optOptions.ignoreHidden\n    }\n\n    this.enableRetinaIcons = false\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\n\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\n\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\n\n    this.calculator = optOptions.calculator || CALCULATOR\n\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\n\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\n\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\n\n    if (navigator.userAgent.toLowerCase().indexOf(\"msie\") !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE\n    }\n\n    this.timerRefStatic = null\n\n    this.setupStyles()\n\n    this.addMarkers(optMarkers, true)\n    // @ts-ignore\n    this.setMap(map) // Note: this causes onAdd to be called\n  }\n\n  onAdd () {\n    // @ts-ignore\n    this.activeMap = this.getMap()\n\n    this.ready = true\n\n    this.repaint()\n\n    // Add the map event listeners\n    this.listeners = [\n      google.maps.event.addListener(\n        // @ts-ignore\n        this.getMap(),\n        \"zoom_changed\",\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.resetViewport(false)\n          // Workaround for this Google bug: when map is at level 0 and \"-\" of\n          // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n          // the map doesn't zoom out any further. In this situation, no \"idle\"\n          // event is triggered so the cluster markers that have been removed\n          // do not get redrawn. Same goes for a zoom in at maxZoom.\n          if (\n            // @ts-ignore\n            this.getMap().getZoom() === (this.get(\"minZoom\") || 0) ||\n            // @ts-ignore\n            this.getMap().getZoom() === this.get(\"maxZoom\")\n          ) {\n            google.maps.event.trigger(this, \"idle\")\n          }\n        }\n      ),\n      google.maps.event.addListener(\n        // @ts-ignore\n        this.getMap(),\n        \"idle\",\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.redraw()\n        }\n      )\n    ]\n  }\n\n  // eslint-disable-next-line @getify/proper-arrows/this\n  onRemove () {\n    // Put all the managed markers back on the map:\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap)\n      }\n    }\n\n    // Remove all clusters:\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Remove map event listeners:\n    for (let i = 0; i < this.listeners.length; i++) {\n      google.maps.event.removeListener(this.listeners[i])\n    }\n\n    this.listeners = []\n\n    this.activeMap = null\n\n    this.ready = false\n  }\n\n  draw () {}\n\n  setupStyles() {\n    if (this.styles.length > 0) {\n      return\n    }\n\n    for (let i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + \".\" + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i]\n      })\n    }\n  }\n\n  fitMapToMarkers () {\n    const markers = this.getMarkers()\n\n    const bounds = new google.maps.LatLngBounds()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    // @ts-ignore\n    this.getMap().fitBounds(bounds)\n  }\n\n  getGridSize (): number {\n    return this.gridSize\n  }\n\n  setGridSize (gridSize: number) {\n    this.gridSize = gridSize\n  }\n\n  getMinimumClusterSize (): number {\n    return this.minClusterSize\n  }\n\n  setMinimumClusterSize (minimumClusterSize: number) {\n    this.minClusterSize = minimumClusterSize\n  }\n\n  getMaxZoom (): number | null {\n    return this.maxZoom\n  }\n\n  setMaxZoom (maxZoom: number) {\n    this.maxZoom = maxZoom\n  }\n\n  getStyles (): ClusterIconStyle[] {\n    return this.styles\n  }\n\n  setStyles (styles: ClusterIconStyle[]) {\n    this.styles = styles\n  }\n\n  getTitle (): string {\n    return this.title\n  }\n\n  setTitle (title: string) {\n    this.title = title\n  }\n\n  getZoomOnClick (): boolean {\n    return this.zoomOnClick\n  }\n\n  setZoomOnClick (zoomOnClick: boolean) {\n    this.zoomOnClick = zoomOnClick\n  }\n\n  getAverageCenter (): boolean {\n    return this.averageCenter\n  }\n\n  setAverageCenter(averageCenter: boolean) {\n    this.averageCenter = averageCenter\n  }\n\n  getIgnoreHidden(): boolean {\n    return this.ignoreHidden\n  }\n\n  setIgnoreHidden(ignoreHidden: boolean) {\n    this.ignoreHidden = ignoreHidden\n  }\n\n  getEnableRetinaIcons(): boolean {\n    return this.enableRetinaIcons\n  }\n\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\n    this.enableRetinaIcons = enableRetinaIcons\n  }\n\n  getImageExtension(): string {\n    return this.imageExtension\n  }\n\n  setImageExtension(imageExtension: string) {\n    this.imageExtension = imageExtension\n  }\n\n  getImagePath(): string {\n    return this.imagePath\n  }\n\n  setImagePath(imagePath: string) {\n    this.imagePath = imagePath\n  }\n\n  getImageSizes(): number[] {\n    return this.imageSizes\n  }\n\n  setImageSizes(imageSizes: number[]) {\n    this.imageSizes = imageSizes\n  }\n\n  getCalculator(): TCalculator {\n    return this.calculator\n  }\n\n  setCalculator(calculator: TCalculator) {\n    this.calculator = calculator\n  }\n\n  getBatchSizeIE(): number {\n    return this.batchSizeIE\n  }\n\n  setBatchSizeIE(batchSizeIE: number) {\n    this.batchSizeIE = batchSizeIE\n  }\n\n  getClusterClass(): string {\n    return this.clusterClass\n  }\n\n  setClusterClass(clusterClass: string) {\n    this.clusterClass = clusterClass\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getTotalMarkers(): number {\n    return this.markers.length\n  }\n\n  getClusters(): Cluster[] {\n    return this.clusters\n  }\n\n  getTotalClusters(): number {\n    return this.clusters.length\n  }\n\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\n    this.pushMarkerTo(marker)\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\n    for (let key in markers) {\n      if (markers.hasOwnProperty(key)) {\n        this.pushMarkerTo(markers[key])\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  pushMarkerTo(marker: MarkerExtended) {\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      // eslint-disable-next-line @getify/proper-arrows/name, @getify/proper-arrows/this\n      google.maps.event.addListener(marker, \"dragend\", () => {\n        if (this.ready) {\n          marker.isAdded = false\n\n          this.repaint()\n        }\n      })\n    }\n\n    marker.isAdded = false\n\n    this.markers.push(marker)\n  }\n\n  removeMarker_ (marker: MarkerExtended): boolean {\n    let index = -1\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i\n\n          break\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false\n    }\n\n    marker.setMap(null)\n\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\n\n    return true\n  }\n\n  removeMarker (marker: MarkerExtended, optNoDraw: boolean): boolean {\n    const removed = this.removeMarker_(marker)\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  removeMarkers (markers: MarkerExtended[], optNoDraw: boolean): boolean {\n    let removed = false\n\n    for (let i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i])\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  clearMarkers () {\n    this.resetViewport(true)\n\n    this.markers = []\n  }\n\n  repaint () {\n    const oldClusters = this.clusters.slice()\n\n    this.clusters = []\n\n    this.resetViewport(false)\n\n    this.redraw()\n\n    // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n    setTimeout(\n      function timeout() {\n        for (let i = 0; i < oldClusters.length; i++) {\n          oldClusters[i].remove()\n        }\n      },\n      0\n    )\n  }\n\n  getExtendedBounds (bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\n    // @ts-ignore\n    const projection = this.getProjection()\n    // Convert the points to pixels and the extend out by the grid size.\n    const trPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(\n        bounds.getNorthEast().lat(),\n        bounds.getNorthEast().lng()\n      )\n    )\n\n    trPix.x += this.gridSize\n    trPix.y -= this.gridSize\n\n    const blPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(\n        bounds.getSouthWest().lat(),\n        bounds.getSouthWest().lng()\n      )\n    )\n\n    blPix.x -= this.gridSize\n    blPix.y += this.gridSize\n\n    // Extend the bounds to contain the new bounds.\n    bounds.extend(\n      // Convert the pixel points back to LatLng nw\n      projection.fromDivPixelToLatLng(trPix)\n    )\n\n    bounds.extend(\n      // Convert the pixel points back to LatLng sw\n      projection.fromDivPixelToLatLng(blPix)\n    )\n\n    return bounds\n  }\n\n  redraw () {\n    // Redraws all the clusters.\n    this.createClusters(0)\n  }\n\n  resetViewport (optHide: boolean) {\n    // Remove all the clusters\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Reset the markers to not be added and to be removed from the map.\n    for (let i = 0; i < this.markers.length; i++) {\n      const marker = this.markers[i]\n\n      marker.isAdded = false\n\n      if (optHide) {\n        marker.setMap(null)\n      }\n    }\n  }\n\n  distanceBetweenPoints (p1: google.maps.LatLng, p2: google.maps.LatLng): number {\n    const R = 6371 // Radius of the Earth in km\n\n    const dLat = (p2.lat() - p1.lat()) * Math.PI / 180\n    const dLon = (p2.lng() - p1.lng()) * Math.PI / 180\n\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2)\n\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\n  }\n\n  isMarkerInBounds (marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\n    const position = marker.getPosition()\n\n    if (position) {\n      return bounds.contains(position)\n    }\n\n    return false\n  }\n\n  addToClosestCluster (marker: MarkerExtended) {\n    let cluster\n\n    let distance = 40000 // Some large number\n\n    let clusterToAddTo = null\n\n    for (let i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i]\n\n      const center = cluster.getCenter()\n\n      const position = marker.getPosition()\n\n      if (center && position) {\n        const d = this.distanceBetweenPoints(center, position)\n\n        if (d < distance) {\n          distance = d\n\n          clusterToAddTo = cluster\n        }\n      }\n    }\n\n    if (\n      clusterToAddTo &&\n      clusterToAddTo.isMarkerInClusterBounds(marker)\n    ) {\n      clusterToAddTo.addMarker(marker)\n    } else {\n      cluster = new Cluster(this)\n\n      cluster.addMarker(marker)\n\n      this.clusters.push(cluster)\n    }\n  }\n\n  createClusters (iFirst: number) {\n    if (!this.ready) {\n      return\n    }\n\n    // Cancel previous batch processing if we're working on the first batch:\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, \"clusteringbegin\", this)\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic)\n\n        delete this.timerRefStatic\n      }\n    }\n\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n    // @ts-ignore\n    const mapBounds = this.getMap().getZoom() > 3\n      ? new google.maps.LatLngBounds(\n        // @ts-ignore\n        this.getMap().getBounds().getSouthWest(),\n        // @ts-ignore\n        this.getMap().getBounds().getNorthEast()\n      )\n      : new google.maps.LatLngBounds(\n        new google.maps.LatLng(\n          85.02070771743472,\n          -178.48388434375\n        ),\n        new google.maps.LatLng(\n          -85.08136444384544,\n          178.00048865625\n        )\n      )\n\n    const bounds = this.getExtendedBounds(mapBounds)\n\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\n\n    for (let i = iFirst; i < iLast; i++) {\n      const marker = this.markers[i]\n\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds)) {\n        if (\n          !this.ignoreHidden ||\n          (\n            this.ignoreHidden &&\n            marker.getVisible()\n          )\n        ) {\n          this.addToClosestCluster(marker)\n        }\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n        // eslint-disable-next-line @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.createClusters(iLast)\n        },\n        0\n      )\n    } else {\n      this.timerRefStatic = null\n\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, \"clusteringend\", this)\n    }\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return (function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (let property in object.prototype) {\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property]\n      }\n\n      // @ts-ignore\n      return this\n    }).apply(obj1, [obj2])\n  }\n}\n"]},"metadata":{},"sourceType":"module"}