{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\nimport React, { useState } from \"react\";\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  const [message, setMessage] = useState({\n    message: \"\"\n  });\n  const [modelResponse, setModelResponse] = useState({\n    model_response: \"\"\n  });\n  const [percentileResponse, setPercentileResponse] = useState();\n  React.useEffect(() => {\n    if (parseInt(props.timeDayMonth) === 0) {\n      // initial render should be nothing.\n      return undefined;\n    } else axios.get(`/api/model_result`, {\n      params: {\n        chosenTime: props.timeDayMonth[0],\n        chosenDay: props.timeDayMonth[1],\n        chosenMonth: props.timeDayMonth[2]\n      }\n    }).then(res => {\n      const modelResponse = res.data;\n      setModelResponse(modelResponse);\n      console.log(\"setModelResponse has been triggered with the following values: \", props.timeDayMonth[0], props.timeDayMonth[1], props.timeDayMonth[2]);\n    });\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  [props]);\n  React.useEffect(() => {\n    console.log(\"loo!\", props.originNumber); // while (props.originNumber)\n\n    if (parseInt(props.timeDayMonth) === 0) {\n      // initial render should be nothing.\n      return undefined;\n    } else axios.get(`/api/percentile_result`, {\n      params: {\n        chosenTime: props.timeDayMonth[0],\n        chosenDay: props.timeDayMonth[1],\n        // chosenMonth: props.timeDayMonth[2],\n        origin: props.originNumber,\n        destination: props.destinationNumber,\n        modelResponse: modelResponse.model_response\n      }\n    }).then(res => {\n      const percentileResponse = res.data;\n      setPercentileResponse(percentileResponse);\n\n      if (parseInt(percentileResponse.percentile_response) < 0) {\n        setMessage({\n          message: \"Please enter a correct combination of stops\"\n        });\n      } else {\n        setMessage({\n          message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minutes\"\n        });\n      }\n\n      console.log(\"setPercentileResponse has been triggered with the following values: \", props.timeDayMonth[0], props.timeDayMonth[1], props.originNumber, props.destinationNumber, modelResponse.model_response);\n    });\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, message.message));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","useState","axios","require","ModelApi","props","message","setMessage","modelResponse","setModelResponse","model_response","percentileResponse","setPercentileResponse","useEffect","parseInt","timeDayMonth","undefined","get","params","chosenTime","chosenDay","chosenMonth","then","res","data","console","log","originNumber","origin","destination","destinationNumber","percentile_response"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  const [message, setMessage] = useState({ message: \"\" });\n  const [modelResponse, setModelResponse] = useState({ model_response: \"\" });\n  const [percentileResponse, setPercentileResponse] = useState();\n\n  React.useEffect(\n    () => {\n      if (parseInt(props.timeDayMonth) === 0) {\n        // initial render should be nothing.\n        return undefined;\n      } else\n        axios\n          .get(`/api/model_result`, {\n            params: {\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              chosenMonth: props.timeDayMonth[2],\n            },\n          })\n          .then((res) => {\n            const modelResponse = res.data;\n            setModelResponse(modelResponse);\n\n            console.log(\n              \"setModelResponse has been triggered with the following values: \",\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.timeDayMonth[2]\n            );\n          });\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    [props]\n  );\n\n  React.useEffect(\n    () => {\n      console.log(\"loo!\", props.originNumber);\n      // while (props.originNumber)\n      if (parseInt(props.timeDayMonth) === 0) {\n        // initial render should be nothing.\n        return undefined;\n      } else\n        axios\n          .get(`/api/percentile_result`, {\n            params: {\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              // chosenMonth: props.timeDayMonth[2],\n              origin: props.originNumber,\n              destination: props.destinationNumber,\n              modelResponse: modelResponse.model_response,\n            },\n          })\n          .then((res) => {\n            const percentileResponse = res.data;\n            setPercentileResponse(percentileResponse);\n            if (parseInt(percentileResponse.percentile_response) < 0) {\n              setMessage({\n                message: \"Please enter a correct combination of stops\",\n              });\n            } else {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minutes\",\n              });\n            }\n\n            console.log(\n              \"setPercentileResponse has been triggered with the following values: \",\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.originNumber,\n              props.destinationNumber,\n              modelResponse.model_response\n            );\n          });\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    [props]\n  );\n\n  return (\n    <div>\n      <p>{message.message}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}