{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\n// Importing outside developed components.\nimport React, { useState } from \"react\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({\n    message: \"\"\n  });\n  const [modelResponse, setModelResponse] = useState({\n    model_response: \"\"\n  }); // eslint-disable-next-line\n\n  const [percentileResponse, setPercentileResponse] = useState(); // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n\n  const lock = \"LOCK\";\n  console.log(\"Here is directionSelect in ModelApi\", props.directionSelect); // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n  React.useEffect(() => {\n    if (String(props.routeSelect) === \"\" || props.directionSelect === undefined) {\n      console.log(\"ModelApi undefined ONE has been triggered\"); // initial render should be nothing.\n\n      return undefined;\n    } else {\n      if (props.routeSelect !== \"46A\") {\n        console.log(\"ModelApi undefined TWO has been triggered\");\n        setModelResponse({\n          model_response: \"\"\n        });\n      } else {\n        console.log(\"ModelApi has been fucking triggered\");\n        console.log(\"And here is what it has been cunting triggered with: 1 routeSelect: \", props.routeSelect, \"2: directionSelect\", props.directionSelect);\n        axios.get(`/api/model_result`, {\n          params: {\n            chosenRoute: props.routeSelect,\n            chosenDirection: props.directionSelect,\n            chosenTime: props.timeDayMonth[0],\n            chosenDay: props.timeDayMonth[1],\n            chosenMonth: props.timeDayMonth[2]\n          }\n        }).then(res => {\n          const modelResponse = res.data;\n          setModelResponse(modelResponse);\n          console.log(\"setModelResponse has been triggered with the following values: \", props.routeSelect, props.directionSelect, props.timeDayMonth[0], props.timeDayMonth[1], props.timeDayMonth[2]);\n        });\n      }\n    }\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  [props.routeSelect, props.directionSelect]);\n  React.useEffect(() => {\n    // Making sure nothing is renedered until stops have been chosen.\n    if (props.directionSelect === undefined || String(modelResponse.model_response) === \"\" || props.destinationNumber === 0) {\n      // initial render should be nothing.\n      return undefined;\n    } else {\n      console.log(\"And here is what it has been cunting triggered with: 1 directionSelect: \", props.directionSelect, \"2: modelResponse.model_response\", modelResponse.model_response);\n      axios.get(`/api/percentile_result`, {\n        params: {\n          chosenRoute: props.routeSelect,\n          chosenDirection: props.directionSelect,\n          chosenTime: props.timeDayMonth[0],\n          chosenDay: props.timeDayMonth[1],\n          // chosenMonth: props.timeDayMonth[2],\n          origin: props.originNumber,\n          destination: props.destinationNumber,\n          modelResponse: modelResponse.model_response\n        }\n      }).then(res => {\n        const percentileResponse = res.data;\n        setPercentileResponse(percentileResponse);\n\n        if (parseInt(percentileResponse.percentile_response) < 0) {\n          setMessage({\n            message: \"Please enter a correct combination of stops\"\n          });\n        } else if (parseInt(percentileResponse.percentile_response) === 1) {\n          setMessage({\n            message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minute.\"\n          });\n        } else {\n          setMessage({\n            message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minutes.\"\n          });\n        }\n\n        console.log(\"setPercentileResponse has been triggered with the following values: \", props.timeDayMonth[0], props.timeDayMonth[1], props.originNumber, props.destinationNumber, modelResponse.model_response);\n      });\n    }\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  // eslint-disable-next-line\n  [props, modelResponse.model_response] // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n  // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, message.message));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","useState","axios","require","ModelApi","props","message","setMessage","modelResponse","setModelResponse","model_response","percentileResponse","setPercentileResponse","lock","console","log","directionSelect","useEffect","String","routeSelect","undefined","get","params","chosenRoute","chosenDirection","chosenTime","timeDayMonth","chosenDay","chosenMonth","then","res","data","destinationNumber","origin","originNumber","destination","parseInt","percentile_response"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({ message: \"\" });\n  const [modelResponse, setModelResponse] = useState({ model_response: \"\" });\n  // eslint-disable-next-line\n  const [percentileResponse, setPercentileResponse] = useState();\n  // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n  const lock = \"LOCK\";\n  console.log(\"Here is directionSelect in ModelApi\", props.directionSelect);\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (\n        String(props.routeSelect) === \"\" ||\n        props.directionSelect === undefined\n      ) {\n        console.log(\"ModelApi undefined ONE has been triggered\");\n        // initial render should be nothing.\n        return undefined;\n      } else {\n        if (props.routeSelect !== \"46A\") {\n          console.log(\"ModelApi undefined TWO has been triggered\");\n          setModelResponse({ model_response: \"\" });\n        } else {\n          console.log(\"ModelApi has been fucking triggered\");\n          console.log(\n            \"And here is what it has been cunting triggered with: 1 routeSelect: \",\n            props.routeSelect,\n            \"2: directionSelect\",\n            props.directionSelect\n          );\n          axios\n            .get(`/api/model_result`, {\n              params: {\n                chosenRoute: props.routeSelect,\n                chosenDirection: props.directionSelect,\n                chosenTime: props.timeDayMonth[0],\n                chosenDay: props.timeDayMonth[1],\n                chosenMonth: props.timeDayMonth[2],\n              },\n            })\n            .then((res) => {\n              const modelResponse = res.data;\n              setModelResponse(modelResponse);\n\n              console.log(\n                \"setModelResponse has been triggered with the following values: \",\n                props.routeSelect,\n                props.directionSelect,\n                props.timeDayMonth[0],\n                props.timeDayMonth[1],\n                props.timeDayMonth[2]\n              );\n            });\n        }\n      }\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    [props.routeSelect, props.directionSelect]\n  );\n\n  React.useEffect(\n    () => {\n      // Making sure nothing is renedered until stops have been chosen.\n      if (\n        props.directionSelect === undefined ||\n        String(modelResponse.model_response) === \"\" ||\n        props.destinationNumber === 0\n      ) {\n        // initial render should be nothing.\n        return undefined;\n      } else {\n        console.log(\n          \"And here is what it has been cunting triggered with: 1 directionSelect: \",\n          props.directionSelect,\n          \"2: modelResponse.model_response\",\n          modelResponse.model_response\n        );\n        axios\n          .get(`/api/percentile_result`, {\n            params: {\n              chosenRoute: props.routeSelect,\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              // chosenMonth: props.timeDayMonth[2],\n              origin: props.originNumber,\n              destination: props.destinationNumber,\n              modelResponse: modelResponse.model_response,\n            },\n          })\n          .then((res) => {\n            const percentileResponse = res.data;\n            setPercentileResponse(percentileResponse);\n            if (parseInt(percentileResponse.percentile_response) < 0) {\n              setMessage({\n                message: \"Please enter a correct combination of stops\",\n              });\n            } else if (parseInt(percentileResponse.percentile_response) === 1) {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minute.\",\n              });\n            } else {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minutes.\",\n              });\n            }\n\n            console.log(\n              \"setPercentileResponse has been triggered with the following values: \",\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.originNumber,\n              props.destinationNumber,\n              modelResponse.model_response\n            );\n          });\n      }\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    // eslint-disable-next-line\n    [props, modelResponse.model_response]\n    // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n    // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n\n  return (\n    <div>\n      <p>{message.message}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}