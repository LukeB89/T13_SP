{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\n// Importing outside developed components.\nimport React, { useState } from \"react\"; // Promise based HTTP client - https://github.com/axios/axios.\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({\n    message: \"\"\n  });\n  const [modelResponse, setModelResponse] = useState({\n    model_response: \"\"\n  });\n  const lock = \"Lock\"; // eslint-disable-next-line\n\n  const [percentileResponse, setPercentileResponse] = useState(); // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n\n  React.useEffect(() => {\n    if (String(props.routeSelect) === \"\" || props.directionSelect === NaN) {\n      console.log(\"ModelApi should not be running now\");\n      console.log(\"routeSelect here, \", props.routeSelect);\n      console.log(\"directionSelect here, \", props.directionSelect); // initial render should be nothing.\n\n      return undefined;\n    } else if (String(props.routeSelect) !== \"46A\") {\n      console.log(\"ModelApi should still not be running now\");\n      return undefined;\n    } else {\n      // console.log(\"dut\");\n      if (props.directionSelect === 3) {\n        setModelResponse({\n          model_response: \"\"\n        });\n      } else {\n        axios.get(`/api/model_result`, {\n          params: {\n            chosenRoute: props.routeSelect,\n            chosenDirection: props.directionSelect,\n            chosenTime: props.timeDayMonth[0],\n            chosenDay: props.timeDayMonth[1],\n            chosenMonth: props.timeDayMonth[2]\n          }\n        }).then(res => {\n          const modelResponse = res.data;\n          setModelResponse(modelResponse);\n          console.log(\"setModelResponse has been triggered with the following values: \", props.routeSelect, props.directionSelect, props.timeDayMonth[0], props.timeDayMonth[1], props.timeDayMonth[2]);\n        });\n      }\n    }\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  [props]);\n  React.useEffect(() => {\n    // Making sure nothing is renedered until stops have been chosen.\n    if (parseInt(props.originNumber) === 0 || parseInt(props.destinationNumber) === 0) {\n      // initial render should be nothing.\n      return undefined;\n    } else axios.get(`/api/percentile_result`, {\n      params: {\n        chosenRoute: props.routeSelect,\n        chosenDirection: props.directionSelect,\n        chosenTime: props.timeDayMonth[0],\n        chosenDay: props.timeDayMonth[1],\n        // chosenMonth: props.timeDayMonth[2],\n        origin: props.originNumber,\n        destination: props.destinationNumber,\n        modelResponse: modelResponse.model_response\n      }\n    }).then(res => {\n      const percentileResponse = res.data;\n      setPercentileResponse(percentileResponse);\n\n      if (parseInt(percentileResponse.percentile_response) < 0) {\n        setMessage({\n          message: \"Please enter a correct combination of stops\"\n        });\n      } else if (parseInt(percentileResponse.percentile_response) === 1) {\n        setMessage({\n          message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minute.\"\n        });\n      } else {\n        setMessage({\n          message: \"This journey is estimated to take \" + percentileResponse.percentile_response + \" minutes.\"\n        });\n      }\n\n      console.log(\"setPercentileResponse has been triggered with the following values: \", props.timeDayMonth[0], props.timeDayMonth[1], props.originNumber, props.destinationNumber, modelResponse.model_response);\n    });\n  }, // Listening for changes to props in order to\n  // trigger a call to the API  to re-render the component.\n  // eslint-disable-next-line\n  [props] // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n  // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, message.message));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","useState","axios","require","ModelApi","props","message","setMessage","modelResponse","setModelResponse","model_response","lock","percentileResponse","setPercentileResponse","useEffect","String","routeSelect","directionSelect","NaN","console","log","undefined","get","params","chosenRoute","chosenDirection","chosenTime","timeDayMonth","chosenDay","chosenMonth","then","res","data","parseInt","originNumber","destinationNumber","origin","destination","percentile_response"],"mappings":"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","sourcesContent":["// Importing outside developed components.\nimport React, { useState } from \"react\";\n// Promise based HTTP client - https://github.com/axios/axios.\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  // The responses from the backend we need to track in state:\n  const [message, setMessage] = useState({ message: \"\" });\n  const [modelResponse, setModelResponse] = useState({ model_response: \"\" });\n  const lock = \"Lock\";\n  // eslint-disable-next-line\n  const [percentileResponse, setPercentileResponse] = useState();\n  // console.log(\"ModelApi - routeSelect here: \", props.routeSelect);\n\n  // The Effect Hook used to perform side effects in this component.\n  // https://reactjs.org/docs/hooks-effect.html.\n  React.useEffect(\n    () => {\n      if (String(props.routeSelect) === \"\" || props.directionSelect === NaN) {\n        console.log(\"ModelApi should not be running now\");\n        console.log(\"routeSelect here, \", props.routeSelect);\n        console.log(\"directionSelect here, \", props.directionSelect);\n        // initial render should be nothing.\n        return undefined;\n      } else if (String(props.routeSelect) !== \"46A\") {\n        console.log(\"ModelApi should still not be running now\");\n        return undefined;\n      } else {\n        // console.log(\"dut\");\n        if (props.directionSelect === 3) {\n          setModelResponse({ model_response: \"\" });\n        } else {\n          axios\n            .get(`/api/model_result`, {\n              params: {\n                chosenRoute: props.routeSelect,\n                chosenDirection: props.directionSelect,\n                chosenTime: props.timeDayMonth[0],\n                chosenDay: props.timeDayMonth[1],\n                chosenMonth: props.timeDayMonth[2],\n              },\n            })\n            .then((res) => {\n              const modelResponse = res.data;\n              setModelResponse(modelResponse);\n\n              console.log(\n                \"setModelResponse has been triggered with the following values: \",\n                props.routeSelect,\n                props.directionSelect,\n                props.timeDayMonth[0],\n                props.timeDayMonth[1],\n                props.timeDayMonth[2]\n              );\n            });\n        }\n      }\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    [props]\n  );\n\n  React.useEffect(\n    () => {\n      // Making sure nothing is renedered until stops have been chosen.\n      if (\n        parseInt(props.originNumber) === 0 ||\n        parseInt(props.destinationNumber) === 0\n      ) {\n        // initial render should be nothing.\n        return undefined;\n      } else\n        axios\n          .get(`/api/percentile_result`, {\n            params: {\n              chosenRoute: props.routeSelect,\n              chosenDirection: props.directionSelect,\n              chosenTime: props.timeDayMonth[0],\n              chosenDay: props.timeDayMonth[1],\n              // chosenMonth: props.timeDayMonth[2],\n              origin: props.originNumber,\n              destination: props.destinationNumber,\n              modelResponse: modelResponse.model_response,\n            },\n          })\n          .then((res) => {\n            const percentileResponse = res.data;\n            setPercentileResponse(percentileResponse);\n            if (parseInt(percentileResponse.percentile_response) < 0) {\n              setMessage({\n                message: \"Please enter a correct combination of stops\",\n              });\n            } else if (parseInt(percentileResponse.percentile_response) === 1) {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minute.\",\n              });\n            } else {\n              setMessage({\n                message:\n                  \"This journey is estimated to take \" +\n                  percentileResponse.percentile_response +\n                  \" minutes.\",\n              });\n            }\n\n            console.log(\n              \"setPercentileResponse has been triggered with the following values: \",\n              props.timeDayMonth[0],\n              props.timeDayMonth[1],\n              props.originNumber,\n              props.destinationNumber,\n              modelResponse.model_response\n            );\n          });\n    },\n    // Listening for changes to props in order to\n    // trigger a call to the API  to re-render the component.\n    // eslint-disable-next-line\n    [props]\n    // // React Hook React.useEffect has a missing dependency: 'modelResponse.model_response'. Either include it or remove the dependency array.\n    // TODO - Receiving the above error, find a fix - have disabled with eslint disable next line for now.\n  );\n\n  return (\n    <div>\n      <p>{message.message}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}