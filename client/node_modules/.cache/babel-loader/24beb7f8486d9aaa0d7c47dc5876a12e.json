{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ZipForm.js\";\nimport React from \"react\";\nimport { Typeahead } from \"react-bootstrap-typeahead\"; // Importing the Dublin Bus API stops data\n\nimport * as data from \"../data/db-small.json\"; // Parsing the Stops data into various object shapes.\n\nconst rawData = data.results;\nconst myStops = rawData.map(stop => ({\n  description: \"Stop \" + stop.stopid + \", \" + stop.fullname,\n  type: \"Feature\",\n  properties: {\n    id: stop.stopid,\n    fullname: stop.fullname,\n    routes: stop.operators[0].routes\n  },\n  geometry: {\n    type: \"Point\",\n    pos: {\n      lat: parseFloat(stop.latitude),\n      lng: parseFloat(stop.longitude)\n    }\n  }\n}));\nconst parsedStops = myStops.map(parsed => ({\n  description: parsed.description,\n  geometry: parsed.geometry.pos\n})); // An array that contains only the names of all the stops.\n\nconst stopDescriptions = [];\n\nfor (var i = 0; i < parsedStops.length; i++) {\n  stopDescriptions.push(parsedStops[i].description);\n}\n\nclass ZipForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zipcode: \"\"\n    };\n    this.inputUpdated = this.inputUpdated.bind(this);\n    this.submitZipCode = this.submitZipCode.bind(this);\n  }\n\n  submitZipCode(e) {\n    e.preventDefault();\n    const {\n      zipcode\n    } = this.state;\n    const {\n      onSubmit\n    } = this.props;\n    onSubmit(zipcode);\n  }\n\n  inputUpdated(e) {\n    const {\n      value\n    } = e.target;\n    this.setState({\n      zipcode: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"zip-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitZipCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typeahead, {\n      id: \"zipcode\",\n      options: stopDescriptions,\n      maxVisible: 2,\n      placeholder: \"Choose a stop...\",\n      onChange: address => {\n        try {\n          for (var i = 0; i < parsedStops.length; i++) {\n            if (address == parsedStops[i].description) {\n              const lat = parsedStops[i].geometry.lat,\n                    lng = parsedStops[i].geometry.lng;\n            }\n          }\n        } catch (error) {\n          console.log(\"error\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitZipCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlForm: \"zipcode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), \"Zip Code\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"input\",\n      name: \"zipcode\",\n      value: this.state.zipcode,\n      onInput: this.inputUpdated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Go fuck yourself!\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitZipCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlForm: \"zipcode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), \"Zip Code\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"input\",\n      name: \"zipcode\",\n      value: this.state.zipcode,\n      onInput: this.inputUpdated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Go fuck yourself!\")));\n  }\n\n}\n\nexport default ZipForm;","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ZipForm.js"],"names":["React","Typeahead","data","rawData","results","myStops","map","stop","description","stopid","fullname","type","properties","id","routes","operators","geometry","pos","lat","parseFloat","latitude","lng","longitude","parsedStops","parsed","stopDescriptions","i","length","push","ZipForm","Component","constructor","props","state","zipcode","inputUpdated","bind","submitZipCode","e","preventDefault","onSubmit","value","target","setState","render","address","error","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n// Importing the Dublin Bus API stops data\nimport * as data from \"../data/db-small.json\";\n\n// Parsing the Stops data into various object shapes.\nconst rawData = data.results;\nconst myStops = rawData.map((stop) => ({\n  description: \"Stop \" + stop.stopid + \", \" + stop.fullname,\n  type: \"Feature\",\n  properties: {\n    id: stop.stopid,\n    fullname: stop.fullname,\n    routes: stop.operators[0].routes,\n  },\n  geometry: {\n    type: \"Point\",\n    pos: {\n      lat: parseFloat(stop.latitude),\n      lng: parseFloat(stop.longitude),\n    },\n  },\n}));\nconst parsedStops = myStops.map((parsed) => ({\n  description: parsed.description,\n  geometry: parsed.geometry.pos,\n}));\n// An array that contains only the names of all the stops.\nconst stopDescriptions = [];\nfor (var i = 0; i < parsedStops.length; i++) {\n  stopDescriptions.push(parsedStops[i].description);\n}\n\nclass ZipForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      zipcode: \"\",\n    };\n\n    this.inputUpdated = this.inputUpdated.bind(this);\n    this.submitZipCode = this.submitZipCode.bind(this);\n  }\n\n  submitZipCode(e) {\n    e.preventDefault();\n\n    const { zipcode } = this.state;\n    const { onSubmit } = this.props;\n\n    onSubmit(zipcode);\n  }\n\n  inputUpdated(e) {\n    const { value } = e.target;\n\n    this.setState({ zipcode: value });\n  }\n\n  render() {\n    return (\n      <div className=\"zip-form\">\n        <form onSubmit={this.submitZipCode}>\n          <Typeahead\n            id=\"zipcode\"\n            options={stopDescriptions}\n            maxVisible={2}\n            placeholder=\"Choose a stop...\"\n            onChange={(address) => {\n              try {\n                for (var i = 0; i < parsedStops.length; i++) {\n                  if (address == parsedStops[i].description) {\n                    const lat = parsedStops[i].geometry.lat,\n                      lng = parsedStops[i].geometry.lng;\n                  }\n                }\n              } catch (error) {\n                console.log(\"error\");\n              }\n            }}\n          />\n        </form>\n\n        <form onSubmit={this.submitZipCode}>\n          <label htmlForm=\"zipcode\"></label>\n          Zip Code\n          <input\n            className=\"form-control\"\n            type=\"input\"\n            name=\"zipcode\"\n            value={this.state.zipcode}\n            onInput={this.inputUpdated}\n          />\n          <button type=\"submit\" className=\"btn btn-success\">\n            Go fuck yourself!\n          </button>\n        </form>\n\n        <form onSubmit={this.submitZipCode}>\n          <label htmlForm=\"zipcode\"></label>\n          Zip Code\n          <input\n            className=\"form-control\"\n            type=\"input\"\n            name=\"zipcode\"\n            value={this.state.zipcode}\n            onInput={this.inputUpdated}\n          />\n          <button type=\"submit\" className=\"btn btn-success\">\n            Go fuck yourself!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ZipForm;\n"]},"metadata":{},"sourceType":"module"}