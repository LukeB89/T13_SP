{"ast":null,"code":"var _jsxFileName = \"/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js\";\nimport React from \"react\";\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  const [data, setData] = useState({\n    hits: []\n  });\n  const [modelResponse, setModelResponse] = React.useState([]);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get(`/api/model_result`, {\n        params: {\n          chosenTime: parseInt(props.timeDayMonth[0]),\n          chosenDay: props.timeDayMonth[1],\n          chosenMonth: props.timeDayMonth[2]\n        }\n      }).then(res => {\n        const modelResponse = res.data;\n        setModelResponse(modelResponse);\n        console.log(\"setModelResponse has been triggered\");\n      });\n      setData(result.data);\n    };\n\n    fetchData();\n  }, [url]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"This journey is estimated to take \", modelResponse.model_response, \" minutes\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, count++, \" times clicked\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: forceUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Refresh\"));\n}","map":{"version":3,"sources":["/Users/evanbyrnes/Pycharm-python-workspace/T13_SP/client/src/components/ModelApi.js"],"names":["React","axios","require","ModelApi","props","data","setData","useState","hits","modelResponse","setModelResponse","useEffect","fetchData","result","get","params","chosenTime","parseInt","timeDayMonth","chosenDay","chosenMonth","then","res","console","log","url","model_response","count","forceUpdate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1C;AAEAP,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMZ,KAAK,CACvBa,GADkB,CACb,mBADa,EACO;AACxBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,UAAU,EAAEC,QAAQ,CAACb,KAAK,CAACc,YAAN,CAAmB,CAAnB,CAAD,CADd;AAENC,UAAAA,SAAS,EAAEf,KAAK,CAACc,YAAN,CAAmB,CAAnB,CAFL;AAGNE,UAAAA,WAAW,EAAEhB,KAAK,CAACc,YAAN,CAAmB,CAAnB;AAHP;AADgB,OADP,EAQlBG,IARkB,CAQZC,GAAD,IAAS;AACb,cAAMb,aAAa,GAAGa,GAAG,CAACjB,IAA1B;AACAK,QAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,OAZkB,CAArB;AAcAlB,MAAAA,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP;AACD,KAhBD;;AAkBAO,IAAAA,SAAS;AACV,GApBD,EAoBG,CAACa,GAAD,CApBH;AAsBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACqChB,aAAa,CAACiB,cADnD,aADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAK,EAAV,mBAJF,eAKE;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF;AASD","sourcesContent":["import React from \"react\";\n\nconst axios = require(\"axios\");\n\nexport default function ModelApi(props) {\n  const [data, setData] = useState({ hits: [] });\n  const [modelResponse, setModelResponse] = React.useState([]);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios\n        .get(`/api/model_result`, {\n          params: {\n            chosenTime: parseInt(props.timeDayMonth[0]),\n            chosenDay: props.timeDayMonth[1],\n            chosenMonth: props.timeDayMonth[2],\n          },\n        })\n        .then((res) => {\n          const modelResponse = res.data;\n          setModelResponse(modelResponse);\n          console.log(\"setModelResponse has been triggered\");\n        });\n\n      setData(result.data);\n    };\n\n    fetchData();\n  }, [url]);\n\n  return (\n    <div>\n      <p>\n        This journey is estimated to take {modelResponse.model_response} minutes\n      </p>\n      <h1>{count++} times clicked</h1>\n      <button onClick={forceUpdate}>Refresh</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}